[{"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\index.js":"1","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\serviceWorker.js":"2","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\containers\\App.js":"3","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\store\\index.js":"4","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\config\\index.js":"5","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\App.js":"6","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\config\\app.js":"7","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\config\\menu.js":"8","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\config\\routes.js":"9","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\actions\\index.js":"10","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\services\\index.js":"11","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\containers\\Dashboard.js":"12","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\ErrorBoundary.jsx":"13","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\Loader.jsx":"14","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\user\\Login.jsx":"15","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\reducers\\index.js":"16","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\routeComponents.js":"17","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\actions\\users.js":"18","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\actions\\settings.js":"19","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\actions\\UI.js":"20","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\actions\\alerts.js":"21","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\services\\network.js":"22","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\services\\users.js":"23","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\services\\cash-flow.js":"24","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\services\\currency.js":"25","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\services\\account.js":"26","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\services\\payment.js":"27","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\jwt-token.js":"28","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\Dashboard.js":"29","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\Error.js":"30","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\reducers\\UI.js":"31","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\reducers\\settings.js":"32","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\reducers\\alerts.js":"33","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\reducers\\authentication.js":"34","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\reducers\\registration.js":"35","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\reducers\\users.js":"36","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\containers\\AppSettings.js":"37","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\Home.jsx":"38","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\Software.jsx":"39","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\index.js":"40","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\stock\\index.js":"41","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\sales\\index.js":"42","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\purchases\\index.js":"43","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\sfa\\index.js":"44","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\products\\index.js":"45","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\customers\\index.js":"46","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\cashflow\\index.js":"47","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\prototyping\\index.js":"48","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\constants\\index.js":"49","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\AppSettings.js":"50","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\containers\\layout\\index.js":"51","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\localStorage.js":"52","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\storeAPI.js":"53","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\csrf-token.js":"54","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\auth-header.js":"55","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\csv.js":"56","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\UI.js":"57","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\request.js":"58","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\object.js":"59","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\_date.js":"60","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\form-change-detector.js":"61","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\products\\Add.js":"62","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\products\\Reviews.js":"63","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\customers\\Show.js":"64","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\products\\Show.js":"65","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\customers\\service.js":"66","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\cashflow\\Show.js":"67","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\cashflow\\Account.js":"68","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\cashflow\\AddCashFlow.js":"69","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\constants\\alerts.js":"70","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\customers\\Create.js":"71","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\products\\ProductsPrototype.js":"72","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\constants\\UI.js":"73","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\constants\\settings.js":"74","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\constants\\users.js":"75","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\customSwitch.js":"76","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\Themes.js":"77","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\prototyping\\details.jsx":"78","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\prototyping\\DersureEditor.jsx":"79","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\hoc\\index.js":"80","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\prototyping\\uploader.jsx":"81","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\containers\\layout\\ShowSidebar.js":"82","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\containers\\layout\\Sidebar.js":"83","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\containers\\layout\\RightPane.js":"84","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\containers\\layout\\Content.js":"85","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\containers\\layout\\Header.js":"86","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Navs.jsx":"87","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\sfa\\customer\\index.js":"88","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\sfa\\sales\\index.js":"89","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\products\\reviews.service.js":"90","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\variable.js":"91","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\config\\theme.js":"92","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\form-elements.jsx":"93","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\hoc\\withTitle.js":"94","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\hoc\\withDevice.js":"95","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\ShowSidebar.js":"96","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\Sidebar.js":"97","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\RightPane.js":"98","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\Content.js":"99","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\Header.js":"100","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\index.js":"101","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\sfa\\customer\\service.js":"102","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\sfa\\sales\\service.js":"103","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\sfa\\customer\\Create.js":"104","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\sfa\\sales\\AddOrder.js":"105","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\sfa\\customer\\Customers.js":"106","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\sfa\\sales\\Show.js":"107","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\index.jsx":"108","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\CloseSidebar.js":"109","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\Search.js":"110","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\SidebarFooter.js":"111","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\NotFound.js":"112","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\Nav.js":"113","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\ChangeFontSize.js":"114","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\sfa\\sales\\Truck.js":"115","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\date-picker.jsx":"116","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Error.jsx":"117","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\rating.jsx":"118","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\MobileAddBtn.jsx":"119","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\hooks\\index.js":"120","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\index.js":"121","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\NavItem.js":"122","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\PowerOff.js":"123","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\PinFooter.js":"124","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\Settings.js":"125","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\Message.js":"126","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\Notification.js":"127","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\hooks\\useTitle.jsx":"128","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\manipulator.js":"129","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\components.js":"130","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\defaults.js":"131","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\CheckNotice.jsx":"132","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\Pagination.jsx":"133","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\Table.jsx":"134","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\Filter.jsx":"135","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\Navigation.jsx":"136","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\TableStack.jsx":"137","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\Sorter.jsx":"138","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\DisplayFilter.jsx":"139","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\AddFilter.jsx":"140","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\Create.jsx":"141","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\Download.jsx":"142","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\Search.jsx":"143","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\TableStandard.jsx":"144","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\PageMenu.jsx":"145","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\TableBody.jsx":"146","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\TableHead.jsx":"147","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\checker.jsx":"148"},{"size":2647,"mtime":1593012165107,"results":"149","hashOfConfig":"150"},{"size":5086,"mtime":1585058119499,"results":"151","hashOfConfig":"150"},{"size":1405,"mtime":1585058119437,"results":"152","hashOfConfig":"150"},{"size":142,"mtime":1592993532946,"results":"153","hashOfConfig":"150"},{"size":138,"mtime":1596724761390,"results":"154","hashOfConfig":"150"},{"size":3133,"mtime":1598517637701,"results":"155","hashOfConfig":"150"},{"size":198,"mtime":1592918106032,"results":"156","hashOfConfig":"150"},{"size":3690,"mtime":1598357259697,"results":"157","hashOfConfig":"150"},{"size":1692,"mtime":1601390387056,"results":"158","hashOfConfig":"150"},{"size":242,"mtime":1585058119353,"results":"159","hashOfConfig":"150"},{"size":401,"mtime":1574069400000,"results":"160","hashOfConfig":"150"},{"size":574,"mtime":1585058119438,"results":"161","hashOfConfig":"150"},{"size":416,"mtime":1585058119362,"results":"162","hashOfConfig":"150"},{"size":186,"mtime":1585058119379,"results":"163","hashOfConfig":"150"},{"size":3605,"mtime":1585058119422,"results":"164","hashOfConfig":"150"},{"size":375,"mtime":1585058119478,"results":"165","hashOfConfig":"150"},{"size":576,"mtime":1601449791837,"results":"166","hashOfConfig":"150"},{"size":1410,"mtime":1585058119354,"results":"167","hashOfConfig":"150"},{"size":995,"mtime":1585058119354,"results":"168","hashOfConfig":"150"},{"size":772,"mtime":1598345946045,"results":"169","hashOfConfig":"150"},{"size":340,"mtime":1585058119352,"results":"170","hashOfConfig":"150"},{"size":262,"mtime":1573214080000,"results":"171","hashOfConfig":"150"},{"size":1791,"mtime":1573821662000,"results":"172","hashOfConfig":"150"},{"size":813,"mtime":1574149754000,"results":"173","hashOfConfig":"150"},{"size":818,"mtime":1574069140000,"results":"174","hashOfConfig":"150"},{"size":807,"mtime":1573811262000,"results":"175","hashOfConfig":"150"},{"size":842,"mtime":1574069780000,"results":"176","hashOfConfig":"150"},{"size":198,"mtime":1585058119455,"results":"177","hashOfConfig":"150"},{"size":1562,"mtime":1598523372861,"results":"178","hashOfConfig":"150"},{"size":315,"mtime":1585058119361,"results":"179","hashOfConfig":"150"},{"size":1150,"mtime":1598523416590,"results":"180","hashOfConfig":"150"},{"size":1327,"mtime":1593013675842,"results":"181","hashOfConfig":"150"},{"size":549,"mtime":1585058119476,"results":"182","hashOfConfig":"150"},{"size":793,"mtime":1585058119477,"results":"183","hashOfConfig":"150"},{"size":354,"mtime":1585058119479,"results":"184","hashOfConfig":"150"},{"size":1273,"mtime":1585058119481,"results":"185","hashOfConfig":"150"},{"size":1313,"mtime":1585058119437,"results":"186","hashOfConfig":"150"},{"size":228,"mtime":1592993425412,"results":"187","hashOfConfig":"150"},{"size":1797,"mtime":1598460243602,"results":"188","hashOfConfig":"150"},{"size":618,"mtime":1596802450998,"results":"189","hashOfConfig":"150"},{"size":90,"mtime":1585058119421,"results":"190","hashOfConfig":"150"},{"size":217,"mtime":1585058119402,"results":"191","hashOfConfig":"150"},{"size":226,"mtime":1585058119398,"results":"192","hashOfConfig":"150"},{"size":653,"mtime":1593010904653,"results":"193","hashOfConfig":"150"},{"size":1163,"mtime":1598462047307,"results":"194","hashOfConfig":"150"},{"size":2020,"mtime":1598548015279,"results":"195","hashOfConfig":"150"},{"size":752,"mtime":1575542180000,"results":"196","hashOfConfig":"150"},{"size":2359,"mtime":1601478057815,"results":"197","hashOfConfig":"150"},{"size":255,"mtime":1585058119434,"results":"198","hashOfConfig":"150"},{"size":2400,"mtime":1592472002767,"results":"199","hashOfConfig":"150"},{"size":238,"mtime":1585058119446,"results":"200","hashOfConfig":"150"},{"size":494,"mtime":1585058119455,"results":"201","hashOfConfig":"150"},{"size":182,"mtime":1585058119458,"results":"202","hashOfConfig":"150"},{"size":264,"mtime":1585058119451,"results":"203","hashOfConfig":"150"},{"size":277,"mtime":1585058119450,"results":"204","hashOfConfig":"150"},{"size":572,"mtime":1581324158000,"results":"205","hashOfConfig":"150"},{"size":323,"mtime":1598346060915,"results":"206","hashOfConfig":"150"},{"size":1288,"mtime":1585058119457,"results":"207","hashOfConfig":"150"},{"size":361,"mtime":1580286884000,"results":"208","hashOfConfig":"150"},{"size":499,"mtime":1596802629339,"results":"209","hashOfConfig":"150"},{"size":1152,"mtime":1574161218000,"results":"210","hashOfConfig":"150"},{"size":5343,"mtime":1596711194328,"results":"211","hashOfConfig":"150"},{"size":4241,"mtime":1598462059690,"results":"212","hashOfConfig":"150"},{"size":3623,"mtime":1598523899713,"results":"213","hashOfConfig":"150"},{"size":11682,"mtime":1598464731020,"results":"214","hashOfConfig":"150"},{"size":933,"mtime":1593013468278,"results":"215","hashOfConfig":"150"},{"size":11814,"mtime":1597233940543,"results":"216","hashOfConfig":"150"},{"size":2371,"mtime":1580914770000,"results":"217","hashOfConfig":"150"},{"size":5343,"mtime":1596711194328,"results":"218","hashOfConfig":"150"},{"size":147,"mtime":1585058119433,"results":"219","hashOfConfig":"150"},{"size":8157,"mtime":1601393400920,"results":"220","hashOfConfig":"150"},{"size":3698,"mtime":1598364652546,"results":"221","hashOfConfig":"150"},{"size":231,"mtime":1598346188102,"results":"222","hashOfConfig":"150"},{"size":415,"mtime":1585058119435,"results":"223","hashOfConfig":"150"},{"size":623,"mtime":1585058119435,"results":"224","hashOfConfig":"150"},{"size":674,"mtime":1592472034239,"results":"225","hashOfConfig":"150"},{"size":1476,"mtime":1592923933302,"results":"226","hashOfConfig":"150"},{"size":1759,"mtime":1601475598202,"results":"227","hashOfConfig":"150"},{"size":625,"mtime":1601478334498,"results":"228","hashOfConfig":"150"},{"size":466,"mtime":1598453857366,"results":"229","hashOfConfig":"150"},{"size":1183,"mtime":1601478516542,"results":"230","hashOfConfig":"150"},{"size":317,"mtime":1585058119445,"results":"231","hashOfConfig":"150"},{"size":438,"mtime":1585058119446,"results":"232","hashOfConfig":"150"},{"size":384,"mtime":1585058119443,"results":"233","hashOfConfig":"150"},{"size":428,"mtime":1592993336695,"results":"234","hashOfConfig":"150"},{"size":682,"mtime":1598440988154,"results":"235","hashOfConfig":"150"},{"size":911,"mtime":1601475388733,"results":"236","hashOfConfig":"150"},{"size":2043,"mtime":1593072848934,"results":"237","hashOfConfig":"150"},{"size":2076,"mtime":1593072862020,"results":"238","hashOfConfig":"150"},{"size":172,"mtime":1596812417344,"results":"239","hashOfConfig":"150"},{"size":239,"mtime":1587808670135,"results":"240","hashOfConfig":"150"},{"size":187,"mtime":1585058119431,"results":"241","hashOfConfig":"150"},{"size":5200,"mtime":1596638512489,"results":"242","hashOfConfig":"150"},{"size":222,"mtime":1598453846978,"results":"243","hashOfConfig":"150"},{"size":318,"mtime":1598453486587,"results":"244","hashOfConfig":"150"},{"size":417,"mtime":1585058119390,"results":"245","hashOfConfig":"150"},{"size":1064,"mtime":1597311198681,"results":"246","hashOfConfig":"150"},{"size":3207,"mtime":1598340469330,"results":"247","hashOfConfig":"150"},{"size":1693,"mtime":1601462375063,"results":"248","hashOfConfig":"150"},{"size":2353,"mtime":1598548631676,"results":"249","hashOfConfig":"150"},{"size":332,"mtime":1601457296293,"results":"250","hashOfConfig":"150"},{"size":933,"mtime":1593013468278,"results":"251","hashOfConfig":"150"},{"size":921,"mtime":1593013133602,"results":"252","hashOfConfig":"150"},{"size":8177,"mtime":1598372443414,"results":"253","hashOfConfig":"150"},{"size":7253,"mtime":1598372443402,"results":"254","hashOfConfig":"150"},{"size":11226,"mtime":1598439982397,"results":"255","hashOfConfig":"150"},{"size":11121,"mtime":1598372443402,"results":"256","hashOfConfig":"150"},{"size":4412,"mtime":1601388775811,"results":"257","hashOfConfig":"150"},{"size":388,"mtime":1585058119376,"results":"258","hashOfConfig":"150"},{"size":672,"mtime":1585058119388,"results":"259","hashOfConfig":"150"},{"size":359,"mtime":1585058119392,"results":"260","hashOfConfig":"150"},{"size":389,"mtime":1585058119365,"results":"261","hashOfConfig":"150"},{"size":1611,"mtime":1597392786086,"results":"262","hashOfConfig":"150"},{"size":794,"mtime":1592905145895,"results":"263","hashOfConfig":"150"},{"size":1187,"mtime":1593072886109,"results":"264","hashOfConfig":"150"},{"size":825,"mtime":1574079068000,"results":"265","hashOfConfig":"150"},{"size":585,"mtime":1574152572000,"results":"266","hashOfConfig":"150"},{"size":478,"mtime":1596810057358,"results":"267","hashOfConfig":"150"},{"size":624,"mtime":1598508528776,"results":"268","hashOfConfig":"150"},{"size":65,"mtime":1598453728686,"results":"269","hashOfConfig":"150"},{"size":471,"mtime":1585058119395,"results":"270","hashOfConfig":"150"},{"size":2624,"mtime":1597314102246,"results":"271","hashOfConfig":"150"},{"size":723,"mtime":1592994121481,"results":"272","hashOfConfig":"150"},{"size":256,"mtime":1585058119386,"results":"273","hashOfConfig":"150"},{"size":755,"mtime":1585058119389,"results":"274","hashOfConfig":"150"},{"size":3169,"mtime":1585058119381,"results":"275","hashOfConfig":"150"},{"size":3352,"mtime":1585058119385,"results":"276","hashOfConfig":"150"},{"size":400,"mtime":1598456070952,"results":"277","hashOfConfig":"150"},{"size":2802,"mtime":1608564881126,"results":"278","hashOfConfig":"150"},{"size":209,"mtime":1598372589818,"results":"279","hashOfConfig":"150"},{"size":343,"mtime":1598449115206,"results":"280","hashOfConfig":"150"},{"size":977,"mtime":1598375014261,"results":"281","hashOfConfig":"150"},{"size":951,"mtime":1598464427933,"results":"282","hashOfConfig":"150"},{"size":177,"mtime":1598283860342,"results":"283","hashOfConfig":"150"},{"size":2689,"mtime":1598546011822,"results":"284","hashOfConfig":"150"},{"size":1276,"mtime":1597234732467,"results":"285","hashOfConfig":"150"},{"size":1741,"mtime":1598516380836,"results":"286","hashOfConfig":"150"},{"size":1426,"mtime":1598338508668,"results":"287","hashOfConfig":"150"},{"size":1258,"mtime":1598546163642,"results":"288","hashOfConfig":"150"},{"size":1627,"mtime":1598545877545,"results":"289","hashOfConfig":"150"},{"size":573,"mtime":1598508850829,"results":"290","hashOfConfig":"150"},{"size":484,"mtime":1598339298087,"results":"291","hashOfConfig":"150"},{"size":733,"mtime":1598339848113,"results":"292","hashOfConfig":"150"},{"size":1229,"mtime":1598426227564,"results":"293","hashOfConfig":"150"},{"size":720,"mtime":1597418938375,"results":"294","hashOfConfig":"150"},{"size":2081,"mtime":1598515256861,"results":"295","hashOfConfig":"150"},{"size":1862,"mtime":1598426097212,"results":"296","hashOfConfig":"150"},{"size":496,"mtime":1598376571918,"results":"297","hashOfConfig":"150"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},"1dzanhp",{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"300"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"300"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"300"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"300"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"300"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"300"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"300"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"300"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"300"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"300"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"300"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"300"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"300"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"300"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"300"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"300"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"300"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"300"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"300"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517","usedDeprecatedRules":"300"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"300"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"300"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"300"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"300"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"300"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"300"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"554","usedDeprecatedRules":"300"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"300"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600","usedDeprecatedRules":"300"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"617"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\index.js",[],["624","625"],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\serviceWorker.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\containers\\App.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\store\\index.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\config\\index.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\App.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\config\\app.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\config\\menu.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\config\\routes.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\actions\\index.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\services\\index.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\containers\\Dashboard.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\ErrorBoundary.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\Loader.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\user\\Login.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\reducers\\index.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\routeComponents.js",["626"],"import DashBoard from './Home'\r\nimport * as Purchase from './purchases'\r\nimport * as Sales from './sales'\r\nimport Stock from './stock'\r\nimport Settings from '../containers/AppSettings'\r\nimport CashFlow from './cashflow'\r\nimport SFA from './sfa'\r\nimport Products from './products'\r\nimport Customers from './customers'\r\nimport Software from './Software'\r\nimport Prototyping from './prototyping'\r\n\r\nexport default {\r\n    DashBoard,\r\n    Purchase,\r\n    Sales,\r\n    Stock,\r\n    Settings,\r\n    CashFlow,\r\n    SFA,\r\n    Products,\r\n    Customers,\r\n    Software,\r\n    Prototyping,\r\n}\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\actions\\users.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\actions\\settings.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\actions\\UI.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\actions\\alerts.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\services\\network.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\services\\users.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\services\\cash-flow.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\services\\currency.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\services\\account.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\services\\payment.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\jwt-token.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\Dashboard.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\Error.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\reducers\\UI.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\reducers\\settings.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\reducers\\alerts.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\reducers\\authentication.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\reducers\\registration.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\reducers\\users.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\containers\\AppSettings.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\Home.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\Software.jsx",["627"],"import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { isBoolean, startCase } from 'lodash'\r\nimport { withDevice } from './hoc'\r\n\r\nconst CustomList = props => (\r\n    <ul className=\"custom-list\">\r\n        { props.data.map( ( {label, text}, index ) => isBoolean(text) ? null : (\r\n            <li key={index} className=\"clearfix\">\r\n                <label>{label}</label>\r\n                <span>{text}</span>\r\n            </li>            \r\n        ) ) }\r\n    </ul>\r\n)\r\n\r\nconst Software = ({device, setTitle}) => {\r\n    setTitle('Inventory Management System (IMS)')\r\n    \r\n    const user = useSelector(state => state.auth.user)\r\n    const specs = Object.keys(device).map( key => ({ label: startCase(key), text: device[key] }) )\r\n    \r\n    return (\r\n        <>\r\n            <div>\r\n                <h4 className=\"mb-3\">Account</h4>\r\n                <CustomList data={[\r\n                    { label: 'Name', text: user.name },\r\n                    { label: 'Email', text: user.email },\r\n                    { label: 'Role', text: 'Administrator' },\r\n                    { label: 'Token', text: 'Available' }\r\n                ]} />\r\n            </div>\r\n\r\n            <hr />\r\n\r\n            <div>\r\n                <h4 className=\"mb-3\">Device specifications</h4>\r\n                <CustomList data={specs} />\r\n            </div>\r\n\r\n            <hr />\r\n\r\n            <div>\r\n                <h4 className=\"mb-3\">Support</h4>\r\n                <CustomList data={[\r\n                    { label: 'Manufacturer', text: 'Dersure Limited' },\r\n                    { label: 'Website', text: <a href=\"https://dersure.com\" target=\"_blank\">Online support</a> }\r\n                ]} />                \r\n            </div>            \r\n        </>    \r\n    )\r\n}\r\n\r\nexport default withDevice(Software)\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\index.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\stock\\index.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\sales\\index.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\purchases\\index.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\sfa\\index.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\products\\index.js",["628","629","630"],"import React, { useEffect, useState } from 'react'\r\nimport { Route, Link, Switch } from 'react-router-dom'\r\nimport Show from './Show'\r\nimport Add from './Add'\r\nimport './products.scss'\r\nimport Reviews from './Reviews'\r\nimport ProductsPrototype from './ProductsPrototype'\r\n\r\nconst Categories = () => <h2>This is the Categories of our products</h2>\r\n\r\nconst Products = ({ match, ...props }) => (\r\n    <>\r\n        <Route exact path={match.path} render={ routeProps => <Show {...routeProps} {...props} /> } />\r\n        <Switch>\r\n            <Route path={`${match.path}/add`} render={ () => <Add type={0} /> } />\r\n            <Route path={`${match.path}/categories`} render={ routeProps => <Categories {...routeProps} {...props} />  } />\r\n            <Route path={`${match.path}/prototype`} render={ routeProps => <ProductsPrototype {...routeProps} {...props} />  } />\r\n            <Route path={`${match.path}/reviews`} render={ routeProps => <Reviews {...routeProps} {...props} />  } />\r\n            <Route path={`${match.path}/:id`} render={ routeProps => <Add type={1} {...routeProps} {...props} /> } />\r\n        </Switch>\r\n    </>  \r\n)\r\n\r\nexport default Products\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\customers\\index.js",["631","632","633"],"import React, { useEffect, useState } from 'react'\r\nimport { Route, Link, Switch } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Service } from './service'\r\nimport ShowCustomers from './Show'\r\nimport Create from './Create'\r\nimport { alertActions } from '../../actions'\r\nimport './customer.scss'\r\n\r\nconst Customers = ({ match, dispatch, setTitle }) => {\r\n    setTitle('Customers')\r\n\r\n    const [ data, setData ] = useState({ loaded: false, data: [], error: false })\r\n\r\n    useEffect(() => {\r\n        Service.getAll()\r\n            .then(\r\n                response => setData({ ...data, ...{loaded: true, data: response.data} }),\r\n                error => {\r\n                    let msg\r\n                    if ( error.response ) {\r\n                        msg = error.response.status !== 500 ? error.response.data : 'Oops, something went wrong'\r\n                    } else {\r\n                        msg = error.toString()\r\n                    }\r\n                    setData({ ...data, ...{loaded: true, error: true} })\r\n                    dispatch(alertActions.error('Unable to retrieve data'))\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Route exact path={match.path} render={ props => <ShowCustomers response={data} update={setData} {...props} /> } />\r\n\r\n            <Switch>\r\n                <Route path={`${match.path}/segments`} component={() => (\r\n                    <>\r\n                        <h5>Customer Segmentations!</h5>\r\n                        <p>This is the practice of dividing a customer base into groups of individuals that are similar in specific ways relevant to marketing, such as age, gender, interests and spending habits.</p>\r\n                    </>\r\n                )} />\r\n                \r\n                <Route path={`${match.path}/:id`} render={ props => <Create response={data} update={setData} {...props} /> } />                \r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect()(Customers)\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\cashflow\\index.js",["634","635","636"],"import React, { useEffect, useState } from 'react'\r\nimport { Route, Link, Switch } from 'react-router-dom'\r\nimport Show from './Show'\r\nimport AddCashFlow from './AddCashFlow'\r\nimport Account from './Account'\r\nimport './cashflow.scss'\r\n\r\nconst CashFlow = ({ match }) => (\r\n    <>\r\n        <Route exact path={match.path} render={ props => <Show {...props} /> } />\r\n        <Switch>\r\n            <Route path={`${match.path}/add`} render={ () => <AddCashFlow type={0} /> } />\r\n            <Route path={`${match.path}/accounts`} render={ props => <Account {...props} />  } />\r\n            <Route path={`${match.path}/:id`} render={ props => <AddCashFlow type={1} {...props} /> } />              \r\n        </Switch>\r\n    </>  \r\n)\r\n\r\nexport default CashFlow\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\prototyping\\index.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\constants\\index.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\AppSettings.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\containers\\layout\\index.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\localStorage.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\storeAPI.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\csrf-token.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\auth-header.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\csv.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\UI.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\request.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\object.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\_date.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\form-change-detector.js",["637","638","639","640","641","642"],"const formChanges = form => {\r\n\t// get form\r\n\tif (typeof form == \"string\") form = document.getElementById(form);\r\n\tif (!form || !form.nodeName || form.nodeName.toLowerCase() != \"form\") return null;\r\n\r\n\t// find changed elements\r\n\tvar changed = [], n, c, def, o, ol, opt;\r\n\tfor (var e = 0, el = form.elements.length; e < el; e++) {\r\n\t\tn = form.elements[e];\r\n\t\tc = false;\r\n\r\n\t\tswitch (n.nodeName.toLowerCase()) {\r\n\r\n\t\t\t// select boxes\r\n\t\t\tcase \"select\":\r\n\t\t\t\tdef = 0;\r\n\t\t\t\tfor (o = 0, ol = n.options.length; o < ol; o++) {\r\n\t\t\t\t\topt = n.options[o];\r\n\t\t\t\t\tc = c || (opt.selected != opt.defaultSelected);\r\n\t\t\t\t\tif (opt.defaultSelected) def = o;\r\n\t\t\t\t}\r\n\t\t\t\tif (c && !n.multiple) c = (def != n.selectedIndex);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// input / textarea\r\n\t\t\tcase \"textarea\":\r\n\t\t\tcase \"input\":\r\n\r\n\t\t\t\tswitch (n.type.toLowerCase()) {\r\n\t\t\t\t\tcase \"checkbox\":\r\n\t\t\t\t\tcase \"radio\":\r\n\t\t\t\t\t\t// checkbox / radio\r\n\t\t\t\t\t\tc = (n.checked != n.defaultChecked);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t// standard values\r\n\t\t\t\t\t\tc = (n.value != n.defaultValue);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (c) changed.push(n);\r\n\t}\r\n\r\n\treturn changed;\r\n}\r\n\r\nexport default formChanges","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\products\\Add.js",["643","644"],"import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Field, DateTime, ProcessError } from '../fragment'\r\nimport { cashFlowService, AccountService, PaymentService } from '../../services'\r\nimport { alertActions } from '../../actions'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst AddCashFlow = ({ dispatch, type, match, history }) => {\r\n    const [ inputs, setInputs ] = useState({})\r\n    const [ currency, setCurrency ] = useState([])\r\n    const [ method, setMethod ] = useState([])\r\n    const [ account, setAccount ] = useState([])\r\n    const [ error, setError ] = useState(null)\r\n\r\n    useEffect( () => {\r\n        PaymentService.getAll().then( response => setMethod(response.data) )\r\n        AccountService.getAll().then( response => {\r\n            response.data.map( data => data.name = `${data.name} (${data.number})` )\r\n            setAccount(response.data)\r\n        } )\r\n\r\n        if ( type ) {\r\n            cashFlowService.getOne(match.params.id).then( ({ data }) => {\r\n                data.type = ( data.amount > 0 ) ? 1 : 0\r\n                data.amount = Math.abs(data.amount)\r\n                data.date = new Date(data.date)\r\n                setInputs(data)\r\n            }, e => setError(e.response ? e.response.statusText : 'Oops, something went wrong') )\r\n        }\r\n    }, [] )\r\n\r\n    useEffect( () => {\r\n        if ( currency.length === 0 ) {\r\n            if ( type && 'account_id' in inputs ) {\r\n                const acc = account.find( ({id}) => id === inputs.account_id )\r\n                setCurrency(acc ? acc.currency : [])\r\n            }\r\n        }\r\n    }, [inputs.account_id] )\r\n\r\n    const _handleChange = (e) => {\r\n        setInputs({ ...inputs, ...{ [e.target.name]: e.target.value } })\r\n        //e.persist()\r\n    }\r\n\r\n    const handleAccount = (e) => {\r\n        const acc = account.find( ({id}) => id === parseInt(e.target.value) )\r\n        _handleChange(e)\r\n        setCurrency(acc ? acc.currency : [])\r\n    }\r\n\r\n    const handleDate = date => setInputs({ ...inputs, ...{ date } })\r\n\r\n    const submitHandler = (e) => {\r\n        cashFlowService.create(inputs).then(\r\n            (response) => {\r\n                if ( type === 0 ) {\r\n                    setInputs({})\r\n                }\r\n\r\n                dispatch(alertActions.success(response.data))\r\n            },\r\n            error => {\r\n                let msg = error.response ? <ProcessError errors={error.response.data} /> : error\r\n                dispatch(alertActions.error(msg))\r\n            }\r\n        )\r\n\r\n        e.preventDefault()\r\n    }\r\n\r\n    const handleUndo = () => {\r\n        console.log(inputs.id)\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        cashFlowService.delete(inputs.id).then(\r\n            (response) => {\r\n                dispatch(alertActions.success(<div>{response.data} <button className=\"btn btn-sm text-info\" onClick={handleUndo}>UNDO</button></div>))\r\n                history.push('/cashflow')\r\n            },\r\n            error => dispatch(alertActions.error( error.response && error.response.status !== 500 ? error.response.data : error.toString() ))\r\n        )\r\n    }\r\n\r\n    const fields = [\r\n        { name: 'account_id', type: 'select', label: 'Account', options: account, required: true },\r\n        { name: 'currency_id', type: 'radio', label: 'Currency', values: currency, required: true },\r\n        { name: 'payment_method_id', type: 'select', label: 'Payment Method', options: method, required: true },\r\n        { name: 'amount', type: 'text', label: 'Amount', required: true },\r\n        { name: 'date', type: 'text', label: 'Date', required: true },\r\n        { name: 'comments', type: 'textarea', label: 'Comments' },\r\n    ]\r\n\r\n    if ( type && error ) {\r\n        return <p className=\"text-danger\">{error}</p>\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-wrapper mx-auto py-4 px-3\">\r\n            <h4 className=\"heading mb-3\">{ type === 0 ? 'Add' : 'Update' } Cash flow</h4>\r\n\r\n            <form name=\"cashflow\" className=\"pre-disabled\" onSubmit={submitHandler}>\r\n                <select name=\"type\" className=\"custom-select custom-select-sm d-inline\" value={inputs['type']} onChange={_handleChange} required>\r\n                    { ! type ? <option value=\"\">Type</option> : null }\r\n                    <option value=\"1\">CREDIT</option>\r\n                    <option value=\"0\">DEBIT</option>\r\n                </select>\r\n\r\n                <hr />\r\n\r\n                { fields.map (\r\n                    (field) => field.name === 'date'\r\n                    ? <DateTime key={field.name} name={field.name} label={field.label} value={inputs[field.name]} handleChange={handleDate} />\r\n                    : <Field key={field.name} field={field} value={inputs[field.name]} handleChange={field.name === 'account_id' ? handleAccount : _handleChange} />\r\n                ) }\r\n\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <button type=\"submit\" className=\"btn\" id=\"submit\"><FontAwesomeIcon icon=\"save\" /> Save</button>\r\n                    { type ? <button type=\"button\" className=\"btn\" onClick={handleDelete}><FontAwesomeIcon icon=\"trash\" /> Delete</button> : null }                    \r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default connect()(AddCashFlow)\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\products\\Reviews.js",["645","646","647","648","649"],"import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport truncate from 'lodash/truncate'\r\nimport fakeReviews from './reviews.service'\r\nimport { alertActions } from '../../actions'\r\nimport { _object, csv, dateFormatter } from '../../helpers'\r\nimport DersureTable from '../fragment/Table'\r\nimport { Rating } from '../fragment'\r\n\r\nconst Reviews = ({ dispatch, setTitle }) => {\r\n    setTitle('Product Reviews')\r\n\r\n    const [ data, setData ] = useState([])\r\n    const [ loaded, setLoaded ] = useState(false)\r\n    const translateStatus = ['pending', 'accepted', 'rejected']\r\n\r\n    useEffect(() => {\r\n        let faker = require('faker'), fake = [], _date = new dateFormatter()\r\n\r\n        for ( let counter = 1; counter <= 60; counter++ ) {\r\n            let obj = {\r\n                id: counter,\r\n                date: _date.getTime(faker.date.recent()),\r\n                customer: faker.name.findName(),\r\n                product: faker.commerce.productName(),\r\n                rating: faker.random.number({ min: 1, max: 5 }),\r\n                comment: faker.lorem.words(20),\r\n                status: translateStatus[faker.random.number(2)],\r\n            }\r\n\r\n            let arr = [\r\n                _date.getTime(faker.date.recent()),\r\n                faker.name.findName(),\r\n                faker.commerce.productName(),\r\n                faker.random.number({ min: 1, max: 5 }),\r\n                faker.lorem.words(20),\r\n                translateStatus[faker.random.number(2)],\r\n            ]\r\n\r\n            fake.push(arr)\r\n        }\r\n        \r\n        setData(fake)\r\n        setLoaded(true)\r\n\r\n        fakeReviews()\r\n            .then(\r\n                response => {\r\n                    //setData(response.data)\r\n                    //setLoaded(true)\r\n                },\r\n                error => {\r\n                    let msg\r\n                    if ( error.response ) {\r\n                        msg = error.response.status !== 500 ? error.response.data : 'Oops, something went wrong'\r\n                    } else {\r\n                        msg = error.toString()\r\n                    }\r\n                    dispatch(alertActions.error(msg))\r\n                }\r\n            )  \r\n    }, [])\r\n\r\n    if ( loaded ) {    \r\n        if ( data.length > 0 ) {\r\n            const columns = ['Date', 'Customer', 'Product', 'Rating', 'Comment', 'Status']\r\n            const options = {\r\n                sortOrder: {\r\n                    name: 'date',\r\n                    direction: 'desc',\r\n                }\r\n            }\r\n            const columns2 = [\r\n                { name: 'date', label: 'Date', options: { filterable: false, sortable: true, } },\r\n                { name: 'customer', label: 'Customer', options: { filterable: true, sortable: true, } },\r\n                { name: 'product', label: 'Product', options: { filterable: true, sortable: true, } },\r\n                { name: 'rating', label: 'Rating', options: { filterable: false, sortable: true, } },\r\n                { name: 'comment', label: 'Comment', options: { filterable: false, sortable: false, } },\r\n                { name: 'status', label: 'Status', options: { filterable: true, sortable: true, } },\r\n            ]\r\n\r\n            const columnDefs = [\r\n                {\r\n                    render: (data) => <Rating rate={data} />,\r\n                    targets: [3]\r\n                },                \r\n                {\r\n                    render: text => truncate( text, { length: 50, separator: /,? +/ } ),\r\n                    targets: [4]\r\n                },\r\n                {\r\n                    sortable: false,\r\n                    targets: [0, 4]\r\n                },\r\n                {\r\n                    visible: false,\r\n                    targets: 5\r\n                },          \r\n            ]\r\n\r\n            return <DersureTable\r\n                title=\"Product Reviews\"\r\n                columns={columns}\r\n                data={data}\r\n                options={options}\r\n                columnDefs={columnDefs}\r\n            />                                   \r\n        } else {\r\n            return <p className=\"h5\">No results found</p>\r\n        }\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nexport default connect()(Reviews)\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\customers\\Show.js",["650"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport DersureTable from '../fragment/Table'\r\nimport { _object } from '../../helpers'\r\nimport user from '../../images/user.jpg'\r\n\r\nconst ShowCustomers = ({ match, history, response }) => {\r\n    const { loaded, data } = response\r\n\r\n    if ( loaded ) {\r\n        if ( data.length > 0 ) {\r\n            const columns = [\r\n                {\r\n                    name: 'name',\r\n                    label: 'Customer',\r\n                    options: {\r\n                        render: (cellData, data) => <Link to={`${match.url}/${data.id}`} className=\"d-flex align-items-center\">\r\n                            <img src={user} alt=\"IMG\" className=\"img-fluid rounded-circle mr-2\" style={{ width: '25px', height: '25px' }} />\r\n                            {cellData}\r\n                        </Link>\r\n                    }\r\n                },\r\n                { name: 'city', label: 'Location', options: { filterable: true } },\r\n                { name: 'order', label: 'Orders' },\r\n                {\r\n                    name: 'totalspent',\r\n                    label: 'Total Spent',\r\n                    options: { render: cellData => cellData.toFixed(2) } \r\n                },\r\n                { name: 'lastseen', label: 'Last Seen' },\r\n            ]\r\n\r\n            const options = {\r\n                create: true,\r\n                select: true,\r\n                shadow: true,\r\n                onRowClick: ({rowData}) => history.push(`${match.path}/${rowData.id}`),\r\n                customStackRender: props => {\r\n                    const { id, lastseen, name, order, totalspent } = props.data[props.dataIndex]\r\n                    \r\n                    return (\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header flexer2 bg-white\">\r\n                                <div className=\"flexer\">\r\n                                    <img src={user} alt=\"IMG\" className=\"img-fluid rounded-circle\" style={{ width: '45px', height: '45px' }} />\r\n                                    <h5 className=\"mx-3 mb-0 text-black\">{name}</h5>                                    \r\n                                </div>\r\n\r\n                                <Link to={`${match.url}/${id}`}><FontAwesomeIcon icon=\"pen\" /></Link>\r\n                            </div>\r\n\r\n                            <div className=\"card-body\">\r\n                                <p className=\"card-text\">Visited Since {lastseen}</p>\r\n                                <p className=\"card-text\">Orders: {order}</p>\r\n                                <p className=\"card-text\">Total Spent: {totalspent.toFixed(2)}</p>\r\n                            </div>\r\n\r\n                            <div className=\"px-3 pb-3\">\r\n                                <span className=\"badge badge-pill badge-secondary p-2 mx-1\">Regular</span>\r\n                                <span className=\"badge badge-pill badge-secondary p-2 mx-1\">Returns</span>\r\n                                <span className=\"badge badge-pill badge-secondary p-2 mx-1\">Reviewer</span>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n\r\n            return <DersureTable title=\"Customers\" columns={columns} data={data} options={options} />\r\n        } else {\r\n            return <Link to={`${match.path}/create`} className=\"btn btn-sm anchor m-5\"><FontAwesomeIcon icon=\"plus\" /> Create Customer</Link>\r\n        }\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nexport default ShowCustomers\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\products\\Show.js",["651","652"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { cashFlowService } from '../../services'\r\nimport { alertActions } from '../../actions'\r\nimport { chunk, truncate, orderBy } from 'lodash'\r\nimport queryString from 'query-string'\r\nimport { Dropdown, ButtonGroup } from 'react-bootstrap'\r\nimport { Select } from '../fragment/form-elements'\r\nimport startCase from 'lodash/startCase'\r\nimport { _object, csv } from '../../helpers'\r\nimport { MobileAddBtn } from '../fragment'\r\n\r\nconst Show = ({ match, location, history, dispatch }) => {\r\n    const search = location.search ? queryString.parse(location.search) : {\r\n        filter: JSON.stringify({}), sort: 'id', order: 'asc', page: 1, perPage: 10\r\n    }\r\n    \r\n    const [ data, setData ] = useState([])\r\n    const [ loaded, setLoaded ] = useState(false)\r\n    const [ filters, setFilters ] = useState({})\r\n    //const [ filterValue, setFilterValue ] = useState({})\r\n    const path = location.pathname\r\n\r\n    useEffect(() => {\r\n        cashFlowService.getAll()\r\n            .then(\r\n                response => {\r\n                    setData(response.data)\r\n                    setLoaded(true)\r\n                },\r\n                error => {\r\n                    let msg\r\n                    if ( error.response ) {\r\n                        msg = error.response.status !== 500 ? error.response.data : 'Oops, something went wrong'\r\n                    } else {\r\n                        msg = error.toString()\r\n                    }\r\n                    dispatch(alertActions.error(msg))\r\n                }\r\n            )        \r\n    }, [])\r\n\r\n    useEffect( () => updateFilters(JSON.parse(search.filter)), [loaded, search.filter] )\r\n\r\n    const updateFilters = (data = {}, filters = {}) => {\r\n        Object.keys(data).map( k => filters[k] = filterComponent(k, data[k]) )\r\n        setFilters(filters)\r\n    }\r\n    \r\n    const pageHandler = page => pushSearch({page})\r\n\r\n    const perPageHandler = e => pushSearch({perPage: e.currentTarget.value})\r\n\r\n    const searchHandler = e => {\r\n        let q = e.target.value\r\n        if (q) console.log(q)\r\n    }\r\n\r\n    const filterComponent = (filter, value = '') => <Select key={filter} name={filter} label={startCase(filter)} value={value} values={[...new Set(data.map(item => item[filter]))]} handleChange={filterHandler} />\r\n\r\n    const addFilter = filter => {\r\n        let queryFilters = JSON.parse(search.filter)\r\n        setFilters({ ...filters, ...{ [filter]: filterComponent(filter, queryFilters[filter]) } })\r\n    }\r\n\r\n    const removeFilter = filter => {\r\n        delete filters[filter]\r\n        setFilters({ ...filters })\r\n\r\n        let query_filter = JSON.parse(search.filter)\r\n        delete query_filter[filter]\r\n        \r\n        pushSearch({ page: 1, filter: JSON.stringify(query_filter) })\r\n    }\r\n\r\n    const filterHandler = (e, filter) => {\r\n        let parse_filter = JSON.parse(search.filter),\r\n            input = e.target.value,\r\n            nFilter = { ...parse_filter, ...{ [filter]: input } }\r\n\r\n        pushSearch({ page: 1, filter: JSON.stringify(nFilter) })\r\n    }\r\n\r\n    const sortHandler = text => {\r\n        const order = (search.sort === text) ? search.order === 'asc' ? 'desc' : 'asc' : 'asc'\r\n        pushSearch({ sort: text, page: 1, order })\r\n    }\r\n\r\n    const pushSearch = obj => history.push(`${path}?${queryString.stringify({ ...search, ...obj })}`)\r\n\r\n    const csvData = data => {\r\n        let csv = []\r\n        for (let res of data) {\r\n            csv.push({\r\n                Date: res.date,\r\n                \"Payment Method\": res.payment_method,\r\n                Account: `${res.account} (${res.currency})`,\r\n                Amount: res.symbol + res.amount.toFixed(2),\r\n                Comments: res.comments\r\n            })\r\n        }\r\n        return csv\r\n    }\r\n    \r\n    const navigationInfo = (current, perPage, batchLen, totalLen) => {\r\n        let i = current - 1,\r\n            to = current === batchLen ? totalLen : current * perPage\r\n\r\n        return `${i * perPage + 1} - ${to} of ${totalLen}`\r\n    }\r\n\r\n    if ( loaded ) {    \r\n        if ( data.length > 0 ) {\r\n            const { sort, order } = search\r\n            const perPage = parseInt(search.perPage)\r\n            const page = parseInt(search.page)\r\n            const filter = _object.clean(JSON.parse(search.filter))\r\n\r\n            // filter data\r\n            const filtered = data\r\n                .filter( row => filter.payment_method ? row.payment_method === filter.payment_method : true )\r\n                .filter( row => filter.currency ? row.currency === filter.currency : true )\r\n                .filter( row => filter.account ? row.account === filter.account : true )\r\n\r\n            const orderData = orderBy(filtered, [sort], [order])\r\n\r\n            let chunkData = chunk(orderData, perPage),\r\n                current = chunkData[page-1] ? chunkData[page-1] : []\r\n\r\n            const arrow = column => {\r\n                if (column === sort)\r\n                    return <FontAwesomeIcon className=\"small\" icon={order === 'asc' ? 'arrow-up' : 'arrow-down'} />\r\n\r\n                return null\r\n            }\r\n\r\n            const FilterList = ({list = []}) => {\r\n                const added = list.every(filter => filter in filters)\r\n\r\n                return added ? null : (\r\n                    <Dropdown as={ButtonGroup}>\r\n                        <Dropdown.Toggle as=\"a\" id=\"filter-dropdown\" bsPrefix=\"btn btn-sm anchor mr-2\">\r\n                            <FontAwesomeIcon icon=\"filter\" /> Add Filter\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            { list.map( (filter, i) => filter in filters ? null : <Dropdown.Item as=\"button\" key={i} onClick={ () => addFilter(filter) }>{startCase(filter)}</Dropdown.Item> ) }\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                )\r\n            }\r\n            \r\n            return (\r\n                <>\r\n                    <div className=\"toolbar-root d-flex justify-content-between mb-4\">\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"_search d-none\">\r\n                                <input type=\"search\" className=\"form-control form-control-sm\" placeholder=\"Search\" onKeyUp={searchHandler} />\r\n                            </div>\r\n\r\n                            {  Object.keys(filters).map( filter => (\r\n                                <div key={filter} className=\"d-flex align-items-center ml-3\">\r\n                                    <span className=\"mr-2\" onClick={() => removeFilter(filter)}><FontAwesomeIcon icon=\"times\" /></span>\r\n                                    {filters[filter]}\r\n                                </div>\r\n                            ) ) }                         \r\n                        </div>\r\n\r\n                        <div className=\"_action\">\r\n                            <Link to={`${match.path}/add`} className=\"btn btn-sm anchor mr-2\"><FontAwesomeIcon icon=\"plus\" /> Create</Link>\r\n                            <FilterList list={[ 'payment_method', 'account', 'currency']} /> \r\n                            <button className=\"btn btn-sm\" onClick={ () => csv(csvData(filtered), 'Cash Flow') }><FontAwesomeIcon icon=\"file-export\" /> Export</button>                      \r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"content-body\">\r\n                        <table className=\"table table-sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('id')}>Id {arrow('id')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('date')}>Date {arrow('date')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('payment_method')}>Payment Method {arrow('payment_method')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('account')}>Account {arrow('account')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('amount')}>Amount {arrow('amount')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('comments')}>Comments {arrow('comments')}</span></th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                { current.map( ({ id, amount, comments, date, symbol, account, payment_method }) => (\r\n                                    <tr key={id} className={ amount < 0 ? 'debit' : 'credit' }>\r\n                                        <td>{id}</td>\r\n                                        <td>{date}</td>\r\n                                        <td>{payment_method}</td>\r\n                                        <td>{account}</td>\r\n                                        <td>{symbol}{amount.toFixed(2)}</td>\r\n                                        <td>{truncate(comments, {length: 50, separator: /,? +/})}</td>\r\n                                        <td>\r\n                                            <Link to={`${match.url}/${id}`} className=\"btn btn-sm\">\r\n                                                <FontAwesomeIcon icon=\"link\" />\r\n                                            </Link>\r\n                                        </td>\r\n                                    </tr>                                        \r\n                                ) ) }\r\n                            </tbody>\r\n                        </table>\r\n                    </div> \r\n\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <MobileAddBtn to={`${match.path}/add`} />\r\n                        <div className=\"_action\">\r\n                            <label>Rows per page:</label>\r\n\r\n                            <select className=\"border-0 mr-4 pl-1 font-weight-bold\" value={perPage} onChange={perPageHandler}>\r\n                                <option value=\"5\">5</option>\r\n                                <option value=\"10\">10</option>\r\n                                <option value=\"25\">25</option>\r\n                                <option value=\"50\">50</option>\r\n                            </select>\r\n                            \r\n                            { chunkData.length > 1 ? <span className=\"mr-4\">{navigationInfo(page, perPage, chunkData.length, filtered.length)}</span> : null }\r\n\r\n                            <span className=\"navigation\">\r\n                                <button className=\"btn\" disabled={page === 1} onClick={() => pageHandler(page - 1)}><FontAwesomeIcon icon=\"chevron-left\" /></button>\r\n                                <label>{page} of {chunkData.length}</label>\r\n                                <button className=\"btn\" disabled={page === chunkData.length} onClick={() => pageHandler(page + 1)}><FontAwesomeIcon icon=\"chevron-right\" /></button>\r\n                            </span>\r\n                        </div>\r\n                    </div>                                      \r\n                </>                \r\n            )\r\n        } else {\r\n            return <Link to={`${match.path}/add`} className=\"btn btn-sm mr-2\"><FontAwesomeIcon icon=\"plus\" /> Add Cash Flow</Link>\r\n        }\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nexport default connect()(Show)\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\customers\\service.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\cashflow\\Show.js",["653","654"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { cashFlowService } from '../../services'\r\nimport { alertActions } from '../../actions'\r\nimport { chunk, truncate, orderBy } from 'lodash'\r\nimport queryString from 'query-string'\r\nimport { Dropdown, ButtonGroup } from 'react-bootstrap'\r\nimport { Select } from '../fragment/form-elements'\r\nimport startCase from 'lodash/startCase'\r\nimport { _object, csv } from '../../helpers'\r\n\r\nconst Show = ({ match, location, history, dispatch }) => {\r\n    const search = location.search ? queryString.parse(location.search) : {\r\n        filter: JSON.stringify({}), sort: 'id', order: 'asc', page: 1, perPage: 10\r\n    }\r\n    \r\n    const [ data, setData ] = useState([])\r\n    const [ loaded, setLoaded ] = useState(false)\r\n    const [ filters, setFilters ] = useState({})\r\n    //const [ filterValue, setFilterValue ] = useState({})\r\n    const path = location.pathname\r\n\r\n    useEffect(() => {\r\n        cashFlowService.getAll()\r\n            .then(\r\n                response => {\r\n                    setData(response.data)\r\n                    setLoaded(true)\r\n                },\r\n                error => {\r\n                    let msg\r\n                    if ( error.response ) {\r\n                        msg = error.response.status !== 500 ? error.response.data : 'Oops, something went wrong'\r\n                    } else {\r\n                        msg = error.toString()\r\n                    }\r\n                    dispatch(alertActions.error(msg))\r\n                }\r\n            )        \r\n    }, [])\r\n\r\n    useEffect( () => updateFilters(JSON.parse(search.filter)), [loaded, search.filter] )\r\n\r\n    const updateFilters = (data = {}, filters = {}) => {\r\n        Object.keys(data).map( k => filters[k] = filterComponent(k, data[k]) )\r\n        setFilters(filters)\r\n    }\r\n    \r\n    const pageHandler = page => pushSearch({page})\r\n\r\n    const perPageHandler = e => pushSearch({perPage: e.currentTarget.value})\r\n\r\n    const searchHandler = e => {\r\n        let q = e.target.value\r\n        if (q) console.log(q)\r\n    }\r\n\r\n    const filterComponent = (filter, value = '') => <Select key={filter} name={filter} label={startCase(filter)} value={value} values={[...new Set(data.map(item => item[filter]))]} handleChange={filterHandler} />\r\n\r\n    const addFilter = filter => {\r\n        let queryFilters = JSON.parse(search.filter)\r\n        setFilters({ ...filters, ...{ [filter]: filterComponent(filter, queryFilters[filter]) } })\r\n    }\r\n\r\n    const removeFilter = filter => {\r\n        delete filters[filter]\r\n        setFilters({ ...filters })\r\n\r\n        let query_filter = JSON.parse(search.filter)\r\n        delete query_filter[filter]\r\n        \r\n        pushSearch({ page: 1, filter: JSON.stringify(query_filter) })\r\n    }\r\n\r\n    const filterHandler = (e, filter) => {\r\n        let parse_filter = JSON.parse(search.filter),\r\n            input = e.target.value,\r\n            nFilter = { ...parse_filter, ...{ [filter]: input } }\r\n\r\n        pushSearch({ page: 1, filter: JSON.stringify(nFilter) })\r\n    }\r\n\r\n    const sortHandler = text => {\r\n        const order = (search.sort === text) ? search.order === 'asc' ? 'desc' : 'asc' : 'asc'\r\n        pushSearch({ sort: text, page: 1, order })\r\n    }\r\n\r\n    const pushSearch = obj => history.push(`${path}?${queryString.stringify({ ...search, ...obj })}`)\r\n\r\n    const csvData = data => {\r\n        let csv = []\r\n        for (let res of data) {\r\n            csv.push({\r\n                Date: res.date,\r\n                \"Payment Method\": res.payment_method,\r\n                Account: `${res.account} (${res.currency})`,\r\n                Amount: res.symbol + res.amount.toFixed(2),\r\n                Comments: res.comments\r\n            })\r\n        }\r\n        return csv\r\n    }\r\n    \r\n    const navigationInfo = (current, perPage, batchLen, totalLen) => {\r\n        let i = current - 1,\r\n            to = current === batchLen ? totalLen : current * perPage\r\n\r\n        return `${i * perPage + 1} - ${to} of ${totalLen}`\r\n    }\r\n\r\n    if ( loaded ) {    \r\n        if ( data.length > 0 ) {\r\n            const { sort, order } = search\r\n            const perPage = parseInt(search.perPage)\r\n            const page = parseInt(search.page)\r\n            const filter = _object.clean(JSON.parse(search.filter))\r\n\r\n            // filter data\r\n            const filtered = data\r\n                .filter( row => filter.payment_method ? row.payment_method === filter.payment_method : true )\r\n                .filter( row => filter.currency ? row.currency === filter.currency : true )\r\n                .filter( row => filter.account ? row.account === filter.account : true )\r\n\r\n            const orderData = orderBy(filtered, [sort], [order])\r\n\r\n            let chunkData = chunk(orderData, perPage),\r\n                current = chunkData[page-1] ? chunkData[page-1] : []\r\n\r\n            const arrow = column => {\r\n                if (column === sort)\r\n                    return <FontAwesomeIcon className=\"small\" icon={order === 'asc' ? 'arrow-up' : 'arrow-down'} />\r\n\r\n                return null\r\n            }\r\n\r\n            const FilterList = ({list = []}) => {\r\n                const added = list.every(filter => filter in filters)\r\n\r\n                return added ? null : (\r\n                    <Dropdown as={ButtonGroup}>\r\n                        <Dropdown.Toggle as=\"a\" id=\"filter-dropdown\" bsPrefix=\"btn btn-sm mr-2\">\r\n                            <FontAwesomeIcon icon=\"filter\" /> ADD FILTER\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            { list.map( (filter, i) => filter in filters ? null : <Dropdown.Item as=\"button\" key={i} onClick={ () => addFilter(filter) }>{startCase(filter)}</Dropdown.Item> ) }\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                )\r\n            }\r\n            \r\n            return (\r\n                <>\r\n                    <div className=\"toolbar-root d-flex justify-content-between mb-4\">\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"_search d-none\">\r\n                                <input type=\"search\" className=\"form-control form-control-sm\" placeholder=\"Search\" onKeyUp={searchHandler} />\r\n                            </div>\r\n\r\n                            {  Object.keys(filters).map( filter => (\r\n                                <div key={filter} className=\"d-flex align-items-center ml-3\">\r\n                                    <span className=\"mr-2\" onClick={() => removeFilter(filter)}><FontAwesomeIcon icon=\"times\" /></span>\r\n                                    {filters[filter]}\r\n                                </div>\r\n                            ) ) }                         \r\n                        </div>\r\n\r\n                        <div className=\"_action\">\r\n                            <Link to={`${match.path}/add`} className=\"btn btn-sm mr-2\"><FontAwesomeIcon icon=\"plus\" /> Add Cash Flow</Link>\r\n                            <FilterList list={[ 'payment_method', 'account', 'currency']} /> \r\n                            <button className=\"btn btn-sm\" onClick={ () => csv(csvData(filtered), 'Cash Flow') }><FontAwesomeIcon icon=\"file-export\" /> EXPORT</button>                               \r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"content-body\">\r\n                        <table className=\"table table-sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('id')}>Id {arrow('id')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('date')}>Date {arrow('date')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('payment_method')}>Payment Method {arrow('payment_method')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('account')}>Account {arrow('account')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('amount')}>Amount {arrow('amount')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('comments')}>Comments {arrow('comments')}</span></th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                { current.map( ({ id, amount, comments, date, symbol, account, payment_method }) => (\r\n                                    <tr key={id} className={ amount < 0 ? 'debit' : 'credit' }>\r\n                                        <td>{id}</td>\r\n                                        <td>{date}</td>\r\n                                        <td>{payment_method}</td>\r\n                                        <td>{account}</td>\r\n                                        <td>{symbol}{amount.toFixed(2)}</td>\r\n                                        <td>{truncate(comments, {length: 50, separator: /,? +/})}</td>\r\n                                        <td>\r\n                                            <Link to={`${match.url}/${id}`} className=\"btn btn-sm\">\r\n                                                <FontAwesomeIcon icon=\"link\" />\r\n                                            </Link>\r\n                                        </td>\r\n                                    </tr>                                        \r\n                                ) ) }\r\n                            </tbody>\r\n                        </table>\r\n                    </div> \r\n\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div className=\"account-link\">      \r\n                            <Link to={`${match.path}/accounts`} className=\"btn btn-sm mr-2\"><FontAwesomeIcon icon=\"coins\" /> Account</Link>\r\n                        </div>\r\n\r\n                        <div className=\"_action\">\r\n                            <label>Rows per page:</label>\r\n\r\n                            <select className=\"border-0 mr-4 pl-1 font-weight-bold\" value={perPage} onChange={perPageHandler}>\r\n                                <option value=\"5\">5</option>\r\n                                <option value=\"10\">10</option>\r\n                                <option value=\"25\">25</option>\r\n                                <option value=\"50\">50</option>\r\n                            </select>\r\n                            \r\n                            { chunkData.length > 1 ? <span className=\"mr-4\">{navigationInfo(page, perPage, chunkData.length, filtered.length)}</span> : null }\r\n\r\n                            <span className=\"navigation\">\r\n                                <button className=\"btn\" disabled={page === 1} onClick={() => pageHandler(page - 1)}><FontAwesomeIcon icon=\"chevron-left\" /></button>\r\n                                <label>{page} of {chunkData.length}</label>\r\n                                <button className=\"btn\" disabled={page === chunkData.length} onClick={() => pageHandler(page + 1)}><FontAwesomeIcon icon=\"chevron-right\" /></button>\r\n                            </span>\r\n                        </div>\r\n                    </div>                                      \r\n                </>                \r\n            )\r\n        } else {\r\n            return <Link to={`${match.path}/add`} className=\"btn btn-sm mr-2\"><FontAwesomeIcon icon=\"plus\" /> Add Cash Flow</Link>\r\n        }\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nexport default connect()(Show)\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\cashflow\\Account.js",["655"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { cashFlowService } from '../../services'\r\nimport { _sum } from '../../helpers/variable'\r\n\r\nconst Account = ({ match, location, history }) => {\r\n    const [ data, setData ] = useState([])\r\n    const [ loaded, setLoaded ] = useState(false)\r\n\r\n    useEffect(() => {\r\n        cashFlowService.getAll()\r\n            .then(\r\n                response => {\r\n                    response.data.map( data => ['comments', 'id'].forEach( k => delete data[k] ) )\r\n                    setData(response.data)\r\n                    setLoaded(true)\r\n                }\r\n            )        \r\n    }, [])\r\n\r\n    if ( loaded ) {\r\n        const acc = [...new Set(data.map( item => `${item.currency}|${item.symbol}|${item.account}|${item.number}` ))]\r\n    \r\n        return (\r\n            <div className=\"content-body container\">\r\n                <div className=\"row bottom-margin\">\r\n                    { acc.map( (v, i) => {\r\n                        const _account = v.split('|')\r\n                        const singleAcc = data.filter( ({ currency, account }, i, arr) => {\r\n                            ['date', 'symbol', 'payment_method', 'number'].forEach( k => delete arr[i][k] )\r\n                            return currency === _account[0] && account === _account[2]\r\n                        } )\r\n                        const total = _sum(singleAcc, 'amount').toFixed(2)\r\n                        \r\n                        return (\r\n                            <div key={i} className=\"col-sm-12 col-md-4 col-lg-3\">\r\n                                <div className=\"card p-3 flex-row align-items-center\">\r\n                                    <i className=\"icon h3 mr-2\"><FontAwesomeIcon icon=\"coins\" /></i>\r\n                                    <div>\r\n                                        <label className=\"small\">{_account[2]}</label>\r\n                                        <p className=\"h5\">{_account[1]}{total}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    } ) }                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nexport default Account\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\cashflow\\AddCashFlow.js",["656","657"],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\constants\\alerts.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\customers\\Create.js",["658","659","660","661","662","663","664","665"],"import React, { useState, useLayoutEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Field, DateTime, ProcessError } from '../fragment'\r\nimport { Service } from './service'\r\nimport { alertActions } from '../../actions'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst Create = ({ dispatch, match, history, response, update }) => {\r\n    const { loaded, data, error } = response\r\n\r\n    const [ inputs, setInputs ] = useState({})\r\n    const [ currency, setCurrency ] = useState([])\r\n    const [ method, setMethod ] = useState([])\r\n    const [ account, setAccount ] = useState([])\r\n\r\n    const id = match.params.id\r\n\r\n    useLayoutEffect( () => {\r\n        if ( id !== 'create' && loaded ) {\r\n            const user = data.find(item => item.id === id)\r\n            setInputs(user)\r\n        }\r\n    }, [loaded] )\r\n\r\n    const submitHandler = (e) => {\r\n        Service.create(inputs, inputs.id).then(\r\n            success => {\r\n                if ( id === 'create' ) {\r\n                    //resp.address = JSON.parse(resp.address)\r\n                    data.push(success.data)\r\n                    dispatch(alertActions.success('Customer added'))\r\n                    history.push('/customers/'+success.data.id)\r\n                } else {\r\n                    let itemIndex = data.findIndex(item => item.id === id)\r\n                    data[itemIndex] = inputs\r\n\r\n                    dispatch(alertActions.success(success.data))\r\n                    history.push('/customers')\r\n                }\r\n            },\r\n            error => {\r\n                let msg = error.response ? <ProcessError errors={error.response.data} /> : error.toString()\r\n                dispatch(alertActions.error(msg))\r\n            }\r\n        )\r\n\r\n        e.preventDefault()\r\n    }\r\n\r\n    const _handleChange = (e) => setInputs({ ...inputs, ...{ [e.target.name]: e.target.value } })\r\n\r\n    const handleDelete = () => {\r\n        Service.delete([inputs.id]).then(\r\n            success => {\r\n                dispatch(alertActions.success(<div>{success.data} <button className=\"btn btn-sm text-info\" onClick={handleUndo}>UNDO</button></div>))\r\n                const nData = data.filter( item => item.id !== inputs.id )\r\n                update({ ...response, ...{data: nData} })\r\n                history.push('/customers')\r\n            },\r\n            error => dispatch(alertActions.error( error.response && error.response.status !== 500 ? error.response.data : error.toString() ))\r\n        )\r\n    }\r\n\r\n    const handleUndo = () => {\r\n        console.log(inputs.id)\r\n    }\r\n\r\n    /*\r\n    if ( type && error ) {\r\n        return <p className=\"text-danger\">{error}</p>\r\n    }*/\r\n\r\n    if (loaded && !error) {\r\n        if (id !== 'create' && !inputs) {\r\n            dispatch(alertActions.error('Customer does not exist'))\r\n            history.push('/customers')\r\n            return null\r\n        }\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-8 form2\">\r\n                    <form name=\"customer\" className=\"pre-disabled mt-1 shadow\" onSubmit={submitHandler}>\r\n                        <div className=\"p-3\" style={{maxWidth: '600px'}}>\r\n                            <h4 className=\"mb-3 sub-heading\">Identity</h4>\r\n\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <Field field={{ name: 'name', type: 'text', label: 'Name', required: true }} value={inputs.name} handleChange={_handleChange} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <Field field={{ name: 'phone', type: 'text', label: 'Phone Number' }} value={inputs.phone} handleChange={_handleChange} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <Field field={{ name: 'email', type: 'email', label: 'Email' }} value={inputs.email} handleChange={_handleChange} />\r\n                            </div>\r\n\r\n                            <h4 className=\"mb-3 mt-5 sub-heading\">Address</h4>\r\n\r\n                            <div className=\"form-group\">\r\n                                <Field field={{ name: 'address', type: 'textarea', label: 'Address', required: true }} value={inputs.address} handleChange={_handleChange} />\r\n                            </div>\r\n\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <Field field={{ name: 'zip', type: 'text', label: 'Zipcode' }} value={inputs.zip} handleChange={_handleChange} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <Field field={{ name: 'city', type: 'text', label: 'City', required: true }} value={inputs.city} handleChange={_handleChange} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex d-flex align-items-center justify-content-between p-3 toolbar\">\r\n                            <button type=\"submit\" className=\"btn\" id=\"submit\"><FontAwesomeIcon icon=\"save\" /> Save</button>\r\n\r\n                            { id !== 'create' ? <button type=\"button\" className=\"btn btn-sm text-danger\" onClick={handleDelete}><FontAwesomeIcon icon=\"trash\" /> DELETE</button> : null }\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                { id !== 'create' ?\r\n                    <div className=\"col-lg-4 order-first order-lg-last\">\r\n                        <div className=\"shadow mb-4 p-3\">\r\n                            <h4 className=\"mb-3 sub-heading\">History</h4>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6\">\r\n                                    <i className=\"float-left mr-3\"><FontAwesomeIcon icon={['far', 'clock']} /></i>\r\n                                    <div className=\"float-left font-weight-bold\">\r\n                                        <label>First Seen</label> <br />\r\n                                        <span>8/28/2019</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-6\">\r\n                                    <i className=\"float-left mr-3\"><FontAwesomeIcon icon={['far', 'clock']} /></i>\r\n                                    <div className=\"float-left font-weight-bold\">\r\n                                        <label>Last Seen</label> <br />\r\n                                        <span>2/22/2020</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-6\">\r\n                                    <i className=\"mr-3\"><FontAwesomeIcon icon=\"coins\" /></i>\r\n                                    <label className=\"font-weight-bold\">10 Orders</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"shadow mb-4 p-3 clearfix\">\r\n                            <i className=\"float-left mr-3\"><FontAwesomeIcon icon=\"coins\" /></i>\r\n                            <div className=\"float-left\">\r\n                                <label className=\"font-weight-bold\">Order #F6DQM0</label> <br />\r\n                                <span>2016-10-04T09:24:22.941Z</span> <br />\r\n                                <span>1 item - $63.13</span>\r\n                            </div>\r\n                            <Link to={`${match.path}/order`} className=\"float-right\"><FontAwesomeIcon icon={['far', 'edit']} /></Link>\r\n                        </div>\r\n                    </div>\r\n                : null }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return null\r\n\r\n}\r\n\r\nexport default connect()(Create)\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\products\\ProductsPrototype.js",["666","667","668"],"import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport truncate from 'lodash/truncate'\r\nimport fakeReviews from './reviews.service'\r\nimport { alertActions } from '../../actions'\r\nimport { _object, csv, dateFormatter } from '../../helpers'\r\nimport DersureTable from '../fragment/Table'\r\nimport { Rating } from '../fragment'\r\n\r\nconst ProductsPrototype = ({ dispatch }) => {\r\n    const [ data, setData ] = useState([])\r\n    const [ loaded, setLoaded ] = useState(false)\r\n    const translateStatus = ['pending', 'accepted', 'rejected']\r\n\r\n    useEffect(() => {\r\n        let faker = require('faker'), fake = [], _date = new dateFormatter()\r\n\r\n        for ( let counter = 1; counter <= 60; counter++ ) {\r\n            fake.push({\r\n                id: counter,\r\n                date: _date.getTime(faker.date.recent()),\r\n                customer: faker.name.findName(),\r\n                product: faker.commerce.productName(),\r\n                rating: faker.random.number({ min: 1, max: 5 }),\r\n                comment: faker.lorem.words(20),\r\n                status: translateStatus[faker.random.number(2)],                \r\n            })\r\n        }\r\n        \r\n        setData(fake)\r\n        setLoaded(true)\r\n\r\n        fakeReviews()\r\n            .then(\r\n                response => {\r\n                    //setData(response.data)\r\n                    //setLoaded(true)\r\n                },\r\n                error => {\r\n                    let msg\r\n                    if ( error.response ) {\r\n                        msg = error.response.status !== 500 ? error.response.data : 'Oops, something went wrong'\r\n                    } else {\r\n                        msg = error.toString()\r\n                    }\r\n                    dispatch(alertActions.error(msg))\r\n                }\r\n            )  \r\n    }, [])\r\n\r\n    if ( loaded ) {    \r\n        if ( data.length > 0 ) {\r\n            const columns = [\r\n                { name: 'date', label: 'Date', options: { filterable: false, sortable: true, } },\r\n                { name: 'customer', label: 'Customer', options: { filterable: true, sortable: true, } },\r\n                { name: 'product', label: 'Product', options: { filterable: true, sortable: true, } },\r\n                { name: 'rating', label: 'Rating', options: { filterable: false, sortable: true, } },\r\n                { name: 'comment', label: 'Comment', options: { filterable: false, sortable: false, } },\r\n                { name: 'status', label: 'Status', options: { filterable: true, sortable: true, } },     \r\n            ]\r\n\r\n            const options = {\r\n                responsive: 'stacked',\r\n                sortOrder: {\r\n                    name: 'date',\r\n                    direction: 'desc',\r\n                }\r\n            }\r\n\r\n            const columnDefs = [\r\n                {\r\n                    render: data => <Rating rate={data} />,\r\n                    targets: [3]\r\n                },                \r\n                {\r\n                    render: text => truncate( text, { length: 50, separator: /,? +/ } ),\r\n                    targets: [4]\r\n                },\r\n                {\r\n                    sortable: false,\r\n                    targets: [0, 4]\r\n                },\r\n                {\r\n                    visible: false,\r\n                    targets: 5\r\n                },          \r\n            ]\r\n\r\n            return <DersureTable title=\"Product Reviews\" columns={columns} data={data} options={options} columnDefs={columnDefs} />              \r\n        } else {\r\n            return <p className=\"h5\">No results found</p>\r\n        }\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nexport default connect()(ProductsPrototype)\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\constants\\UI.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\constants\\settings.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\constants\\users.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\customSwitch.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\Themes.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\prototyping\\details.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\prototyping\\DersureEditor.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\hoc\\index.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\prototyping\\uploader.jsx",["669","670"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Uploader = ({image, setImage}) => {\r\n    return (\r\n        <div className=\"p-3\">\r\n            <img src={image} alt=\"Product Image\" class=\"img-thumbnail\"></img>\r\n            \r\n            <div className=\"input-group uploader mt-2\" style={{maxWidth: '600px'}}>\r\n                <input type=\"text\" className=\"form-control filename\" placeholder=\"Click on browse to upload image\" disabled />\r\n                <span className=\"input-group-append\">\r\n                    <button type=\"button\" className=\"btn text-danger clear\" style={{ display: 'none' }}>Clear</button>\r\n                    \r\n                    <div className=\"btn input\">\r\n                        <i className=\"fa fa-folder-open\"></i>\r\n                        <span className=\"input-title\">Browse</span>\r\n                        <input type=\"file\" accept=\"image/*, .docx, .doc, .pdf\" required />\r\n                    </div>\r\n                </span>\r\n            </div>            \r\n        </div>        \r\n    )\r\n}\r\n\r\n// Uploader.propTypes = { inputs: PropTypes.object.isRequired, handleChange: PropTypes.func.isRequired }\r\n\r\nexport default Uploader\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\containers\\layout\\ShowSidebar.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\containers\\layout\\Sidebar.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\containers\\layout\\RightPane.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\containers\\layout\\Content.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\containers\\layout\\Header.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Navs.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\sfa\\customer\\index.js",["671","672","673","674"],"import React, { useEffect, useState } from 'react'\r\nimport { Route, Link, Switch } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Service } from './service'\r\nimport Customers from './Customers'\r\nimport Create from './Create'\r\nimport { alertActions } from '../../../actions'\r\nimport './customer.scss'\r\n\r\nconst Customer = ({ match, dispatch }) => {\r\n    const [ data, setData ] = useState({ loaded: false, data: [], error: false })\r\n\r\n    useEffect(() => {\r\n        Service.getAll()\r\n            .then(\r\n                response => {\r\n                    setData({ ...data, ...{loaded: true, data: response.data} })\r\n                    /*if (typeof(response.data) === 'object') {\r\n                        const items = response.data.map( item => {\r\n                            const address = JSON.parse(item.address)\r\n                            Object.assign(item, address)\r\n                            return item\r\n                        } )\r\n                        setData({ ...data, ...{loaded: true, data: items} })\r\n                    } else {\r\n                        setData({ ...data, ...{loaded: true} })\r\n                    }*/\r\n                },\r\n                error => {\r\n                    let msg\r\n                    if ( error.response ) {\r\n                        msg = error.response.status !== 500 ? error.response.data : 'Oops, something went wrong'\r\n                    } else {\r\n                        msg = error.toString()\r\n                    }\r\n                    setData({ ...data, ...{loaded: true, error: true} })\r\n                    dispatch(alertActions.error('Unable to retrieve data'))\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Route exact path={match.path} render={ props => <Customers response={data} update={setData} {...props} /> } />\r\n            <Route path={`${match.path}/:id`} render={ props => <Create response={data} update={setData} {...props} /> } />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect()(Customer)\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\sfa\\sales\\index.js",["675","676","677","678"],"import React, { useEffect, useState } from 'react'\r\nimport { Route, Link, Switch } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Service } from './service'\r\nimport Show from './Show'\r\nimport AddOrder from './AddOrder'\r\nimport { alertActions } from '../../../actions'\r\nimport './sales.scss'\r\nimport sample from './fake'\r\n\r\nconst Sales = ({ match, dispatch }) => {\r\n    const [ data, setData ] = useState({ loaded: false, data: [], error: false })\r\n\r\n    useEffect(() => {\r\n        Service.getAll()\r\n            .then(\r\n                response => {\r\n                    if (typeof(response.data) === 'object') {\r\n                        const items = sample.map( item => {\r\n                            const total = item.invoice.map( item => item.price * item.quantity )\r\n                            item.orderCount = item.invoice.length\r\n                            item.amount = total.reduce((a, b) => a + b, 0)\r\n\r\n                            return item\r\n                        } )\r\n                        setData({ ...data, ...{loaded: true, data: items} })\r\n                    } else {\r\n                        setData({ ...data, ...{loaded: true} })\r\n                    }\r\n                },\r\n                error => {\r\n                    let msg\r\n                    if ( error.response ) {\r\n                        msg = error.response.status !== 500 ? error.response.data : 'Oops, something went wrong'\r\n                    } else {\r\n                        msg = error.toString()\r\n                    }\r\n                    setData({ ...data, ...{loaded: true, error: true} })\r\n                    dispatch(alertActions.error('Unable to retrieve data'))\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Route exact path={match.path} render={ props => <Show response={data} update={setData} {...props} /> } />\r\n            <Route path={`${match.path}/:id`} render={ props => <AddOrder response={data} update={setData} {...props} /> } />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect()(Sales)\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\products\\reviews.service.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\helpers\\variable.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\config\\theme.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\form-elements.jsx",["679"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Input = ({ name, type, label, placeholder, value, required, handleChange }) => (\r\n    <>\r\n        <label htmlFor={name}>{label}</label>\r\n        <input type={type} name={name} className=\"form-control\" autoComplete=\"off\" placeholder={placeholder} id={name} value={value} onChange={handleChange} required={required} />\r\n    </>\r\n)\r\n\r\nInput.defaultProps = { value: '', placeholder: '', required: false }\r\nInput.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    required: PropTypes.bool,\r\n    handleChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport const TextArea = ({ name, label, value, placeholder, required, handleChange }) => (\r\n    <>\r\n        <label htmlFor={name}>{label}</label>\r\n        <textarea name={name} className=\"form-control\" rows=\"2\" placeholder={placeholder} id={name} value={value} onChange={handleChange} required={required}></textarea>\r\n    </>\r\n)\r\n\r\nTextArea.defaultProps = { value: '', placeholder: '', required: false }\r\nTextArea.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    required: PropTypes.bool,\r\n    handleChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport const Dropdown = ({ name, label, required, value, options, handleChange }) => (\r\n    <>\r\n        <label>{label}</label>\r\n        <select name={name} className=\"custom-select\" id={name} value={value} onChange={handleChange} required={required}>\r\n            { ! value ? <option value=\"\">Choose</option> : null }\r\n            { options.map( ({id, name}) => <option key={id} value={id}>{name}</option> ) }\r\n        </select>\r\n    </>\r\n)\r\n\r\nDropdown.defaultProps = { value: '', options: [], required: false }\r\nDropdown.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    required: PropTypes.bool,\r\n    options: PropTypes.array.isRequired,\r\n    handleChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport const Radio = ({ name, type, label, values, required, value, handleChange }) => (\r\n    <>\r\n        <label>{label}</label>\r\n\r\n        <div className=\"d-flex mt-2\">\r\n            { values.map( ({ id, code }) => (\r\n                <div key={id} className=\"d-flex radio-wrap\">\r\n                    <label>{code}</label>\r\n                    <input type={type} name={name} className=\"fancy-input round ml-2\" id={name} value={id} onChange={handleChange} required={required} checked={id == value} />\r\n                </div>\r\n            ) ) }\r\n        </div>\r\n    </>     \r\n)\r\n\r\nRadio.defaultProps = { required: false }\r\nRadio.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    values: PropTypes.array.isRequired,\r\n    required: PropTypes.bool,\r\n    handleChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport const Field = ({ field, value = '', handleChange }) => {\r\n    field['handleChange'] = handleChange\r\n    let res\r\n    switch (field.type) {\r\n        case \"text\":\r\n        case \"email\":\r\n        case \"number\":\r\n            res = <Input value={value} {...field} />\r\n            break\r\n\r\n        case \"textarea\":\r\n            res = <TextArea value={value} {...field} />\r\n            break\r\n\r\n        case \"select\":\r\n            res = <Dropdown value={value} {...field} />\r\n            break\r\n\r\n        case \"radio\":\r\n            res = <Radio value={value} {...field} />\r\n            break\r\n\r\n        default:\r\n            res = null\r\n    }\r\n\r\n    return res\r\n}\r\n\r\nField.defaultProps = { handleChange: () => null }\r\n\r\nField.propTypes = {\r\n    field: PropTypes.object.isRequired,\r\n    handleChange: PropTypes.func\r\n}\r\n\r\nexport const DataList = ({ name, values, handleChange }) => (\r\n    <>\r\n        <input list={name} className=\"form-control form-control-sm\" placeholder={name} onChange={handleChange} />\r\n        <datalist id={name}>\r\n            { values.map( value => <option key={value} value={value}>{value}</option> ) }\r\n        </datalist>\r\n    </>\r\n)\r\n\r\nDataList.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    values: PropTypes.array.isRequired,\r\n    handleChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport const Select = ({ name, label, value, values, handleChange }) => (\r\n    <select name={name} className=\"custom-select custom-select-sm\" id={name} value={value} onChange={e => handleChange(e, name)}>\r\n        <option value=\"\">{label}</option>\r\n        { values.map( value => <option key={value} value={value}>{value}</option> ) }\r\n    </select>\r\n)\r\n\r\nSelect.defaultProps = { value: '' }\r\nSelect.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    values: PropTypes.array.isRequired,\r\n    handleChange: PropTypes.func.isRequired\r\n}\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\hoc\\withTitle.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\hoc\\withDevice.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\ShowSidebar.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\Sidebar.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\RightPane.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\Content.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\Header.js",["680","681","682"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { NavDropdown, Dropdown, Button } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst Header = ({ toggleSidebar, user, signOut, title }) => {\r\n\r\n    return (\r\n        <nav className=\"main-header navbar navbar-expand \">\r\n            <span data-widget=\"pushmenu\" onClick={toggleSidebar}>\r\n                <FontAwesomeIcon icon=\"bars\" />\r\n            </span>\r\n\r\n            <span className=\"pagetitle h6 text-uppercase my-0 ml-4 mr-auto\">{title}</span>\r\n\r\n            <form className=\"form-inline mr-5 d-none d-md-block\">\r\n                <div className=\"input-group input-group-sm\">\r\n                    <input type=\"search\" className=\"form-control search-content\" placeholder=\"Search...\"/>\r\n\r\n                    <div className=\"input-group-append\">\r\n                        <button type=\"submit\" className=\"btn input-group-text\">\r\n                            <FontAwesomeIcon icon=\"search\" />\r\n                        </button>  \r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <Dropdown>\r\n                <Dropdown.Toggle variant=\"secondary\" bsPrefix=\"d-none\"><FontAwesomeIcon icon=\"user-alt\" /> <span className=\"d-none d-sm-inline-block\">{user.email}</span></Dropdown.Toggle>\r\n\r\n                <Dropdown.Toggle as=\"a\" bsPrefix=\"profile\" id=\"profileDropdown\" title=\"Profile\" data-toggle=\"tooltip\" data-placement=\"bottom\">\r\n                    <FontAwesomeIcon icon=\"user-alt\" />\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                    <Link to=\"/about\" className=\"dropdown-item\"><FontAwesomeIcon icon=\"desktop\" /> About</Link>\r\n\r\n                    <Link to=\"/documentation\" className=\"dropdown-item\"><FontAwesomeIcon icon=\"book\" /> Documentation</Link>\r\n\r\n                    <Link to=\"/settings\" className=\"dropdown-item\"><FontAwesomeIcon icon=\"cog\" /> Settings</Link>\r\n                    \r\n                    <Dropdown.Item as=\"button\" onClick={signOut}><FontAwesomeIcon icon=\"power-off\" /> Logout</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </nav>  \r\n    )\r\n\r\n}\r\n\r\nHeader.propTypes = {\r\n    toggleSidebar: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\index.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\sfa\\customer\\service.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\sfa\\sales\\service.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\sfa\\customer\\Create.js",["683","684","685","686","687","688","689","690"],"import React, { useState, useLayoutEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Field, DateTime, ProcessError } from '../../fragment'\r\nimport { Service } from './service'\r\nimport { alertActions } from '../../../actions'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst Create = ({ dispatch, match, history, response, update }) => {\r\n    const { loaded, data, error } = response\r\n\r\n    const [ inputs, setInputs ] = useState({})\r\n    const [ currency, setCurrency ] = useState([])\r\n    const [ method, setMethod ] = useState([])\r\n    const [ account, setAccount ] = useState([])\r\n\r\n    const id = match.params.id\r\n\r\n    useLayoutEffect( () => {\r\n        if ( id !== 'create' && loaded ) {\r\n            const user = data.find(item => item.id === id)\r\n            setInputs(user)\r\n        }\r\n    }, [loaded] )\r\n\r\n    const submitHandler = (e) => {\r\n        Service.create(inputs, inputs.id).then(\r\n            success => {\r\n                if ( id === 'create' ) {\r\n                    //resp.address = JSON.parse(resp.address)\r\n                    data.push(success.data)\r\n                    dispatch(alertActions.success('Customer added'))\r\n                    history.push('/customers/'+success.data.id)\r\n                } else {\r\n                    let itemIndex = data.findIndex(item => item.id === id)\r\n                    data[itemIndex] = inputs\r\n\r\n                    dispatch(alertActions.success(success.data))\r\n                    history.push('/customers')\r\n                }\r\n            },\r\n            error => {\r\n                let msg = error.response ? <ProcessError errors={error.response.data} /> : error.toString()\r\n                dispatch(alertActions.error(msg))\r\n            }\r\n        )\r\n\r\n        e.preventDefault()\r\n    }\r\n\r\n    const _handleChange = (e) => setInputs({ ...inputs, ...{ [e.target.name]: e.target.value } })\r\n\r\n    const handleDelete = () => {\r\n        Service.delete([inputs.id]).then(\r\n            success => {\r\n                dispatch(alertActions.success(<div>{success.data} <button className=\"btn btn-sm text-info\" onClick={handleUndo}>UNDO</button></div>))\r\n                const nData = data.filter( item => item.id !== inputs.id )\r\n                update({ ...response, ...{data: nData} })\r\n                history.push('/customers')\r\n            },\r\n            error => dispatch(alertActions.error( error.response && error.response.status !== 500 ? error.response.data : error.toString() ))\r\n        )\r\n    }\r\n\r\n    const handleUndo = () => {\r\n        console.log(inputs.id)\r\n    }\r\n\r\n    /*\r\n    if ( type && error ) {\r\n        return <p className=\"text-danger\">{error}</p>\r\n    }*/\r\n\r\n    if (loaded && !error) {\r\n        if (id !== 'create' && !inputs) {\r\n            dispatch(alertActions.error('Customer does not exist'))\r\n            history.push('/customers')\r\n            return null\r\n        }\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-8 form2\">\r\n                    <form name=\"customer\" className=\"shadow-box pre-disabled\" onSubmit={submitHandler}>\r\n                        <div className=\"content-body p-3\" style={{maxWidth: '600px'}}>\r\n                            <h4 className=\"mb-3 sub-heading\">Identity</h4>\r\n\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <Field field={{ name: 'name', type: 'text', label: 'Name', required: true }} value={inputs.name} handleChange={_handleChange} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <Field field={{ name: 'phone', type: 'text', label: 'Phone Number' }} value={inputs.phone} handleChange={_handleChange} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <Field field={{ name: 'email', type: 'email', label: 'Email' }} value={inputs.email} handleChange={_handleChange} />\r\n                            </div>\r\n\r\n                            <h4 className=\"mb-3 mt-5 sub-heading\">Address</h4>\r\n\r\n                            <div className=\"form-group\">\r\n                                <Field field={{ name: 'address', type: 'textarea', label: 'Address', required: true }} value={inputs.address} handleChange={_handleChange} />\r\n                            </div>\r\n\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <Field field={{ name: 'zip', type: 'text', label: 'Zipcode' }} value={inputs.zip} handleChange={_handleChange} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <Field field={{ name: 'city', type: 'text', label: 'City', required: true }} value={inputs.city} handleChange={_handleChange} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex d-flex align-items-center justify-content-between p-3 toolbar\">\r\n                            <button type=\"submit\" className=\"btn\" id=\"submit\"><FontAwesomeIcon icon=\"save\" /> Save</button>\r\n\r\n                            { id !== 'create' ? <button type=\"button\" className=\"btn btn-sm text-danger\" onClick={handleDelete}><FontAwesomeIcon icon=\"trash\" /> DELETE</button> : null }\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                { id !== 'create' ?\r\n                    <div className=\"col-lg-4 d-md-none d-lg-block\">\r\n                        <div className=\"shadow-box p-3\">\r\n                            <h4 className=\"mb-3 sub-heading\">History</h4>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-6\">\r\n                                    <i className=\"float-left mr-3\"><FontAwesomeIcon icon={['far', 'clock']} /></i>\r\n                                    <div className=\"float-left font-weight-bold\">\r\n                                        <label>First Seen</label> <br />\r\n                                        <span>8/28/2019</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-6\">\r\n                                    <i className=\"float-left mr-3\"><FontAwesomeIcon icon={['far', 'clock']} /></i>\r\n                                    <div className=\"float-left font-weight-bold\">\r\n                                        <label>Last Seen</label> <br />\r\n                                        <span>2/22/2020</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-6\">\r\n                                    <i className=\"mr-3\"><FontAwesomeIcon icon=\"coins\" /></i>\r\n                                    <label className=\"font-weight-bold\">10 Orders</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"shadow-box p-3 clearfix\">\r\n                            <i className=\"float-left mr-3\"><FontAwesomeIcon icon=\"coins\" /></i>\r\n                            <div className=\"float-left\">\r\n                                <label className=\"font-weight-bold\">Order #F6DQM0</label> <br />\r\n                                <span>2016-10-04T09:24:22.941Z</span> <br />\r\n                                <span>1 item - $63.13</span>\r\n                            </div>\r\n                            <Link to={`${match.path}/order`} className=\"float-right\"><FontAwesomeIcon icon={['far', 'edit']} /></Link>\r\n                        </div>\r\n                    </div>\r\n                : null }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return null\r\n\r\n}\r\n\r\nexport default connect()(Create)\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\sfa\\sales\\AddOrder.js",["691","692","693","694","695","696","697","698","699","700"],"import React, { useState, useLayoutEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Field, DateTime, ProcessError } from '../../fragment'\r\nimport { Service } from './service'\r\nimport { alertActions } from '../../../actions'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport Truck from './Truck'\r\n\r\nconst AddOrder = ({ dispatch, match, history, response, update }) => {\r\n    const { loaded, data, error } = response\r\n\r\n    const [ inputs, setInputs ] = useState({})\r\n    const [ loading, setLoading ] = useState([])\r\n    const [ currency, setCurrency ] = useState([])\r\n    const [ method, setMethod ] = useState([])\r\n    const [ account, setAccount ] = useState([])\r\n\r\n    const id = match.params.id\r\n\r\n    useLayoutEffect( () => {\r\n        if ( id !== 'new' && loaded ) {\r\n            const order = data.find(item => parseInt(item.id) === parseInt(id))\r\n            setInputs(order)\r\n        }\r\n    }, [loaded] )\r\n\r\n    const submitHandler = (e) => {\r\n        Service.create(inputs, inputs.id).then(\r\n            success => {\r\n                if ( id === 'new' ) {\r\n                    //resp.address = JSON.parse(resp.address)\r\n                    data.push(success.data)\r\n                    dispatch(alertActions.success('Customer added'))\r\n                    history.push('/customers/'+success.data.id)\r\n                } else {\r\n                    let itemIndex = data.findIndex(item => item.id === id)\r\n                    data[itemIndex] = inputs\r\n\r\n                    dispatch(alertActions.success(success.data))\r\n                    history.push('/customers')\r\n                }\r\n            },\r\n            error => {\r\n                let msg = error.response ? <ProcessError errors={error.response.data} /> : error.toString()\r\n                dispatch(alertActions.error(msg))\r\n            }\r\n        )\r\n\r\n        e.preventDefault()\r\n    }\r\n\r\n    const _handleChange = (e) => setInputs({ ...inputs, ...{ [e.target.name]: e.target.value } })\r\n\r\n    const handleDelete = () => {\r\n        Service.delete([inputs.id]).then(\r\n            success => {\r\n                dispatch(alertActions.success(<div>{success.data} <button className=\"btn btn-sm text-info\" onClick={handleUndo}>UNDO</button></div>))\r\n                const nData = data.filter( item => item.id !== inputs.id )\r\n                update({ ...response, ...{data: nData} })\r\n                history.push('/customers')\r\n            },\r\n            error => dispatch(alertActions.error( error.response && error.response.status !== 500 ? error.response.data : error.toString() ))\r\n        )\r\n    }\r\n\r\n    const handleUndo = () => {\r\n        console.log(inputs.id)\r\n    }\r\n\r\n    const showLoading = () => {\r\n        if (inputs.loading) {\r\n            console.log(\"Show loading...\", inputs.loading)\r\n        } else {\r\n            dispatch(alertActions.info('Unable to retrieve loading'))\r\n        }\r\n    }\r\n\r\n    /*\r\n    if ( type && error ) {\r\n        return <p className=\"text-danger\">{error}</p>\r\n    }*/\r\n\r\n    if (loaded && !error) {\r\n        if (id !== 'new' && !inputs) {\r\n            dispatch(alertActions.error('Order does not exist'))\r\n            history.push('/sales')\r\n            return null\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6 form2\">\r\n                        <form name=\"customer\" className=\"shadow-box pre-disabled\" onSubmit={submitHandler}>\r\n                            <div className=\"content-body p-3\" style={{maxWidth: '400px'}}>\r\n                                <div className=\"form-group\">\r\n                                    <Field field={{ name: 'date', type: 'text', label: 'Date', required: true }} value={inputs.date} handleChange={_handleChange} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <Field field={{ name: 'customer', type: 'text', label: 'Customer', required: true }} value={inputs.customer} handleChange={_handleChange} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <i className=\"position-bottom-right pointer\" onClick={showLoading}><FontAwesomeIcon icon=\"truck-moving\" /></i>\r\n                                    <Field field={{ name: 'loading', type: 'text', label: 'Loading Reference', required: true }} value={inputs.loading} handleChange={_handleChange} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"d-flex d-flex align-items-center justify-content-between p-3 toolbar\">\r\n                                <button type=\"submit\" className=\"btn\" id=\"submit\"><FontAwesomeIcon icon=\"save\" /> Save</button>\r\n\r\n                                { id !== 'new' ? <button type=\"button\" className=\"btn btn-sm text-danger\" onClick={handleDelete}><FontAwesomeIcon icon=\"trash\" /> DELETE</button> : null }\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                    { id !== 'new' ?\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"shadow-box\">\r\n                                <table className=\"table table-md edge-pad\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Product</th>\r\n                                            <th className=\"text-center\">Unit Price</th>\r\n                                            <th className=\"text-right\">Quantity</th>\r\n                                            <th className=\"text-right\">Total</th>\r\n                                        </tr>\r\n                                    </thead>\r\n\r\n                                    <tbody>\r\n                                        { inputs.invoice ? inputs.invoice.map( ({ product, price, quantity }, i) => (\r\n                                            <tr key={i}>\r\n                                                <td>{product}</td>\r\n                                                <td className=\"text-center\">&#x20A6;{price}</td>\r\n                                                <td className=\"text-right\">{quantity}</td>\r\n                                                <td className=\"text-right\">&#8358;{price * quantity}</td>\r\n                                            </tr>\r\n                                        ) ) : null }\r\n                                        <tr>\r\n                                            <td colSpan=\"2\" />\r\n                                            <td>Total</td>\r\n                                            <td className=\"text-right\">&#x20A6;{inputs.amount}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    : null }\r\n                </div>\r\n\r\n                <Truck data={loading} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    return null\r\n\r\n}\r\n\r\nexport default connect()(AddOrder)\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\sfa\\customer\\Customers.js",["701","702"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport classNames from 'classnames'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { chunk, truncate, orderBy } from 'lodash'\r\nimport queryString from 'query-string'\r\nimport { Dropdown, ButtonGroup } from 'react-bootstrap'\r\nimport { Select } from '../../fragment/form-elements'\r\nimport startCase from 'lodash/startCase'\r\nimport { _object, csv } from '../../../helpers'\r\n\r\nconst Customers = ({ match, location, history, response, update }) => {\r\n    const { loaded, data } = response\r\n    const search = location.search ? queryString.parse(location.search) : {\r\n        filter: JSON.stringify({}), sort: 'customer', order: 'asc', page: 1, perPage: 10\r\n    }\r\n\r\n    const [ selected, setSelected ] = useState([])\r\n    const [ filters, setFilters ] = useState({})\r\n    const path = location.pathname\r\n\r\n    useEffect( () => updateFilters(JSON.parse(search.filter)), [loaded, search.filter] )\r\n\r\n    const updateFilters = (data = {}, filters = {}) => {\r\n        Object.keys(data).map( k => filters[k] = filterComponent(k, data[k]) )\r\n        setFilters(filters)\r\n    }\r\n\r\n    const pageHandler = page => pushSearch({page})\r\n\r\n    const perPageHandler = e => pushSearch({perPage: e.currentTarget.value})\r\n\r\n    const searchHandler = e => {\r\n        let q = e.target.value\r\n        if (q) console.log(q)\r\n    }\r\n\r\n    const checkHandler = e => setSelected([1])\r\n\r\n    const filterComponent = (filter, value = '') => <Select key={filter} name={filter} label={startCase(filter)} value={value} values={[...new Set(data.map(item => item[filter]))]} handleChange={filterHandler} />\r\n\r\n    const addFilter = filter => {\r\n        let queryFilters = JSON.parse(search.filter)\r\n        setFilters({ ...filters, ...{ [filter]: filterComponent(filter, queryFilters[filter]) } })\r\n    }\r\n\r\n    const removeFilter = filter => {\r\n        delete filters[filter]\r\n        setFilters({ ...filters })\r\n\r\n        let query_filter = JSON.parse(search.filter)\r\n        delete query_filter[filter]\r\n\r\n        pushSearch({ page: 1, filter: JSON.stringify(query_filter) })\r\n    }\r\n\r\n    const filterHandler = (e, filter) => {\r\n        let parse_filter = JSON.parse(search.filter),\r\n            input = e.target.value,\r\n            nFilter = { ...parse_filter, ...{ [filter]: input } }\r\n\r\n        pushSearch({ page: 1, filter: JSON.stringify(nFilter) })\r\n    }\r\n\r\n    const sortHandler = text => {\r\n        const order = (search.sort === text) ? search.order === 'asc' ? 'desc' : 'asc' : 'asc'\r\n        pushSearch({ sort: text, page: 1, order })\r\n    }\r\n\r\n    const pushSearch = obj => history.push(`${path}?${queryString.stringify({ ...search, ...obj })}`)\r\n\r\n    const csvData = data => {\r\n        let csv = []\r\n        for (let res of data) {\r\n            csv.push({\r\n                Customer: res.name,\r\n                Location: res.city,\r\n                Orders: res.order,\r\n                \"Total Spent\": res.totalspent.toFixed(2),\r\n                \"Last Seen\": res.lastseen\r\n            })\r\n        }\r\n        return csv\r\n    }\r\n\r\n    const navigationInfo = (current, perPage, batchLen, totalLen) => {\r\n        let i = current - 1,\r\n            to = current === batchLen ? totalLen : current * perPage\r\n\r\n        return `${i * perPage + 1} - ${to} of ${totalLen}`\r\n    }\r\n\r\n    if ( loaded ) {\r\n        if ( data.length > 0 ) {\r\n            const { sort, order } = search\r\n            const perPage = parseInt(search.perPage)\r\n            const page = parseInt(search.page)\r\n            const filter = _object.clean(JSON.parse(search.filter))\r\n\r\n            // filter data\r\n            const filtered = data\r\n                .filter( row => filter.city ? row.city === filter.city : true )\r\n                .filter( row => filter.order ? row.order === filter.order : true )\r\n                .filter( row => filter.lastseen ? row.lastseen === filter.lastseen : true )\r\n\r\n            const orderData = orderBy(filtered, [sort], [order])\r\n\r\n            let chunkData = chunk(orderData, perPage),\r\n                current = chunkData[page-1] ? chunkData[page-1] : []\r\n\r\n            const arrow = column => {\r\n                if (column === sort)\r\n                    return <FontAwesomeIcon className=\"small\" icon={order === 'asc' ? 'arrow-up' : 'arrow-down'} />\r\n\r\n                return null\r\n            }\r\n\r\n            const FilterList = ({list = []}) => {\r\n                const added = list.every(filter => filter in filters)\r\n\r\n                return added ? null : (\r\n                    <Dropdown as={ButtonGroup}>\r\n                        <Dropdown.Toggle as=\"a\" id=\"filter-dropdown\" bsPrefix=\"btn btn-sm anchor mr-2\">\r\n                            <FontAwesomeIcon icon=\"filter\" /> ADD FILTER\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            { list.map( (filter, i) => filter in filters ? null : <Dropdown.Item as=\"button\" key={i} onClick={ () => addFilter(filter) }>{startCase(filter)}</Dropdown.Item> ) }\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                )\r\n            }\r\n\r\n            return (\r\n                <div className=\"shadow-box mt-3\">\r\n                    <div className=\"toolbar-root position-relative\">\r\n                        <div className={classNames('bulk-actions-toolbar toolbar d-flex align-items-center justify-content-between position-absolute px-4 w-100', {show: selected.length})}>\r\n                            <label className=\"font-weight-bold\">{selected.length} item{selected.length > 1 ? 's' : null} selected</label>\r\n\r\n                            <button className=\"btn btn-sm text-danger\" onClick={ () => console.log('non') }><FontAwesomeIcon icon=\"trash\" /> DELETE</button>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex align-items-center justify-content-between px-3 filter-toolbar\">\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"_search\">\r\n                                    <input type=\"search\" className=\"form-control form-control-sm\" placeholder=\"Search\" onKeyUp={searchHandler} />\r\n                                </div>\r\n\r\n                                {  Object.keys(filters).map( filter => (\r\n                                    <div key={filter} className=\"d-flex align-items-center ml-3\">\r\n                                        <span className=\"mr-2\" onClick={() => removeFilter(filter)}><FontAwesomeIcon icon=\"times\" /></span>\r\n                                        {filters[filter]}\r\n                                    </div>\r\n                                ) ) }\r\n                            </div>\r\n\r\n                            <div className=\"_action\">\r\n                                <Link to={`${match.path}/create`} className=\"btn btn-sm anchor mr-2\"><FontAwesomeIcon icon=\"plus\" /> Create</Link>\r\n                                <FilterList list={[ 'payment_method', 'account', 'currency']} />\r\n                                <button className=\"btn btn-sm\" onClick={ () => csv(csvData(filtered), 'Cash Flow') }><FontAwesomeIcon icon=\"file-export\" /> EXPORT</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"content-body\">\r\n                        <table className=\"table table-md vertical-top edge-pad\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        <input type=\"checkbox\" className=\"fancy-input round\" value=\"all\" onChange={checkHandler} />\r\n                                    </th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('name')}>Customer {arrow('name')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('city')}>Location {arrow('city')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('order')}>Orders {arrow('order')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('totalspent')}>Total Spent {arrow('totalspent')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('lastseen')}>Last Seen {arrow('lastseen')}</span></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                { current.map( ({ id, name, city, order, totalspent, lastseen }) => (\r\n                                    <tr key={id}>\r\n                                        <td>\r\n                                            <input type=\"checkbox\" className=\"fancy-input round\" value={id} onChange={checkHandler} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <Link to={`${match.url}/${id}`}>{name}</Link>\r\n                                        </td>\r\n                                        <td>{city}</td>\r\n                                        <td>{order}</td>\r\n                                        <td>{totalspent.toFixed(2)}</td>\r\n                                        <td>{lastseen}</td>\r\n                                    </tr>\r\n                                ) ) }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-end pb-2 px-3\">\r\n                        <div className=\"_action\">\r\n                            <label>Rows per page:</label>\r\n\r\n                            <select className=\"border-0 mr-4 pl-1 font-weight-bold\" value={perPage} onChange={perPageHandler}>\r\n                                <option value=\"5\">5</option>\r\n                                <option value=\"10\">10</option>\r\n                                <option value=\"25\">25</option>\r\n                                <option value=\"50\">50</option>\r\n                            </select>\r\n\r\n                            { chunkData.length > 1 ? <span className=\"mr-4\">{navigationInfo(page, perPage, chunkData.length, filtered.length)}</span> : null }\r\n\r\n                            <span className=\"navigation\">\r\n                                <button className=\"btn\" disabled={page === 1} onClick={() => pageHandler(page - 1)}><FontAwesomeIcon icon=\"chevron-left\" /></button>\r\n                                <label>{page} of {chunkData.length}</label>\r\n                                <button className=\"btn\" disabled={page === chunkData.length} onClick={() => pageHandler(page + 1)}><FontAwesomeIcon icon=\"chevron-right\" /></button>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <Link to={`${match.path}/create`} className=\"btn btn-sm anchor m-5\"><FontAwesomeIcon icon=\"plus\" /> Create Customer</Link>\r\n        }\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nexport default Customers\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\sfa\\sales\\Show.js",["703","704"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport classNames from 'classnames'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { chunk, truncate, orderBy } from 'lodash'\r\nimport queryString from 'query-string'\r\nimport { Dropdown, ButtonGroup } from 'react-bootstrap'\r\nimport { Select } from '../../fragment/form-elements'\r\nimport startCase from 'lodash/startCase'\r\nimport { _object, csv } from '../../../helpers'\r\n\r\nconst Show = ({ match, location, history, response, update }) => {\r\n    const { loaded, data } = response\r\n    const search = location.search ? queryString.parse(location.search) : {\r\n        filter: JSON.stringify({}), sort: 'date', order: 'asc', page: 1, perPage: 10\r\n    }\r\n\r\n    const [ selected, setSelected ] = useState([])\r\n    const [ filters, setFilters ] = useState({})\r\n    const path = location.pathname\r\n\r\n    useEffect( () => updateFilters(JSON.parse(search.filter)), [loaded, search.filter] )\r\n\r\n    const updateFilters = (data = {}, filters = {}) => {\r\n        Object.keys(data).map( k => filters[k] = filterComponent(k, data[k]) )\r\n        setFilters(filters)\r\n    }\r\n\r\n    const pageHandler = page => pushSearch({page})\r\n\r\n    const perPageHandler = e => pushSearch({perPage: e.currentTarget.value})\r\n\r\n    const searchHandler = e => {\r\n        let q = e.target.value\r\n        if (q) console.log(q)\r\n    }\r\n\r\n    const checkHandler = e => setSelected([1])\r\n\r\n    const filterComponent = (filter, value = '') => <Select key={filter} name={filter} label={startCase(filter)} value={value} values={[...new Set(data.map(item => item[filter]))]} handleChange={filterHandler} />\r\n\r\n    const addFilter = filter => {\r\n        let queryFilters = JSON.parse(search.filter)\r\n        setFilters({ ...filters, ...{ [filter]: filterComponent(filter, queryFilters[filter]) } })\r\n    }\r\n\r\n    const removeFilter = filter => {\r\n        delete filters[filter]\r\n        setFilters({ ...filters })\r\n\r\n        let query_filter = JSON.parse(search.filter)\r\n        delete query_filter[filter]\r\n\r\n        pushSearch({ page: 1, filter: JSON.stringify(query_filter) })\r\n    }\r\n\r\n    const filterHandler = (e, filter) => {\r\n        let parse_filter = JSON.parse(search.filter),\r\n            input = e.target.value,\r\n            nFilter = { ...parse_filter, ...{ [filter]: input } }\r\n\r\n        pushSearch({ page: 1, filter: JSON.stringify(nFilter) })\r\n    }\r\n\r\n    const sortHandler = text => {\r\n        const order = (search.sort === text) ? search.order === 'asc' ? 'desc' : 'asc' : 'asc'\r\n        pushSearch({ sort: text, page: 1, order })\r\n    }\r\n\r\n    const pushSearch = obj => history.push(`${path}?${queryString.stringify({ ...search, ...obj })}`)\r\n\r\n    const openOrder = id => history.push(`${path}/${id}`)\r\n\r\n    const csvData = data => {\r\n        let csv = []\r\n        for (let res of data) {\r\n            csv.push({\r\n                Date: res.date,\r\n                Reference: res.reference,\r\n                Customer: res.customer,\r\n                \"No. Items\": res.orderCount,\r\n                Total: res.amount\r\n            })\r\n        }\r\n        return csv\r\n    }\r\n\r\n    const navigationInfo = (current, perPage, batchLen, totalLen) => {\r\n        let i = current - 1,\r\n            to = current === batchLen ? totalLen : current * perPage\r\n\r\n        return `${i * perPage + 1} - ${to} of ${totalLen}`\r\n    }\r\n\r\n    if ( loaded ) {\r\n        if ( data.length > 0 ) {\r\n            const { sort, order } = search\r\n            const perPage = parseInt(search.perPage)\r\n            const page = parseInt(search.page)\r\n            const filter = _object.clean(JSON.parse(search.filter))\r\n\r\n            // filter data\r\n            const filtered = data\r\n                .filter( row => filter.amount ? row.amount === filter.amount : true )\r\n                .filter( row => filter.orderCount ? row.orderCount === filter.orderCount : true )\r\n                .filter( row => filter.customer ? row.customer === filter.customer : true )\r\n\r\n            const orderData = orderBy(filtered, [sort], [order])\r\n\r\n            let chunkData = chunk(orderData, perPage),\r\n                current = chunkData[page-1] ? chunkData[page-1] : []\r\n\r\n            const arrow = column => {\r\n                if (column === sort)\r\n                    return <FontAwesomeIcon className=\"small\" icon={order === 'asc' ? 'arrow-up' : 'arrow-down'} />\r\n\r\n                return null\r\n            }\r\n\r\n            const FilterList = ({list = []}) => {\r\n                const added = list.every(filter => filter in filters)\r\n\r\n                return added ? null : (\r\n                    <Dropdown as={ButtonGroup}>\r\n                        <Dropdown.Toggle as=\"a\" id=\"filter-dropdown\" bsPrefix=\"btn btn-sm anchor mr-2\">\r\n                            <FontAwesomeIcon icon=\"filter\" /> ADD FILTER\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            { list.map( (filter, i) => filter in filters ? null : <Dropdown.Item as=\"button\" key={i} onClick={ () => addFilter(filter) }>{startCase(filter)}</Dropdown.Item> ) }\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                )\r\n            }\r\n\r\n            return (\r\n                <div className=\"shadow-box\">\r\n                    <div className=\"toolbar-root d-flex justify-content-between p-3 position-relative\">\r\n                        <div className={classNames('bulk-actions-toolbar toolbar d-flex align-items-center justify-content-between position-absolute px-4 w-100 h-100', {show: selected.length})}>\r\n                            <label className=\"font-weight-bold\">{selected.length} item{selected.length > 1 ? 's' : null} selected</label>\r\n\r\n                            <button className=\"btn btn-sm text-danger\" onClick={ () => console.log('non') }><FontAwesomeIcon icon=\"trash\" /> DELETE</button>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"_search\">\r\n                                <input type=\"search\" className=\"form-control form-control-sm\" placeholder=\"Search\" onKeyUp={searchHandler} />\r\n                            </div>\r\n\r\n                            {  Object.keys(filters).map( filter => (\r\n                                <div key={filter} className=\"d-flex align-items-center ml-3\">\r\n                                    <span className=\"mr-2\" onClick={() => removeFilter(filter)}><FontAwesomeIcon icon=\"times\" /></span>\r\n                                    {filters[filter]}\r\n                                </div>\r\n                            ) ) }\r\n                        </div>\r\n\r\n                        <div className=\"_action\">\r\n                            <Link to={`${match.path}/new`} className=\"btn btn-sm anchor mr-2\"><FontAwesomeIcon icon=\"plus\" /> New</Link>\r\n                            <FilterList list={[ 'payment_method', 'account', 'currency']} />\r\n                            <button className=\"btn btn-sm\" onClick={ () => csv(csvData(filtered), 'Cash Flow') }><FontAwesomeIcon icon=\"file-export\" /> EXPORT</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"content-body\">\r\n                        <table className=\"table table-md vertical-top edge-pad\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        <input type=\"checkbox\" className=\"fancy-input\" value=\"all\" onChange={checkHandler} />\r\n                                    </th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('date')}>Date {arrow('date')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('reference')}>Reference {arrow('reference')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('customer')}>Customer {arrow('customer')}</span></th>\r\n                                    <th className=\"text-right\"><span className=\"pointer\" onClick={() => sortHandler('orderCount')}>No. Items {arrow('orderCount')}</span></th>\r\n                                    <th className=\"text-right\"><span className=\"pointer\" onClick={() => sortHandler('amount')}>Total {arrow('amount')}</span></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                { current.map( ({ id, date, reference, customer, orderCount, amount }) => (\r\n                                    <tr key={id} className=\"pointer bg-hover\" onClick={() => openOrder(id)}>\r\n                                        <td>\r\n                                            <input type=\"checkbox\" className=\"fancy-input\" value={id} onChange={checkHandler} />\r\n                                        </td>\r\n                                        <td>{date}</td>\r\n                                        <td>{reference}</td>\r\n                                        <td>{customer}</td>\r\n                                        <td className=\"text-right\">{orderCount}</td>\r\n                                        <td className=\"text-right\">{amount.toFixed(2)}</td>\r\n                                    </tr>\r\n                                ) ) }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-end pb-2 px-3\">\r\n                        <div className=\"_action\">\r\n                            <label>Rows per page:</label>\r\n\r\n                            <select className=\"border-0 mr-4 pl-1 font-weight-bold\" value={perPage} onChange={perPageHandler}>\r\n                                <option value=\"5\">5</option>\r\n                                <option value=\"10\">10</option>\r\n                                <option value=\"25\">25</option>\r\n                                <option value=\"50\">50</option>\r\n                            </select>\r\n\r\n                            { chunkData.length > 1 ? <span className=\"mr-4\">{navigationInfo(page, perPage, chunkData.length, filtered.length)}</span> : null }\r\n\r\n                            <span className=\"navigation\">\r\n                                <button className=\"btn\" disabled={page === 1} onClick={() => pageHandler(page - 1)}><FontAwesomeIcon icon=\"chevron-left\" /></button>\r\n                                <label>{page} of {chunkData.length}</label>\r\n                                <button className=\"btn\" disabled={page === chunkData.length} onClick={() => pageHandler(page + 1)}><FontAwesomeIcon icon=\"chevron-right\" /></button>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <Link to={`${match.path}/new`} className=\"btn btn-sm anchor m-5\"><FontAwesomeIcon icon=\"plus\" /> New Order</Link>\r\n        }\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nexport default Show\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\index.jsx",["705"],"import React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withRouter } from 'react-router-dom'\r\nimport queryString from 'query-string'\r\nimport { options as defs } from './defaults'\r\nimport { structuredData, structuredColumns } from './manipulator'\r\nimport { CheckNotice, Filter, Table, Pagination } from './components'\r\nimport classNames from 'classnames'\r\nimport { withDevice } from '../../../components/hoc' \r\n\r\nimport './table.scss'\r\n\r\nconst DersureTable = ({ location, ...props }) => {\r\n    const options = { ...defs, ...props.options, ...props.device }\r\n    const query = location.search\r\n    ? queryString.parse(location.search)\r\n    : { filter: JSON.stringify({}), sort: options.sortOrder.name, order: options.sortOrder.direction, page: options.page, perPage: options.rowsPerPage }\r\n\r\n    const columns = structuredColumns(props.columns, props.columnDefs)\r\n    const { filterable, filtered, chunked, batch } = structuredData(columns, props.data, options, query)\r\n    const path = location.pathname\r\n    const query_filters = JSON.parse(query.filter)\r\n\r\n    const [ displayedFilters, setDisplayedFilters ] = useState(Object.keys(query_filters).filter(item => item !== 'q'))\r\n    \r\n    const [ selected, setSelected ] = useState([])\r\n    \r\n    const sortHandler = text => {\r\n        const txt = text.toLowerCase()\r\n        const order = (query.sort === txt) ? query.order === 'asc' ? 'desc' : 'asc' : 'asc'\r\n        _push({ sort: txt, page: 1, order })\r\n    }\r\n    \r\n    const checkHandler = e => {\r\n        const val = e.currentTarget.value\r\n        \r\n        if ( val === 'all' ) {\r\n            setSelected( (selected.length === batch.length) ? [] : batch.map(item => item.id) )\r\n            return false\r\n        } \r\n        \r\n        setSelected( selected.includes(val) ? selected.filter(item => item !== val) : selected.concat(val) )\r\n    }\r\n\r\n    const _push = options => props.history.push(`${path}?${queryString.stringify({ ...query, ...options })}`)\r\n\r\n    if (options.isMobile) options.responsive = 'stacked'\r\n\r\n    return (\r\n        <div className={classNames('dersure-table', {'shadow-box': (options.shadow && options.isBrowser)})}>\r\n            { options.select ? <CheckNotice checked={selected} setSelected={setSelected} /> : null }\r\n\r\n            <Filter\r\n                title={props.title}\r\n                columns={columns}\r\n                data={filterable}\r\n                filteredData={filtered}\r\n                displayedFilters={displayedFilters}\r\n                setDisplayedFilters={setDisplayedFilters}\r\n                sortHandler={sortHandler}\r\n                query={query}\r\n                options={options}\r\n                path={props.match.path}\r\n                _push={_push}            \r\n            />\r\n            \r\n            { (batch.length > 0) ? (\r\n                <>\r\n                    { ( Table[options.responsive] === undefined ) ? null :\r\n                        React.createElement( Table[options.responsive], {\r\n                            columns,\r\n                            data: batch,\r\n                            options,   \r\n                            query,\r\n                            selected,\r\n                            setSelected: checkHandler,\r\n                            sortHandler,                        \r\n                        } )\r\n                    }\r\n                    \r\n                    <Pagination\r\n                        page={parseInt(query.page)}\r\n                        perPage={parseInt(query.perPage)}\r\n                        total={filtered.length}\r\n                        part={chunked.length}   \r\n                        options={options}                         \r\n                        _push={_push}                    \r\n                    />\r\n                </>\r\n            ) : (\r\n                <div className=\"alert alert-primary\" role=\"alert\">\r\n                    No results found!\r\n                </div>\r\n            ) }                                \r\n        </div>                \r\n    )\r\n}\r\n\r\nDersureTable.defaultProps = {\r\n    title: '',\r\n    options: {},\r\n    columnDefs: []\r\n}\r\n\r\nDersureTable.propTypes = {\r\n    title: PropTypes.string,  \r\n    columns: PropTypes.array.isRequired,\r\n    data: PropTypes.array.isRequired,\r\n    options: PropTypes.object,\r\n    columnDefs: PropTypes.array\r\n}\r\n\r\nexport default withRouter(withDevice(DersureTable))\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\CloseSidebar.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\Search.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\SidebarFooter.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\NotFound.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\Nav.js",["706"],"import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport NavItem from './NavItem' \r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst Nav = ({ data, location }) => {\r\n    const [ activeItem, setActiveItem ] = useState(null)\r\n    const [ expandedItem, setExpandedItem ] = useState(null)\r\n    // setState({ ...state, ...{activeItem: id} })\r\n    // setState({ ...state, ...{expandedItem: state.expandedItem === id ? null : id} })\r\n    const activateMe = id => setActiveItem(id)\r\n    const toggleSubMenu = id => setExpandedItem(expandedItem === id ? null : id)\r\n\r\n    useEffect( () => {\r\n        for ( let res of data ) {\r\n            if (res.children) {\r\n                if ( res.children.find( item => item.path === location.pathname ) ) {\r\n                    toggleSubMenu(res.id)\r\n                }\r\n            } else {\r\n                if ( res.path === location.pathname ) {\r\n                    activateMe(res.id)\r\n                }\r\n            }\r\n        }\r\n    }, [] )\r\n    \r\n    if ( data.length < 1 ) return null\r\n\r\n    return <ul>\r\n        {data.map( item =>\r\n            <NavItem\r\n                key={item.id}\r\n                activateMe={activateMe}\r\n                subMenuVisible={expandedItem === item.id}\r\n                expandedItem={expandedItem}\r\n                toggleSubMenu={toggleSubMenu}\r\n                activeItem={activeItem}\r\n                {...item}\r\n            />            \r\n        )}\r\n    </ul>\r\n}\r\n\r\nNav.propTypes = { data: PropTypes.array.isRequired, location: PropTypes.object.isRequired, }\r\n\r\nexport default withRouter(Nav)\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\ChangeFontSize.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\sfa\\sales\\Truck.js",["707"],"import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst Truck = ({ data }) => {\r\n    console.log(data)\r\n    return (\r\n        <div className=\"shadow-box truck\">\r\n            <table className=\"table table-md edge-pad\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Product</th>\r\n                        <th className=\"text-center\">Unit Price</th>\r\n                        <th className=\"text-right\">Quantity</th>\r\n                        <th className=\"text-right\">Amount</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    { data.map( ({ product, price, quantity }, i) => (\r\n                        <tr key={i}>\r\n                            <td>{product}</td>\r\n                            <td className=\"text-center\">&#x20A6;{price}</td>\r\n                            <td className=\"text-right\">{quantity}</td>\r\n                            <td className=\"text-right\">&#8358;{price * quantity}</td>\r\n                        </tr>\r\n                    ) ) }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Truck\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\date-picker.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Error.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\rating.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\MobileAddBtn.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\hooks\\index.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\index.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\NavItem.js",["708"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport Nav from './Nav'\r\nimport classNames from 'classnames'\r\n\r\nconst NavItem = ({ id, path, icon, label, badge, children, subMenuVisible, isChild, ...props }) => {\r\n    if ( props.header ) {\r\n        return (\r\n            <li className=\"header-menu\">\r\n                <span>{label}</span>\r\n            </li>\r\n        )\r\n    } else {\r\n        const iconEl = isChild ? <FontAwesomeIcon icon={icon} /> : <i><FontAwesomeIcon icon={icon} /></i>\r\n        const labelEl = isChild ? label : <span className=\"menu-text\">{label}</span>\r\n        const badgeEl = badge ? <span className={`badge badge-pill badge-${badge.bgColor}`}>{badge.text}</span> : null\r\n              \r\n        if ( children ) {\r\n            children.map( child => child.isChild = true )\r\n\r\n            return (\r\n                <li className={classNames('sidebar-dropdown', { expand: subMenuVisible })}>\r\n                    <Link to={path} onClick={ e => props.toggleSubMenu(id, e) }>  \r\n                        {iconEl}\r\n                        {labelEl}\r\n                        {badgeEl}\r\n                        <FontAwesomeIcon icon=\"angle-right\" className=\"toggler\" />\r\n                    </Link>\r\n\r\n                    <div className={\"sidebar-submenu \" + (subMenuVisible ? 'expanded' : 'collapsed')}>\r\n                        <Nav data={children} />\r\n                    </div>\r\n                </li>\r\n            )                \r\n        } else {\r\n            return (\r\n                <li>\r\n                    <Link to={path} className={classNames({ active: props.activeItem === id })} onClick={ () => props.activateMe(id) }>    \r\n                        {iconEl}\r\n                        {labelEl}\r\n                        {badgeEl}\r\n                    </Link>\r\n                </li>\r\n            )\r\n        }       \r\n    }\r\n\r\n}\r\n\r\nNavItem.defaultProps = {\r\n    path: '/',\r\n    icon: ['far', 'circle'],\r\n    toggleSubMenu: null,\r\n}\r\n\r\nNavItem.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    path: PropTypes.string,\r\n    icon: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.array\r\n    ]),\r\n    label: PropTypes.string.isRequired,\r\n    badge: PropTypes.exact({\r\n        bgColor: PropTypes.string,\r\n        text: PropTypes.any\r\n    }),\r\n    header: PropTypes.bool,\r\n    children: PropTypes.array,\r\n    activeItem: PropTypes.any,\r\n    activateMe: PropTypes.func.isRequired,\r\n    toggleSubMenu: PropTypes.func,\r\n}\r\n\r\nexport default NavItem\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\PowerOff.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\PinFooter.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\Settings.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\Message.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\layout\\Notification.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\hooks\\useTitle.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\manipulator.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\components.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\defaults.js",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\CheckNotice.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\Pagination.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\Table.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\Filter.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\Navigation.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\TableStack.jsx",["709"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const TableStack = ({columns, data, options, query, setSelected}) => {\r\n    const checkHandler = e => setSelected([1])\r\n\r\n    return (\r\n        <div className=\"stacked card-columns\">\r\n            { data.map( (item, index) => {\r\n                if ( typeof(options.customStackRender) !== 'undefined' ) {\r\n                    return React.createElement( options.customStackRender, {\r\n                        key: index,\r\n                        data,\r\n                        dataIndex: index,\r\n                        rowIndex: index\r\n                    } )\r\n                }\r\n\r\n                return (\r\n                    <ul key={index} className=\"card p-2\">\r\n                        { columns.map( ({label, name, options}, i) => (\r\n                            <li key={i}>\r\n                                <label className=\"mr-1\">{label}:</label>\r\n                                <span>\r\n                                    {\r\n                                        'render' in options ? options.render(item[name], item, index)\r\n                                        : item[name]\r\n                                    }                                    \r\n                                </span>\r\n                            </li>\r\n                        ) ) }\r\n                    </ul>                    \r\n                )\r\n            } ) }\r\n        </div>  \r\n    )\r\n}\r\n\r\nTableStack.propTypes = {\r\n    columns: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\r\n    data: PropTypes.array.isRequired,\r\n    options: PropTypes.object.isRequired,  \r\n    query: PropTypes.object.isRequired,\r\n    setSelected: PropTypes.func.isRequired,\r\n}\r\n","C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\Sorter.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\DisplayFilter.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\AddFilter.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\Create.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\Download.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\Search.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\TableStandard.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\PageMenu.jsx",[],["710","711"],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\TableBody.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\Table\\TableHead.jsx",[],"C:\\Users\\Andrew\\Desktop\\personal\\erp\\src\\components\\fragment\\checker.jsx",[],{"ruleId":"712","replacedBy":"713"},{"ruleId":"714","replacedBy":"715"},{"ruleId":"716","severity":1,"message":"717","line":13,"column":1,"nodeType":"718","endLine":25,"endColumn":2},{"ruleId":"719","severity":1,"message":"720","line":48,"column":77,"nodeType":"721","endLine":48,"endColumn":92},{"ruleId":"722","severity":1,"message":"723","line":1,"column":17,"nodeType":"724","messageId":"725","endLine":1,"endColumn":26},{"ruleId":"722","severity":1,"message":"726","line":1,"column":28,"nodeType":"724","messageId":"725","endLine":1,"endColumn":36},{"ruleId":"722","severity":1,"message":"727","line":2,"column":17,"nodeType":"724","messageId":"725","endLine":2,"endColumn":21},{"ruleId":"722","severity":1,"message":"727","line":2,"column":17,"nodeType":"724","messageId":"725","endLine":2,"endColumn":21},{"ruleId":"722","severity":1,"message":"728","line":24,"column":25,"nodeType":"724","messageId":"725","endLine":24,"endColumn":28},{"ruleId":"729","severity":1,"message":"730","line":30,"column":8,"nodeType":"731","endLine":30,"endColumn":10,"suggestions":"732"},{"ruleId":"722","severity":1,"message":"723","line":1,"column":17,"nodeType":"724","messageId":"725","endLine":1,"endColumn":26},{"ruleId":"722","severity":1,"message":"726","line":1,"column":28,"nodeType":"724","messageId":"725","endLine":1,"endColumn":36},{"ruleId":"722","severity":1,"message":"727","line":2,"column":17,"nodeType":"724","messageId":"725","endLine":2,"endColumn":21},{"ruleId":"733","severity":1,"message":"734","line":4,"column":61,"nodeType":"735","messageId":"736","endLine":4,"endColumn":63},{"ruleId":"737","severity":1,"message":"738","line":12,"column":3,"nodeType":"739","messageId":"740","endLine":41,"endColumn":4},{"ruleId":"733","severity":1,"message":"734","line":19,"column":29,"nodeType":"735","messageId":"736","endLine":19,"endColumn":31},{"ruleId":"733","severity":1,"message":"734","line":22,"column":36,"nodeType":"735","messageId":"736","endLine":22,"endColumn":38},{"ruleId":"733","severity":1,"message":"734","line":33,"column":22,"nodeType":"735","messageId":"736","endLine":33,"endColumn":24},{"ruleId":"733","severity":1,"message":"734","line":37,"column":20,"nodeType":"735","messageId":"736","endLine":37,"endColumn":22},{"ruleId":"729","severity":1,"message":"741","line":30,"column":8,"nodeType":"731","endLine":30,"endColumn":10,"suggestions":"742"},{"ruleId":"729","severity":1,"message":"743","line":39,"column":8,"nodeType":"731","endLine":39,"endColumn":27,"suggestions":"744"},{"ruleId":"722","severity":1,"message":"745","line":6,"column":10,"nodeType":"724","messageId":"725","endLine":6,"endColumn":17},{"ruleId":"722","severity":1,"message":"746","line":6,"column":19,"nodeType":"724","messageId":"725","endLine":6,"endColumn":22},{"ruleId":"722","severity":1,"message":"747","line":21,"column":17,"nodeType":"724","messageId":"725","endLine":21,"endColumn":20},{"ruleId":"729","severity":1,"message":"748","line":62,"column":8,"nodeType":"731","endLine":62,"endColumn":10,"suggestions":"749"},{"ruleId":"722","severity":1,"message":"750","line":73,"column":19,"nodeType":"724","messageId":"725","endLine":73,"endColumn":27},{"ruleId":"722","severity":1,"message":"745","line":5,"column":10,"nodeType":"724","messageId":"725","endLine":5,"endColumn":17},{"ruleId":"729","severity":1,"message":"751","line":43,"column":8,"nodeType":"731","endLine":43,"endColumn":10,"suggestions":"752"},{"ruleId":"729","severity":1,"message":"753","line":45,"column":64,"nodeType":"731","endLine":45,"endColumn":87,"suggestions":"754"},{"ruleId":"729","severity":1,"message":"751","line":42,"column":8,"nodeType":"731","endLine":42,"endColumn":10,"suggestions":"755"},{"ruleId":"729","severity":1,"message":"753","line":44,"column":64,"nodeType":"731","endLine":44,"endColumn":87,"suggestions":"756"},{"ruleId":"722","severity":1,"message":"727","line":2,"column":10,"nodeType":"724","messageId":"725","endLine":2,"endColumn":14},{"ruleId":"729","severity":1,"message":"741","line":30,"column":8,"nodeType":"731","endLine":30,"endColumn":10,"suggestions":"757"},{"ruleId":"729","severity":1,"message":"743","line":39,"column":8,"nodeType":"731","endLine":39,"endColumn":27,"suggestions":"758"},{"ruleId":"722","severity":1,"message":"759","line":4,"column":17,"nodeType":"724","messageId":"725","endLine":4,"endColumn":25},{"ruleId":"722","severity":1,"message":"760","line":13,"column":13,"nodeType":"724","messageId":"725","endLine":13,"endColumn":21},{"ruleId":"722","severity":1,"message":"761","line":13,"column":23,"nodeType":"724","messageId":"725","endLine":13,"endColumn":34},{"ruleId":"722","severity":1,"message":"762","line":14,"column":13,"nodeType":"724","messageId":"725","endLine":14,"endColumn":19},{"ruleId":"722","severity":1,"message":"763","line":14,"column":21,"nodeType":"724","messageId":"725","endLine":14,"endColumn":30},{"ruleId":"722","severity":1,"message":"764","line":15,"column":13,"nodeType":"724","messageId":"725","endLine":15,"endColumn":20},{"ruleId":"722","severity":1,"message":"765","line":15,"column":22,"nodeType":"724","messageId":"725","endLine":15,"endColumn":32},{"ruleId":"729","severity":1,"message":"766","line":24,"column":8,"nodeType":"731","endLine":24,"endColumn":16,"suggestions":"767"},{"ruleId":"722","severity":1,"message":"745","line":6,"column":10,"nodeType":"724","messageId":"725","endLine":6,"endColumn":17},{"ruleId":"722","severity":1,"message":"746","line":6,"column":19,"nodeType":"724","messageId":"725","endLine":6,"endColumn":22},{"ruleId":"729","severity":1,"message":"748","line":49,"column":8,"nodeType":"731","endLine":49,"endColumn":10,"suggestions":"768"},{"ruleId":"722","severity":1,"message":"769","line":2,"column":8,"nodeType":"724","messageId":"725","endLine":2,"endColumn":17},{"ruleId":"770","severity":1,"message":"771","line":7,"column":13,"nodeType":"772","endLine":7,"endColumn":72},{"ruleId":"722","severity":1,"message":"727","line":2,"column":17,"nodeType":"724","messageId":"725","endLine":2,"endColumn":21},{"ruleId":"722","severity":1,"message":"773","line":2,"column":23,"nodeType":"724","messageId":"725","endLine":2,"endColumn":29},{"ruleId":"722","severity":1,"message":"728","line":34,"column":25,"nodeType":"724","messageId":"725","endLine":34,"endColumn":28},{"ruleId":"729","severity":1,"message":"730","line":40,"column":8,"nodeType":"731","endLine":40,"endColumn":10,"suggestions":"774"},{"ruleId":"722","severity":1,"message":"727","line":2,"column":17,"nodeType":"724","messageId":"725","endLine":2,"endColumn":21},{"ruleId":"722","severity":1,"message":"773","line":2,"column":23,"nodeType":"724","messageId":"725","endLine":2,"endColumn":29},{"ruleId":"722","severity":1,"message":"728","line":36,"column":25,"nodeType":"724","messageId":"725","endLine":36,"endColumn":28},{"ruleId":"729","severity":1,"message":"730","line":42,"column":8,"nodeType":"731","endLine":42,"endColumn":10,"suggestions":"775"},{"ruleId":"733","severity":1,"message":"776","line":67,"column":164,"nodeType":"735","messageId":"736","endLine":67,"endColumn":166},{"ruleId":"722","severity":1,"message":"777","line":3,"column":16,"nodeType":"724","messageId":"725","endLine":3,"endColumn":23},{"ruleId":"722","severity":1,"message":"778","line":4,"column":10,"nodeType":"724","messageId":"725","endLine":4,"endColumn":21},{"ruleId":"722","severity":1,"message":"779","line":4,"column":33,"nodeType":"724","messageId":"725","endLine":4,"endColumn":39},{"ruleId":"722","severity":1,"message":"759","line":4,"column":17,"nodeType":"724","messageId":"725","endLine":4,"endColumn":25},{"ruleId":"722","severity":1,"message":"760","line":13,"column":13,"nodeType":"724","messageId":"725","endLine":13,"endColumn":21},{"ruleId":"722","severity":1,"message":"761","line":13,"column":23,"nodeType":"724","messageId":"725","endLine":13,"endColumn":34},{"ruleId":"722","severity":1,"message":"762","line":14,"column":13,"nodeType":"724","messageId":"725","endLine":14,"endColumn":19},{"ruleId":"722","severity":1,"message":"763","line":14,"column":21,"nodeType":"724","messageId":"725","endLine":14,"endColumn":30},{"ruleId":"722","severity":1,"message":"764","line":15,"column":13,"nodeType":"724","messageId":"725","endLine":15,"endColumn":20},{"ruleId":"722","severity":1,"message":"765","line":15,"column":22,"nodeType":"724","messageId":"725","endLine":15,"endColumn":32},{"ruleId":"729","severity":1,"message":"766","line":24,"column":8,"nodeType":"731","endLine":24,"endColumn":16,"suggestions":"780"},{"ruleId":"722","severity":1,"message":"727","line":3,"column":10,"nodeType":"724","messageId":"725","endLine":3,"endColumn":14},{"ruleId":"722","severity":1,"message":"759","line":4,"column":17,"nodeType":"724","messageId":"725","endLine":4,"endColumn":25},{"ruleId":"722","severity":1,"message":"781","line":14,"column":22,"nodeType":"724","messageId":"725","endLine":14,"endColumn":32},{"ruleId":"722","severity":1,"message":"760","line":15,"column":13,"nodeType":"724","messageId":"725","endLine":15,"endColumn":21},{"ruleId":"722","severity":1,"message":"761","line":15,"column":23,"nodeType":"724","messageId":"725","endLine":15,"endColumn":34},{"ruleId":"722","severity":1,"message":"762","line":16,"column":13,"nodeType":"724","messageId":"725","endLine":16,"endColumn":19},{"ruleId":"722","severity":1,"message":"763","line":16,"column":21,"nodeType":"724","messageId":"725","endLine":16,"endColumn":30},{"ruleId":"722","severity":1,"message":"764","line":17,"column":13,"nodeType":"724","messageId":"725","endLine":17,"endColumn":20},{"ruleId":"722","severity":1,"message":"765","line":17,"column":22,"nodeType":"724","messageId":"725","endLine":17,"endColumn":32},{"ruleId":"729","severity":1,"message":"766","line":26,"column":8,"nodeType":"731","endLine":26,"endColumn":16,"suggestions":"782"},{"ruleId":"722","severity":1,"message":"783","line":5,"column":17,"nodeType":"724","messageId":"725","endLine":5,"endColumn":25},{"ruleId":"729","severity":1,"message":"753","line":22,"column":64,"nodeType":"731","endLine":22,"endColumn":87,"suggestions":"784"},{"ruleId":"722","severity":1,"message":"783","line":5,"column":17,"nodeType":"724","messageId":"725","endLine":5,"endColumn":25},{"ruleId":"729","severity":1,"message":"753","line":22,"column":64,"nodeType":"731","endLine":22,"endColumn":87,"suggestions":"785"},{"ruleId":"722","severity":1,"message":"723","line":1,"column":17,"nodeType":"724","messageId":"725","endLine":1,"endColumn":26},{"ruleId":"729","severity":1,"message":"786","line":26,"column":8,"nodeType":"731","endLine":26,"endColumn":10,"suggestions":"787"},{"ruleId":"722","severity":1,"message":"788","line":2,"column":10,"nodeType":"724","messageId":"725","endLine":2,"endColumn":25},{"ruleId":"722","severity":1,"message":"777","line":3,"column":16,"nodeType":"724","messageId":"725","endLine":3,"endColumn":23},{"ruleId":"722","severity":1,"message":"789","line":5,"column":11,"nodeType":"724","messageId":"725","endLine":5,"endColumn":23},{"ruleId":"712","replacedBy":"790"},{"ruleId":"714","replacedBy":"791"},"no-native-reassign",["792"],"no-negated-in-lhs",["793"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Link' is defined but never used.","'msg' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'dispatch'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["794"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'match.params.id' and 'type'. Either include them or remove the dependency array.",["795"],"React Hook useEffect has missing dependencies: 'account', 'currency.length', 'inputs', and 'type'. Either include them or remove the dependency array.",["796"],"'_object' is defined but never used.","'csv' is defined but never used.","'obj' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'translateStatus'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["797"],"'columns2' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["798"],"React Hook useEffect has a missing dependency: 'updateFilters'. Either include it or remove the dependency array.",["799"],["800"],["801"],["802"],["803"],"'DateTime' is defined but never used.","'currency' is assigned a value but never used.","'setCurrency' is assigned a value but never used.","'method' is assigned a value but never used.","'setMethod' is assigned a value but never used.","'account' is assigned a value but never used.","'setAccount' is assigned a value but never used.","React Hook useLayoutEffect has missing dependencies: 'data' and 'id'. Either include them or remove the dependency array.",["804"],["805"],"'PropTypes' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Switch' is defined but never used.",["806"],["807"],"Expected '===' and instead saw '=='.","'NavLink' is defined but never used.","'NavDropdown' is defined but never used.","'Button' is defined but never used.",["808"],"'setLoading' is assigned a value but never used.",["809"],"'truncate' is defined but never used.",["810"],["811"],"React Hook useEffect has missing dependencies: 'data', 'location.pathname', and 'toggleSubMenu'. Either include them or remove the dependency array.",["812"],"'FontAwesomeIcon' is defined but never used.","'checkHandler' is assigned a value but never used.",["792"],["793"],"no-global-assign","no-unsafe-negation",{"desc":"813","fix":"814"},{"desc":"815","fix":"816"},{"desc":"817","fix":"818"},{"desc":"819","fix":"820"},{"desc":"821","fix":"822"},{"desc":"823","fix":"824"},{"desc":"821","fix":"825"},{"desc":"823","fix":"826"},{"desc":"815","fix":"827"},{"desc":"817","fix":"828"},{"desc":"829","fix":"830"},{"desc":"819","fix":"831"},{"desc":"813","fix":"832"},{"desc":"813","fix":"833"},{"desc":"829","fix":"834"},{"desc":"829","fix":"835"},{"desc":"823","fix":"836"},{"desc":"823","fix":"837"},{"desc":"838","fix":"839"},"Update the dependencies array to be: [data, dispatch]",{"range":"840","text":"841"},"Update the dependencies array to be: [match.params.id, type]",{"range":"842","text":"843"},"Update the dependencies array to be: [account, currency.length, inputs, inputs.account_id, type]",{"range":"844","text":"845"},"Update the dependencies array to be: [dispatch, translateStatus]",{"range":"846","text":"847"},"Update the dependencies array to be: [dispatch]",{"range":"848","text":"849"},"Update the dependencies array to be: [loaded, search.filter, updateFilters]",{"range":"850","text":"851"},{"range":"852","text":"849"},{"range":"853","text":"851"},{"range":"854","text":"843"},{"range":"855","text":"845"},"Update the dependencies array to be: [data, id, loaded]",{"range":"856","text":"857"},{"range":"858","text":"847"},{"range":"859","text":"841"},{"range":"860","text":"841"},{"range":"861","text":"857"},{"range":"862","text":"857"},{"range":"863","text":"851"},{"range":"864","text":"851"},"Update the dependencies array to be: [data, location.pathname, toggleSubMenu]",{"range":"865","text":"866"},[1164,1166],"[data, dispatch]",[1361,1363],"[match.params.id, type]",[1653,1672],"[account, currency.length, inputs, inputs.account_id, type]",[2226,2228],"[dispatch, translateStatus]",[1735,1737],"[dispatch]",[1805,1828],"[loaded, search.filter, updateFilters]",[1691,1693],[1761,1784],[1361,1363],[1653,1672],[883,891],"[data, id, loaded]",[1840,1842],[1699,1701],[1738,1740],[889,897],[989,997],[983,1006],[974,997],[1015,1017],"[data, location.pathname, toggleSubMenu]"]
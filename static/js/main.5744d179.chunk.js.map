{"version":3,"sources":["actions/alerts.js","actions/settings.js","actions/UI.js","actions/users.js","reducers/settings.js","reducers/UI.js","reducers/authentication.js","reducers/index.js","reducers/alerts.js","reducers/registration.js","reducers/users.js","store/index.js","serviceWorker.js","components/Error.js","components/ErrorBoundary.jsx","components/layout/Loader.jsx","components/App.js","containers/App.js","index.js","helpers/storeAPI.js","helpers/UI.js","helpers/csv.js","helpers/object.js","helpers/_date.js","services/users.js","services/cash-flow.js","services/account.js","services/payment.js","helpers/jwt-token.js","constants/alerts.js","constants/UI.js","constants/users.js","constants/settings.js","components/Home.jsx","components/purchases/index.js","components/sales/index.js","components/stock/index.js","helpers/customSwitch.js","config/theme.js","components/layout/Themes.js","components/AppSettings.js","containers/AppSettings.js","components/fragment/form-elements.jsx","components/cashflow/Show.js","components/fragment/date-picker.jsx","components/fragment/Error.jsx","components/fragment/rating.jsx","components/cashflow/AddCashFlow.js","components/cashflow/Account.js","helpers/variable.js","components/cashflow/index.js","components/sfa/customer/service.js","components/sfa/customer/Customers.js","components/sfa/customer/Create.js","components/sfa/customer/index.js","components/sfa/sales/service.js","components/sfa/sales/Show.js","components/sfa/sales/Truck.js","components/sfa/sales/AddOrder.js","components/sfa/sales/index.js","components/sfa/index.js","components/fragment/mobile-add-button.jsx","components/products/Show.js","components/products/Add.js","components/products/reviews.service.js","components/fragment/Table/defaults.js","components/fragment/Table/Search.jsx","components/fragment/Table/Download.jsx","components/fragment/Table/Create.jsx","components/fragment/Table/AddFilter.jsx","components/fragment/Table/DisplayFilter.jsx","components/fragment/Table/Filter.jsx","components/fragment/checker.jsx","components/fragment/Table/TableHead.jsx","components/fragment/Table/TableBody.jsx","components/fragment/Table/Table.jsx","components/fragment/Table/PageMenu.jsx","components/fragment/Table/Navigation.jsx","components/fragment/Table/Pagination.jsx","components/fragment/Table/index.jsx","components/fragment/Table/manipulator.js","components/products/Reviews.js","components/products/index.js","components/routeComponents.js","config/routes.js","config/app.js","config/menu.js"],"names":["alertActions","success","message","type","alertConstants","SUCCESS","error","ERROR","info","INFO","clear","CLEAR","settingActions","setFontSize","size","settingConstants","FONT_SIZE","sidebarVisibility","SIDEBAR","setPinSidebar","PIN_SIDEBAR","setMainHeader","MAIN_HEADER","rightPanelVisibility","RIGHT_PANEL","setTheme","theme","THEME","setSidebarBgImg","img","SIDEBAR_BG_IMG","sidebarBgImgVisibility","SIDEBAR_BG_IMG_VISIBILITY","borderRadiusVisibility","BORDER_RADIUS","UI_Actions","changeFontSize","UI","CHANGE_FONTSIZE","toggleSidebar","TOGGLE_SIDEBAR","togglePinSidebar","TOGGLE_PIN_SIDEBAR","sidebarHover","SIDEBAR_HOVER","SidebarConfig","settings","getStorage","sidebarVisible","sidebar","pinSidebar","err","REGISTER_REQUEST","userConstants","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE","userActions","loginRequest","email","loginSuccess","user","loginFailure","logout","registerRequest","registerSuccess","registerFailure","getAllRequest","getAllSuccess","users","getAllFailure","deleteRequest","id","deleteSuccess","deleteFailure","initialState","fontSize","mainHeader","rightPanel","sidebarBgImg","sidebarBg","borderRadius","state","action","sidebarMouseEnter","contentBox","UI_Constants","helper","persistentState","JSON","parse","localStorage","getItem","loggedIn","authentication","loggingIn","combineReducers","alert","typeAlias","auth","registration","registering","loading","data","map","deleting","filter","userCopy","deleteError","store","createStore","rootReducer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","Error","className","style","height","padding","ErrorBoundary","hasError","this","setState","props","children","Component","Loader","library","add","faEnvelope","faKey","faTimes","faBars","faCircle","faCircleSolid","faSearch","faTachometerAlt","faShoppingCart","faChartLine","faGlobe","faBook","faCalendar","faFolder","faBell","faCog","faPowerOff","faGem","faAngleRight","faCheck","faExclamation","faExclamationTriangle","faEllipsisH","faHome","faExpand","faCompress","faTextHeight","faThumbtack","faUserAlt","faUser","faLock","faPlus","faFilter","faReply","faReplyAll","faPrint","faTrash","faLink","faArrowUp","faArrowDown","faSave","faTimesCircle","faCaretLeft","faCaretRight","faChevronUp","faChevronDown","faChevronRight","faChevronLeft","faFileAlt","faFileExport","faSyncAlt","faMapMarkerAlt","faTools","faAddressCard","faStoreAlt","faPoll","faCoins","faShoppingBag","faStore","faMoneyBill","faUsers","faSalesforce","faClock","faEdit","faTruckMoving","faStar","faDownload","Dashboard","lazy","Login","App","clearAlert","signIn","myAlert","useAlert","useEffect","show","onOpen","fallback","basename","connect","dispatch","password","e","String","fromCharCode","userService","login","response","msg","status","toString","preventDefault","loadProgressBar","axios","defaults","baseURL","app","apiUrl","interceptors","request","use","Promise","reject","EVENTS_TO_MODIFY","originalAddEventListener","document","addEventListener","bind","listener","options","wantsUntrusted","modOptions","includes","capture","passive","originalRemoveEventListener","removeEventListener","position","positions","BOTTOM_CENTER","timeout","offset","transition","transitions","SCALE","DOM","getElementById","ReactDOM","render","template","AlertTemplate","URL","process","href","origin","fetch","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","item","storeAPI","csv","csvData","fileName","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","_object","clean","obj","prop","undefined","removeEmpty","Object","keys","forEach","key","dateFormatter","month","time","date","Date","hour","getHours","getDate","getMonth","getFullYear","getMinutes","getSeconds","period","removeItem","input","post","setItem","stringify","getAll","getById","update","put","delete","refresh","cloneUser","token","resolve","cashFlowService","create","getOne","AccountService","PaymentService","jwtToken","name","Invoices","Orders","Returns","Stock","customSwitch","label","check","event","checked","onChange","htmlFor","defaultProps","schemes","images","Schemes","schemeELements","scheme","data-theme","title","onClick","BgImg","image","background","data-bg","Settings","S","AppSettings","Input","placeholder","value","required","handleChange","autoComplete","TextArea","rows","Dropdown","Radio","values","code","Field","res","field","Select","history","search","queryString","sort","order","page","perPage","useState","setData","loaded","setLoaded","filters","setFilters","path","pathname","updateFilters","k","filterComponent","pageHandler","pushSearch","startCase","Set","filterHandler","parse_filter","target","nFilter","sortHandler","text","push","length","parseInt","filtered","row","payment_method","currency","account","orderData","orderBy","chunkData","chunk","current","arrow","column","icon","FilterList","list","every","as","ButtonGroup","Toggle","bsPrefix","Menu","i","Item","queryFilters","addFilter","onKeyUp","q","query_filter","removeFilter","to","Account","Amount","symbol","amount","toFixed","Comments","comments","truncate","separator","url","currentTarget","batchLen","totalLen","navigationInfo","disabled","DateTime","selected","maxDate","showTimeSelect","ProcessError","errors","entries","Rating","rate","ratings","classNames","inputs","setInputs","setCurrency","method","setMethod","setAccount","setError","number","params","Math","abs","statusText","acc","find","account_id","_handleChange","handleAccount","handleDate","handleUndo","fields","onSubmit","v","items","_account","split","singleAcc","arr","total","reduce","a","b","CashFlow","exact","api","_add","_update","Service","Customers","setSelected","checkHandler","city","lastseen","Customer","Location","totalspent","useLayoutEffect","itemIndex","findIndex","maxWidth","phone","address","zip","nData","Show","orderCount","customer","Reference","reference","Total","openOrder","Truck","product","price","quantity","invoice","colSpan","sample","SFA","inlineCSS","bottom","zIndex","MobileAddBtn","class","role","aria-label","fakeReviews","columnOrder","download","pagination","rowsPerPage","rowsPerPageOptions","select","sortOrder","Search","_push","defaultValue","onInput","Download","Create","AddFilter","columns","displayedFilters","setDisplayedFilters","filterableColumns","filterable","concat","DisplayFilter","qFilters","f","toLowerCase","Filter","filteredData","Checker","circle","round","TableHead","query","index","s","sortable","pointer","txt","TableBody","rowIndex","col","Table","PageMenu","len","Navigation","part","Pagination","DersureTable","defs","direction","columnDefs","targets","Array","isArray","structuredColumns","join","toUpperCase","batchKey","chunked","batch","structuredData","query_filters","withRouter","translateStatus","faker","require","fake","_date","counter","getTime","recent","findName","commerce","productName","random","min","max","lorem","words","visible","Categories","DashBoard","Purchase","Sales","Products","Add","routes","component","Components","jwt","menu_items"],"mappings":"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","file":"static/js/main.5744d179.chunk.js","sourcesContent":["import { alertConstants } from '../constants'\r\n\r\nexport const alertActions = {\r\n    success: (message) => ({ type: alertConstants.SUCCESS, message }),\r\n    error: (message) => ({ type: alertConstants.ERROR, message }),\r\n    info: (message) => ({ type: alertConstants.INFO, message }),\r\n    clear: () => ({ type: alertConstants.CLEAR })\r\n}\r\n","\r\nimport { settingConstants } from '../constants'\r\n\r\nconst setFontSize = size => ({ type: settingConstants.FONT_SIZE, size })\r\n\r\nconst sidebarVisibility = () => ({ type: settingConstants.SIDEBAR })\r\n\r\nconst setPinSidebar = () => ({ type: settingConstants.PIN_SIDEBAR })\r\n\r\nconst setMainHeader = () => ({ type: settingConstants.MAIN_HEADER })\r\n\r\nconst rightPanelVisibility = () => ({ type: settingConstants.RIGHT_PANEL })\r\n\r\nconst setTheme = theme => ({ type: settingConstants.THEME, theme })\r\n\r\nconst setSidebarBgImg = img => ({ type: settingConstants.SIDEBAR_BG_IMG, img })\r\n\r\nconst sidebarBgImgVisibility = () => ({ type: settingConstants.SIDEBAR_BG_IMG_VISIBILITY })\r\n\r\nconst borderRadiusVisibility = () => ({ type: settingConstants.BORDER_RADIUS })\r\n\r\nexport const settingActions = {\r\n    setFontSize,\r\n    sidebarVisibility,\r\n    setPinSidebar,\r\n    setMainHeader,\r\n    rightPanelVisibility,\r\n    setTheme,\r\n    setSidebarBgImg,\r\n    sidebarBgImgVisibility,\r\n    borderRadiusVisibility\r\n}\r\n","import { getStorage } from '../helpers'\r\nimport { UI_Constants as UI } from '../constants'\r\n\r\nconst changeFontSize = size => ({ type: UI.CHANGE_FONTSIZE, size })\r\n\r\nconst toggleSidebar = () => ({ type: UI.TOGGLE_SIDEBAR })\r\n\r\nconst togglePinSidebar = () => ({ type: UI.TOGGLE_PIN_SIDEBAR })\r\n\r\nconst sidebarHover = () => ({ type: UI.SIDEBAR_HOVER })\r\n\r\nconst SidebarConfig = () => {\r\n\ttry {\r\n\t\tconst settings = getStorage('state').settings\r\n\t\treturn { sidebarVisible: settings.sidebar, pinSidebar: settings.pinSidebar }\r\n\t} catch (err) {\r\n\t\treturn {}\r\n\t}\r\n}\r\n\r\nexport const UI_Actions = {\r\n    changeFontSize,\r\n    toggleSidebar,\r\n    togglePinSidebar,\r\n    sidebarHover,\r\n    SidebarConfig\r\n}","import { userConstants } from '../constants'\r\n\r\nconst { REGISTER_REQUEST, REGISTER_SUCCESS, REGISTER_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, LOGOUT, GETALL_REQUEST, GETALL_SUCCESS, GETALL_FAILURE, DELETE_REQUEST, DELETE_SUCCESS, DELETE_FAILURE } = userConstants\r\n\r\nconst loginRequest = email => ({ type: LOGIN_REQUEST, email })\r\n\r\nconst loginSuccess = user => ({ type: LOGIN_SUCCESS, user })\r\n\r\nconst loginFailure = () => ({ type: LOGIN_FAILURE })\r\n\r\nconst logout = () => ({ type: LOGOUT })\r\n\r\nconst registerRequest = user => ({ type: REGISTER_REQUEST, user })\r\n\r\nconst registerSuccess = user => ({ type: REGISTER_SUCCESS, user })\r\n\r\nconst registerFailure = error => ({ type: REGISTER_FAILURE, error })\r\n\r\nconst getAllRequest = () => ({ type: GETALL_REQUEST })\r\n\r\nconst getAllSuccess = users => ({ type: GETALL_SUCCESS, users })\r\n\r\nconst getAllFailure = error => ({ type: GETALL_FAILURE, error })\r\n\r\nconst deleteRequest = id => ({ type: DELETE_REQUEST, id })\r\n\r\nconst deleteSuccess = id => ({ type: DELETE_SUCCESS, id })\r\n\r\nconst deleteFailure = (id, error) => ({ type: DELETE_FAILURE, id, error })\r\n\r\nexport const userActions = {\r\n    loginRequest,\r\n    loginSuccess,\r\n    loginFailure,\r\n    logout,\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerFailure,\r\n    getAllRequest,\r\n    getAllSuccess,\r\n    getAllFailure,\r\n    deleteRequest,\r\n    deleteSuccess,\r\n    deleteFailure,     \r\n}\r\n","\r\nimport { settingConstants } from '../constants'\r\n\r\nconst initialState = {\r\n\tfontSize: '100%',\r\n    sidebar: true,\r\n\tpinSidebar: false,\r\n\tmainHeader: true,\r\n\trightPanel: false,\r\n\ttheme: 'default-theme',\r\n\tsidebarBgImg: 'bg1',\r\n\tsidebarBg: false,\r\n    borderRadius: false\t\r\n}\r\n\r\nconst settings = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n\t\tcase settingConstants.FONT_SIZE:\r\n\t\t\treturn { ...state, ...{ fontSize: action.size } }\r\n\t\tcase settingConstants.SIDEBAR:\r\n\t\t\treturn { ...state, ...{ sidebar: !state.sidebar } }\t\r\n\t\tcase settingConstants.PIN_SIDEBAR:\r\n\t\t\treturn { ...state, ...{ pinSidebar: !state.pinSidebar } }\r\n\t\tcase settingConstants.MAIN_HEADER:\r\n\t\t\treturn { ...state, ...{ mainHeader: !state.mainHeader } }\r\n\t\tcase settingConstants.RIGHT_PANEL:\r\n\t\t\treturn { ...state, ...{ rightPanel: !state.rightPanel } }\t\t\r\n\t\tcase settingConstants.THEME:\r\n\t\t\treturn { ...state, ...{ theme: action.theme } }\r\n\t\tcase settingConstants.SIDEBAR_BG_IMG:\r\n\t\t\treturn { ...state, ...{ sidebarBgImg: action.img } }\r\n\t\tcase settingConstants.SIDEBAR_BG_IMG_VISIBILITY:\r\n\t\t\treturn { ...state, ...{ sidebarBg: !state.sidebarBg } }\r\n\t\tcase settingConstants.BORDER_RADIUS:\r\n\t\t\treturn { ...state, ...{ borderRadius: !state.borderRadius } }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default settings\r\n","import { UI_Helpers as helper } from '../helpers'\r\nimport { UI_Constants } from '../constants'\r\n\r\nconst initialState = {\r\n    fontSize: '100%',\r\n    sidebarVisible: true,\r\n    pinSidebar: false,\r\n    sidebarMouseEnter: false,\r\n    contentBox: false\r\n}\r\n\r\nconst { CHANGE_FONTSIZE, TOGGLE_SIDEBAR, SIDEBAR_HOVER, TOGGLE_PIN_SIDEBAR } = UI_Constants\r\n\r\nconst UI = ( state = {...initialState, ...helper.persistentState()}, action ) => {\r\n    switch (action.type) {\r\n\r\n        case CHANGE_FONTSIZE:\r\n            return { ...state, ...{ fontSize: action.size } }\r\n\r\n        case TOGGLE_SIDEBAR:\r\n            return { ...state, ...{ sidebarVisible: !state.sidebarVisible } }\r\n\r\n        case SIDEBAR_HOVER:\r\n            return { ...state, ...{ sidebarMouseEnter: !state.sidebarMouseEnter } }\r\n\r\n        case TOGGLE_PIN_SIDEBAR:\r\n            return { ...state, ...{ pinSidebar: !state.pinSidebar } }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default UI\r\n","import { userConstants } from '../constants'\r\n\r\nlet user = JSON.parse(localStorage.getItem('user'))\r\nconst initialState = user ? { loggedIn: true, user } : { loggedIn: false, user: {} }\r\n\r\nconst authentication = ( state = initialState, action ) => {\r\n\tswitch (action.type) {\r\n\t\tcase userConstants.LOGIN_REQUEST:\r\n            return { loggingIn: true, user: { ...state.user, ...{ email: action.email } } }\r\n            \r\n\t\tcase userConstants.LOGIN_SUCCESS:\r\n            return { loggedIn: true, user: action.user }\r\n            \r\n\t\tcase userConstants.LOGIN_FAILURE:\r\n            return { loggedIn: false, user: {} }\r\n            \r\n\t\tcase userConstants.LOGOUT:\r\n            return { loggedIn: false, user: {} }\r\n            \r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport default authentication\r\n","import { combineReducers } from 'redux'\r\nimport { alert } from './alerts'\r\nimport settings from './settings'\r\nimport UI from './UI'\r\nimport authentication from './authentication'\r\nimport { registration } from './registration'\r\nimport { users } from './users'\r\n\r\nexport default combineReducers({\r\n\talert,\r\n\tsettings,\r\n\tUI,\r\n\tauth: authentication,\r\n\tregistration,\r\n\tusers\r\n})\r\n","import { alertConstants } from '../constants'\r\n\r\nexport function alert (state = {}, action) {\r\n\tswitch (action.type) {\r\n\t\tcase alertConstants.SUCCESS:\r\n\t\t\treturn { type: 'alert-success', typeAlias: 'success', message: action.message }\r\n\t\t\r\n\t\tcase alertConstants.ERROR:\r\n\t\t\treturn { type: 'alert-danger', typeAlias: 'error', message: action.message }\r\n\r\n\t\tcase alertConstants.INFO:\r\n\t\t\treturn { type: 'alert-info', typeAlias: 'info', message: action.message }\t\t\r\n\t\t\t\r\n\t\tcase alertConstants.CLEAR:\r\n\t\t\treturn {}\r\n\t\t\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import { userConstants } from '../constants'\r\n\r\nexport function registration ( state = {}, action ) {\r\n\tswitch (action.type) {\r\n\t\tcase userConstants.REGISTER_REQUEST:\r\n\t\t\treturn { registering: true }\r\n\r\n\t\tcase userConstants.REGISTER_SUCCESS:\r\n\t\t\treturn {}\r\n\r\n\t\tcase userConstants.REGISTER_FAILURE:\r\n\t\t\treturn {}\r\n\t\t\t\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n","import { userConstants } from '../constants'\r\n\r\nexport function users ( state = {}, action ) {\r\n\tswitch (action.type) {\r\n\t\tcase userConstants.GETALL_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\r\n\t\tcase userConstants.GETALL_SUCCESS:\r\n\t\t\treturn { data: action.users }\r\n\r\n\t\tcase userConstants.GETALL_FAILURE:\r\n\t\t\treturn { error: action.error }\r\n\r\n\t\tcase userConstants.DELETE_REQUEST:\r\n\t\t\t// add 'deleting:true' property to user being deleted\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: state.data.map(user =>\r\n\t\t\t\t\tuser.id === action.id\r\n\t\t\t\t\t? { ...user, deleting: true }\r\n\t\t\t\t\t: user\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\tcase userConstants.DELETE_SUCCESS:\r\n\t\t\t// remove deleted user from state\r\n\t\t\treturn { data: state.data.filter(user => user.id !== action.id) }\r\n\r\n\t\tcase userConstants.DELETE_FAILURE:\r\n\t\t\t// remove 'deleting:true' property and add 'deleteError:[error]' property to user \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: state.data.map(user => {\r\n\t\t\t\t\tif (user.id === action.id) {\r\n\t\t\t\t\t\t// make copy of user without 'deleting:true' property\r\n\t\t\t\t\t\tconst { deleting, ...userCopy } = user\r\n\t\t\t\t\t\t// return copy of user with 'deleteError:[error]' property\r\n\t\t\t\t\t\treturn { ...userCopy, deleteError: action.error }\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn user\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n  \t}\r\n}\r\n","import { createStore } from 'redux'\r\nimport rootReducer from '../reducers'\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nconst Error = () => (\r\n    <div className=\"page-not-found flex-center position-ref\" style={{ height: '100vh' }}>\r\n        <div className=\"code\">Oops</div>\r\n        <div className=\"message\" style={{ padding: '10px' }}>Something went wrong</div>\r\n    </div>    \r\n)\r\n\r\nexport default Error","import React, { Component } from 'react'\r\nimport Error from './Error'\r\n\r\nexport default class ErrorBoundary extends Component {\r\n\r\n\tstate = { hasError: false }\r\n\r\n\r\n\tcomponentDidCatch ( error, info ) {\r\n\t\tthis.setState({ hasError: true })\r\n\t\t//logErrorToMyService(error, info)\r\n\t}\r\n\r\n\trender() {\r\n\t\t// You can render any custom fallback UI\r\n\t\treturn (this.state.hasError) ? <Error /> : this.props.children\r\n\t}\r\n\r\n}\r\n","import React from 'react'\r\n\r\nconst Loader = () => (\r\n    <div className=\"loader-container\">\r\n        <div className=\"loader\">Loading...</div>\r\n    </div>     \r\n)\r\n\r\nexport default Loader","import React, { lazy, Suspense, useEffect } from 'react'\r\nimport { useAlert } from 'react-alert'\r\nimport ErrorBoundary from './ErrorBoundary'\r\nimport Loader from './layout/Loader'\r\nimport PropTypes from 'prop-types'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faEnvelope, faKey, faTimes, faBars, faCircle as faCircleSolid, faSearch, faTachometerAlt, faShoppingCart, faChartLine, faGlobe, faBook, faCalendar, faFolder, faBell, faCog, faPowerOff, faGem, faAngleRight, faCheck, faExclamation, faExclamationTriangle, faEllipsisH, faHome, faExpand, faCompress, faTextHeight, faThumbtack, faUserAlt, faUser, faLock, faPlus, faFilter, faReply, faReplyAll, faPrint, faTrash, faLink, faArrowUp, faArrowDown, faSave, faCaretLeft, faCaretRight, faChevronUp, faChevronDown, faChevronRight, faChevronLeft, faFileAlt, faFileExport, faSyncAlt, faMapMarkerAlt, faTools, faAddressCard, faStoreAlt, faTimesCircle, faPoll, faCoins, faShoppingBag, faStore, faMoneyBill, faUsers, faTruckMoving, faStar, faDownload } from '@fortawesome/free-solid-svg-icons'\r\nimport { faCircle, faClock, faEdit } from '@fortawesome/free-regular-svg-icons'\r\nimport { faSalesforce } from '@fortawesome/free-brands-svg-icons'\r\n\r\nlibrary.add( faEnvelope, faKey, faTimes, faBars, faCircle, faCircleSolid, faSearch, faTachometerAlt, faShoppingCart, faChartLine, faGlobe, faBook, faCalendar, faFolder, faBell, faCog, faPowerOff, faGem, faAngleRight, faCheck, faExclamation, faExclamationTriangle, faEllipsisH, faHome, faExpand, faCompress, faTextHeight, faThumbtack, faUserAlt, faUser, faLock, faPlus, faFilter, faReply, faReplyAll, faPrint, faTrash, faLink, faArrowUp, faArrowDown, faSave, faTimesCircle, faCaretLeft, faCaretRight, faChevronUp, faChevronDown, faChevronRight, faChevronLeft, faFileAlt, faFileExport, faSyncAlt, faMapMarkerAlt, faTools, faAddressCard, faStoreAlt, faPoll, faCoins, faShoppingBag, faStore, faMoneyBill, faUsers, faSalesforce, faClock, faEdit, faTruckMoving, faStar, faDownload )\r\n\r\nconst Dashboard = lazy(() => import('../containers/Dashboard'))\r\nconst Login = lazy(() => import('./user/Login'))\r\n\r\nconst App = ({ auth, alert, clearAlert, signIn }) => {\r\n    const myAlert = useAlert()\r\n    \r\n    useEffect(() => {\r\n        if ( 'message' in alert ) {\r\n            myAlert.show( alert.message, {\r\n                type: alert.typeAlias,\r\n                onOpen: () => clearAlert()\r\n            } )\r\n        }\r\n    }, [ alert, myAlert, clearAlert ])\r\n\r\n    return (\r\n        <ErrorBoundary>\r\n            <Suspense fallback={<Loader />}>\r\n                <Router basename={process.env.NODE_ENV === 'development' ? null : '/erp'}>\r\n                    { auth.loggedIn ? <Dashboard /> : <Login signIn={signIn} /> }\r\n                </Router>\r\n            </Suspense>\r\n        </ErrorBoundary>\r\n    )\r\n}\r\n\r\nApp.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    alert: PropTypes.object.isRequired,\r\n    clearAlert: PropTypes.func.isRequired,\r\n    signIn: PropTypes.func.isRequired\r\n}\r\n\r\nexport default App\r\n","import { connect } from 'react-redux'\r\nimport App from '../components/App'\r\nimport { userActions, alertActions } from '../actions'\r\nimport { userService } from '../services'\r\n\r\nconst mapState = state => ({\r\n    auth: state.auth,\r\n    alert: state.alert\r\n})\r\n\r\nconst actions = dispatch => ({\r\n\tsignIn: (email, password, e) => {\r\n        dispatch(userActions.loginRequest(email))\r\n        dispatch(alertActions.info(`Authenticating ${String.fromCharCode(8594)} ${email}`))\r\n        \r\n        userService\r\n            .login({ email, password })\r\n                .then(\r\n                    response => { \r\n                        dispatch(userActions.loginSuccess(response.data))\r\n                    },\r\n                    error => {\r\n                        let msg\r\n                        if ( error.response ) {\r\n                            msg = error.response.status !== 500 ? error.response.data : 'Oops, something went wrong'\r\n                        } else {\r\n                            msg = error.toString()\r\n                        }                        \r\n                        \r\n                        dispatch(userActions.loginFailure())\r\n                        dispatch(alertActions.error(msg))\r\n                    }\r\n                )\r\n\r\n\t\te.preventDefault()\r\n    },\r\n\r\n    clearAlert: () => dispatch(alertActions.clear())\r\n})\r\n\r\nexport default connect( mapState, actions )(App)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\r\nimport AlertTemplate from 'react-alert-template-basic'\r\nimport store from './store'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { loadProgressBar } from 'axios-progress-bar'\r\nimport 'axios-progress-bar/dist/nprogress.css'\r\nimport App from './containers/App'\r\nimport axios from 'axios'\r\nimport { app } from './config'\r\n\r\nimport './sass/app.scss'\r\n\r\nloadProgressBar()\r\n\r\naxios.defaults.baseURL = app.apiUrl\r\naxios.interceptors.request.use( (config) => config, (error) => Promise.reject(error) )\r\n\r\naxios.interceptors.response.use( (response) => {\r\n    return response\r\n}, (error) => {\r\n\treturn Promise.reject(error)\r\n} )\r\n\r\nconst EVENTS_TO_MODIFY = ['touchstart', 'touchmove', 'touchend', 'touchcancel', 'wheel']\r\n\r\nconst originalAddEventListener = document.addEventListener.bind()\r\ndocument.addEventListener = (type, listener, options, wantsUntrusted) => {\r\n\tlet modOptions = options\r\n\tif (EVENTS_TO_MODIFY.includes(type)) {\r\n\t\tif (typeof options === 'boolean') {\r\n\t\t\tmodOptions = {\r\n\t\t\t\tcapture: options,\r\n\t\t\t\tpassive: false,\r\n\t\t\t}\r\n\t\t} else if (typeof options === 'object') {\r\n\t\t\tmodOptions = {\r\n\t\t\t\tpassive: false,\r\n\t\t\t\t...options,\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn originalAddEventListener(type, listener, modOptions, wantsUntrusted)\r\n}\r\n\r\nconst originalRemoveEventListener = document.removeEventListener.bind()\r\ndocument.removeEventListener = (type, listener, options) => {\r\n\tlet modOptions = options\r\n\tif (EVENTS_TO_MODIFY.includes(type)) {\r\n\t\tif (typeof options === 'boolean') {\r\n\t\t\tmodOptions = {\r\n\t\t\t\tcapture: options,\r\n\t\t\t\tpassive: false,\r\n\t\t\t}\r\n\t\t} else if (typeof options === 'object') {\r\n\t\t\tmodOptions = {\r\n\t\t\t\tpassive: false,\r\n\t\t\t\t...options,\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn originalRemoveEventListener(type, listener, modOptions)\r\n}\r\n\r\nconst options = {\r\n\tposition: positions.BOTTOM_CENTER,\r\n\ttimeout: 5000,\r\n\toffset: '5px', // margin of alert\r\n\ttransition: transitions.SCALE\r\n\t//template: AlertTemplate --- Commentted since we're setting it independently on the component\r\n}\r\n\r\nconst DOM = document.getElementById('root')\r\nif (DOM) {\r\n    ReactDOM.render(\r\n    \t<Provider store={store}>\r\n\t\t\t<AlertProvider template={AlertTemplate} {...options}>\r\n\t\t\t\t<App />\r\n\t\t\t</AlertProvider>\r\n    \t</Provider>,\r\n    \tDOM\r\n\t)\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register()\r\n","import storeAPI from 'store'\r\n\r\nexport const getStorage = item => {\r\n    \r\n    try {\r\n        return storeAPI.get(item)\r\n    } catch (err) {\r\n        return undefined\r\n    }\r\n\r\n}\r\n\r\n","import { getStorage } from '../helpers'\r\n\r\nconst persistentState = () => {\r\n\ttry {\r\n\t\tconst settings = getStorage('state').settings\r\n\t\treturn { \r\n            sidebarVisible: settings.sidebar,\r\n            pinSidebar: settings.pinSidebar\r\n        }\r\n\t} catch (err) {\r\n\t\treturn {}\r\n\t}\r\n}\r\n\r\nexport {\r\n    persistentState\r\n}\r\n","import * as FileSaver from 'file-saver'\r\nimport * as XLSX from 'xlsx'\r\n\r\nexport const csv = (csvData, fileName) => {\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'\r\n    const fileExtension = '.xlsx'    \r\n    const ws = XLSX.utils.json_to_sheet(csvData)\r\n    const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] }\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' })\r\n    const data = new Blob([excelBuffer], {type: fileType})\r\n\r\n    FileSaver.saveAs(data, fileName + fileExtension)\r\n}\r\n","const clean = obj => {\r\n    for (let prop in obj) {\r\n        if ( obj[prop] === undefined || obj[prop] === null || obj[prop] === '' ) {\r\n            delete obj[prop]\r\n        }\r\n    }\r\n\r\n    return obj\r\n}\r\n\r\nconst removeEmpty = obj => {\r\n    Object.keys(obj).forEach(key => obj[key] === '' && delete obj[key])\r\n}\r\n\r\nexport const _object = { clean, removeEmpty }","export default class dateFormatter {\r\n    constructor() {\r\n        this.month = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12']\r\n    }\r\n\r\n    getTime(time) {\r\n        let date = new Date(time),\r\n            hour = date.getHours()\r\n\r\n        return `${date.getDate()}/${this.month[date.getMonth()]}/${date.getFullYear()}, ${hour}:${date.getMinutes()}:${date.getSeconds()} ${this.period(hour)}`\r\n    }\r\n\r\n    period(hour = 0){\r\n        return hour < 12 ? 'AM' : 'PM'\r\n    }\r\n}","import axios from 'axios'\r\n\r\nconst options = { 'Content-Type': 'application/json' }\r\n\r\nconst login = input => {\r\n    return axios.post( '/users/login', input, options )\r\n                .then ( response => {\r\n                    localStorage.setItem( 'user', JSON.stringify(response.data) )\r\n                    return response\r\n                }, error => {\r\n                    return Promise.reject(error)\r\n                } )     \r\n}\r\n\r\nconst logout = () => localStorage.removeItem('user')\r\n\r\nconst register = ( input ) => axios.post( '/users/register', input, options ).then( response => response , error => Promise.reject(error) )\r\n\r\nconst getAll = () => axios.get('/users').then( response => response , error => Promise.reject(error) )\r\n\r\nconst getById = id => axios.get(`/users/${id}`).then( response => response , error => Promise.reject(error) )\r\n\r\nconst update = (id, input) => axios.put( `/users/${id}`, input ).then( response => response , error => Promise.reject(error) )\r\n\r\nconst _delete = id => axios.delete(`/users/${id}`).then( response => response , error => Promise.reject(error) )\r\n\r\nconst refresh = () => {\r\n    return axios.get('/refresh_token')\r\n                .then ( response => {\r\n                    let user = JSON.parse(localStorage.getItem('user')),\r\n                        cloneUser = { ...user, ...{ token: response.data.token } }\r\n                    localStorage.setItem( 'user', JSON.stringify(cloneUser) )\r\n                    return Promise.resolve(cloneUser)\r\n                }, error => {\r\n                    logout()\r\n                    return Promise.reject(error)\r\n                } )     \r\n}\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    register,\r\n    getAll,\r\n    getById,\r\n    update,\r\n    delete: _delete,\r\n    refresh\r\n}\r\n","import axios from 'axios'\r\n\r\nconst options = { 'Content-Type': 'application/json' }\r\n\r\nconst create = ( input ) => axios.post( '/cashflows', input, options ).then( response => response , error => Promise.reject(error) )\r\n\r\nconst getAll = () => axios.get('/cashflows').then( response => response , error => Promise.reject(error) )\r\n\r\nconst getOne = id => axios.get(`/cashflows/${id}`).then( response => response , error => Promise.reject(error) )\r\n\r\nconst update = (id, input) => axios.put( `/cashflows/${id}`, input ).then( response => response , error => Promise.reject(error) )\r\n\r\nconst _delete = id => axios.delete(`/cashflows/${id}`).then( response => response , error => Promise.reject(error) )\r\n\r\nexport const cashFlowService = {\r\n    create,\r\n    getAll,\r\n    getOne,\r\n    update,\r\n    delete: _delete\r\n}\r\n","import axios from 'axios'\r\n\r\nconst options = { 'Content-Type': 'application/json' }\r\n\r\nconst create = ( input ) => axios.post( '/accounts', input, options ).then( response => response , error => Promise.reject(error) )\r\n\r\nconst getAll = () => axios.get('/accounts').then( response => response , error => Promise.reject(error) )\r\n\r\nconst getOne = id => axios.get(`/accounts/${id}`).then( response => response , error => Promise.reject(error) )\r\n\r\nconst update = (id, input) => axios.put( `/accounts/${id}`, input ).then( response => response , error => Promise.reject(error) )\r\n\r\nconst _delete = id => axios.delete(`/accounts/${id}`).then( response => response , error => Promise.reject(error) )\r\n\r\nexport const AccountService = {\r\n    create,\r\n    getAll,\r\n    getOne,\r\n    update,\r\n    delete: _delete\r\n}\r\n","import axios from 'axios'\r\n\r\nconst options = { 'Content-Type': 'application/json' }\r\n\r\nconst create = ( input ) => axios.post( '/payment_methods', input, options ).then( response => response , error => Promise.reject(error) )\r\n\r\nconst getAll = () => axios.get('/payment_methods').then( response => response , error => Promise.reject(error) )\r\n\r\nconst getOne = id => axios.get(`/payment_methods/${id}`).then( response => response , error => Promise.reject(error) )\r\n\r\nconst update = (id, input) => axios.put( `/payment_methods/${id}`, input ).then( response => response , error => Promise.reject(error) )\r\n\r\nconst _delete = id => axios.delete(`/payment_methods/${id}`).then( response => response , error => Promise.reject(error) )\r\n\r\nexport const PaymentService = {\r\n    create,\r\n    getAll,\r\n    getOne,\r\n    update,\r\n    delete: _delete\r\n}\r\n","export const jwtToken = () => {\r\n    let user = JSON.parse(localStorage.getItem('user'))\r\n\r\n    if (user && user.token) {\r\n        return user.token\r\n    } else {\r\n        return undefined\r\n    }\r\n}","\r\nexport const alertConstants = {\r\n    SUCCESS: 'ALERT_SUCCESS',\r\n    ERROR: 'ALERT_ERROR',\r\n    INFO: 'ALERT_INFO',\r\n    CLEAR: 'ALERT_CLEAR'\r\n}\r\n","\r\nexport const UI_Constants = {\r\n    CHANGE_FONTSIZE: 'CHANGE_FONT_SIZE',\r\n    TOGGLE_SIDEBAR: 'TOGGLE_SIDEBAR',\r\n    TOGGLE_PIN_SIDEBAR: 'PIN_SIDEBAR',\r\n    SIDEBAR_HOVER: 'SIDEBAR_HOVER'\r\n}\r\n","\r\nexport const userConstants = {\r\n    REGISTER_REQUEST: 'USERS_REGISTER_REQUEST',\r\n    REGISTER_SUCCESS: 'USERS_REGISTER_SUCCESS',\r\n    REGISTER_FAILURE: 'USERS_REGISTER_FAILURE',\r\n\r\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\r\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\r\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\r\n\r\n    LOGOUT: 'USERS_LOGOUT',\r\n\r\n    GETALL_REQUEST: 'USERS_GETALL_REQUEST',\r\n    GETALL_SUCCESS: 'USERS_GETALL_SUCCESS',\r\n    GETALL_FAILURE: 'USERS_GETALL_FAILURE',\r\n\r\n    DELETE_REQUEST: 'USERS_DELETE_REQUEST',\r\n    DELETE_SUCCESS: 'USERS_DELETE_SUCCESS',\r\n    DELETE_FAILURE: 'USERS_DELETE_FAILURE'    \r\n}\r\n","\r\nexport const settingConstants = {\r\n    FONT_SIZE: 'SET_FONT_SIZE',\r\n    SIDEBAR: 'SIDEBAR_VISIBILITY',\r\n    PIN_SIDEBAR: 'SET_PIN_SIDEBAR',\r\n    MAIN_HEADER: 'SET_MAIN_HEADER',\r\n    RIGHT_PANEL: 'RIGHT_PANEL_VISIBILITY',\r\n    THEME: 'SET_THEME',\r\n    SIDEBAR_BG_IMG: 'SET_SIDEBAR_BG_IMG',\r\n    SIDEBAR_BG_IMG_VISIBILITY: 'SIDEBAR_BG_IMG_VISIBILITY',            \r\n    BORDER_RADIUS: 'BORDER_RADIUS_VISIBILITY'\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapState = state => ({ user: state.auth.user })\r\n\r\nconst Home = ({ user }) => <h4>Welcome, {user.name}!</h4>\r\n\r\nexport default connect( mapState )(Home)\r\n","import React from 'react'\r\n\r\nconst Invoices = () => <h5>Purchase Invoices!</h5>\r\nconst Orders = () => <h5>Purchase Orders!</h5>\r\nconst Returns = () => <h5>Purchase Returns!</h5>\r\n\r\nexport {\r\n\tInvoices,\r\n\tOrders,\r\n\tReturns\r\n}\r\n","import React from 'react'\r\n\r\nconst Invoices = () => <h5>Sales Invoices!</h5>\r\nconst Orders = () => <h5>Sales Orders!</h5>\r\nconst Returns = () => <h5>Sales Returns!</h5>\r\n\r\nexport {\r\n\tInvoices,\r\n\tOrders,\r\n\tReturns\r\n}\r\n","import React from 'react'\r\n\r\nconst Stock = () => <h5>Stock!</h5>\r\n\r\nexport default Stock\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst customSwitch = ({ label, check, event }) => (\r\n    <div className=\"form-group col-md-12\">\r\n        <div className=\"custom-control custom-switch\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id={label} checked={check} onChange={event} />\r\n            <label className=\"custom-control-label\" htmlFor={label}>{label}</label>\r\n        </div>\r\n    </div>\r\n)\r\n\r\ncustomSwitch.defaultProps = {\r\n\tcheck: false,\r\n}\r\n\r\ncustomSwitch.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    check: PropTypes.bool,\r\n    event: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default customSwitch\r\n","const schemes = ['default-theme', 'chiller-theme', 'legacy-theme', 'ice-theme', 'cool-theme', 'light-theme']\r\n\r\nconst images = [ 'bg1', 'bg2', 'bg3', 'bg4' ]\r\n\r\nexport {schemes, images}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { schemes, images } from '../../config/theme'\r\n\r\nconst Schemes = ({ theme, event }) => {\r\n    const schemeELements = schemes.map( (scheme) => <span key={scheme} data-theme={scheme} className={`theme ${scheme}${theme === scheme ? ' selected' : ''}`} title={scheme} onClick={theme !== scheme ? () => event(scheme) : null} /> )\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"form-group col-md-12\">\r\n                <h3>Themes</h3>\r\n                <p className=\"mb-3\">Here are more themes that you can use</p>\r\n                <div className=\"schemes\">{schemeELements}</div>\r\n            </div>\r\n        </div>       \r\n    )\r\n}\r\n\r\nconst BgImg = ({ image, event }) => {\r\n    const background = images.map( img => <span key={img} data-bg={img} className={`theme theme-bg ${image === img ? 'selected' : ''}`} onClick={image !== img ? () => event(img) : null} /> )\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"form-group col-md-12\">\r\n                <p className=\"mb-3\">You can also use background image </p>\r\n                <div className=\"background-images\">{background}</div>\r\n            </div>\r\n        </div>       \r\n    )\r\n}\r\n\r\nSchemes.propTypes = {\r\n    theme: PropTypes.string,\r\n    event: PropTypes.func.isRequired\r\n}\r\n\r\nBgImg.propTypes = {\r\n    image: PropTypes.string,\r\n    event: PropTypes.func.isRequired\r\n}\r\n\r\nexport { Schemes, BgImg }\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport CustomSwitch from '../helpers/customSwitch'\r\nimport { Schemes, BgImg } from './layout/Themes'\r\n\r\nconst Settings = ({ sidebar, pinSidebar, mainHeader, rightPanel, theme, sidebarBgImg, sidebarBg, borderRadius, setTheme, setSidebarBgImg, sidebarVisibility, borderRadiusVisibility, setPinSidebar, setMainHeader, sidebarBgImgVisibility, rightPanelVisibility }) => {\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"form-group col-md-12\">\r\n                    <h3>Layout</h3>\r\n                </div>\r\n\r\n                <CustomSwitch label=\"Main Header\" check={mainHeader} event={setMainHeader} />\r\n                <CustomSwitch label=\"Sidebar\" check={sidebar} event={sidebarVisibility} />\r\n                <CustomSwitch label=\"Pin Sidebar\" check={pinSidebar} event={setPinSidebar} />\r\n                <CustomSwitch label=\"Right Pane\" check={rightPanel} event={rightPanelVisibility} />\r\n            </div>\r\n\r\n            <hr />\r\n\r\n            <Schemes theme={theme} event={setTheme} />\r\n            <BgImg image={sidebarBgImg} event={setSidebarBgImg} />\r\n\r\n            <div className=\"row\">\r\n                <CustomSwitch label=\"Background image\" check={sidebarBg} event={sidebarBgImgVisibility} />\r\n                <CustomSwitch label=\"Border radius\" check={borderRadius} event={borderRadiusVisibility} />\r\n            </div>\r\n        </>    \r\n    )\r\n}\r\n\r\nSettings.defaultProps = {\r\n    sidebar: true,\r\n\tpinSidebar: false,\r\n    mainHeader: true,\r\n\trightPanel: true,\r\n\ttheme: 'default-theme',\r\n\tsidebarBgImg: 'bg1',\r\n\tsidebarBg: true,\r\n    borderRadius: false,\r\n}\r\n\r\nSettings.propTypes = {\r\n    sidebar: PropTypes.bool,\r\n    pinSidebar: PropTypes.bool,\r\n    mainHeader: PropTypes.bool,\r\n    rightPanel: PropTypes.bool,\r\n    theme: PropTypes.string,\r\n    sidebarBgImg: PropTypes.string,\r\n    sidebarBg: PropTypes.bool,\r\n    borderRadius: PropTypes.bool,\r\n    sidebarVisibility: PropTypes.func.isRequired,\r\n    setPinSidebar: PropTypes.func.isRequired,\r\n    setMainHeader: PropTypes.func.isRequired,\r\n    rightPanelVisibility: PropTypes.func.isRequired,\r\n    setTheme: PropTypes.func.isRequired,\r\n    setSidebarBgImg: PropTypes.func.isRequired,\r\n    sidebarBgImgVisibility: PropTypes.func.isRequired,\r\n    borderRadiusVisibility: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Settings\r\n","import { connect } from 'react-redux'\r\nimport { settingActions as S, UI_Actions as UI }  from '../actions'\r\nimport AppSettings from '../components/AppSettings'\r\n\r\nconst mapStateToProps = state => ({\r\n\tfontSize: state.settings.fontSize,\r\n    sidebar: state.settings.sidebar,\r\n\tpinSidebar: state.settings.pinSidebar,\r\n\tmainHeader: state.settings.mainHeader,\r\n\trightPanel: state.settings.rightPanel,\r\n\ttheme: state.settings.theme,\r\n\tsidebarBgImg: state.settings.sidebarBgImg,\r\n\tsidebarBg: state.settings.sidebarBg,\r\n\tborderRadius: state.settings.borderRadius,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tsetFontSize: size => dispatch(S.setFontSize(size)),\r\n\tsidebarVisibility: () => {\r\n\t\tdispatch(S.sidebarVisibility())\r\n\t\tdispatch(UI.toggleSidebar())\r\n\t},\r\n\tsetPinSidebar: () => {\r\n\t\tdispatch(S.setPinSidebar())\r\n\t\tdispatch(UI.togglePinSidebar())\r\n\t},\r\n\tsetMainHeader: () => { dispatch(S.setMainHeader()) },\r\n\trightPanelVisibility: () => dispatch(S.rightPanelVisibility()),\r\n\tsetTheme: theme => dispatch(S.setTheme(theme)),\r\n\tsetSidebarBgImg: image => dispatch(S.setSidebarBgImg(image)),\r\n\tsidebarBgImgVisibility: () => dispatch(S.sidebarBgImgVisibility()),\r\n\tborderRadiusVisibility: () => dispatch(S.borderRadiusVisibility())\r\n})\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )(AppSettings)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Input = ({ name, type, label, placeholder, value, required, handleChange }) => (\r\n    <>\r\n        <label htmlFor={name}>{label}</label>\r\n        <input type={type} name={name} className=\"form-control\" autoComplete=\"off\" placeholder={placeholder} id={name} value={value} onChange={handleChange} required={required} />\r\n    </>\r\n)\r\n\r\nInput.defaultProps = { value: '', placeholder: '', required: false }\r\nInput.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    required: PropTypes.bool,\r\n    handleChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport const TextArea = ({ name, label, value, placeholder, required, handleChange }) => (\r\n    <>\r\n        <label htmlFor={name}>{label}</label>\r\n        <textarea name={name} className=\"form-control\" rows=\"2\" placeholder={placeholder} id={name} value={value} onChange={handleChange} required={required}></textarea>\r\n    </>\r\n)\r\n\r\nTextArea.defaultProps = { value: '', placeholder: '', required: false }\r\nTextArea.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    required: PropTypes.bool,\r\n    handleChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport const Dropdown = ({ name, label, required, value, options, handleChange }) => (\r\n    <>\r\n        <label>{label}</label>\r\n        <select name={name} className=\"custom-select\" id={name} value={value} onChange={handleChange} required={required}>\r\n            { ! value ? <option value=\"\">Choose</option> : null }\r\n            { options.map( ({id, name}) => <option key={id} value={id}>{name}</option> ) }\r\n        </select>\r\n    </>\r\n)\r\n\r\nDropdown.defaultProps = { value: '', options: [], required: false }\r\nDropdown.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    required: PropTypes.bool,\r\n    options: PropTypes.array.isRequired,\r\n    handleChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport const Radio = ({ name, type, label, values, required, value, handleChange }) => (\r\n    <>\r\n        <label>{label}</label>\r\n\r\n        <div className=\"d-flex mt-2\">\r\n            { values.map( ({ id, code }) => (\r\n                <div key={id} className=\"d-flex radio-wrap\">\r\n                    <label>{code}</label>\r\n                    <input type={type} name={name} className=\"fancy-input round ml-2\" id={name} value={id} onChange={handleChange} required={required} checked={id == value} />\r\n                </div>\r\n            ) ) }\r\n        </div>\r\n    </>     \r\n)\r\n\r\nRadio.defaultProps = { required: false }\r\nRadio.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    values: PropTypes.array.isRequired,\r\n    required: PropTypes.bool,\r\n    handleChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport const Field = ({ field, value = '', handleChange }) => {\r\n    field['handleChange'] = handleChange\r\n    let res\r\n    switch (field.type) {\r\n        case \"text\":\r\n        case \"email\":\r\n        case \"number\":\r\n            res = <Input value={value} {...field} />\r\n            break\r\n\r\n        case \"textarea\":\r\n            res = <TextArea value={value} {...field} />\r\n            break\r\n\r\n        case \"select\":\r\n            res = <Dropdown value={value} {...field} />\r\n            break\r\n\r\n        case \"radio\":\r\n            res = <Radio value={value} {...field} />\r\n            break\r\n\r\n        default:\r\n            res = null\r\n    }\r\n\r\n    return res\r\n}\r\n\r\nField.defaultProps = { handleChange: () => null }\r\n\r\nField.propTypes = {\r\n    field: PropTypes.object.isRequired,\r\n    handleChange: PropTypes.func\r\n}\r\n\r\nexport const DataList = ({ name, values, handleChange }) => (\r\n    <>\r\n        <input list={name} className=\"form-control form-control-sm\" placeholder={name} onChange={handleChange} />\r\n        <datalist id={name}>\r\n            { values.map( value => <option key={value} value={value}>{value}</option> ) }\r\n        </datalist>\r\n    </>\r\n)\r\n\r\nDataList.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    values: PropTypes.array.isRequired,\r\n    handleChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport const Select = ({ name, label, value, values, handleChange }) => (\r\n    <select name={name} className=\"custom-select custom-select-sm\" id={name} value={value} onChange={e => handleChange(e, name)}>\r\n        <option value=\"\">{label}</option>\r\n        { values.map( value => <option key={value} value={value}>{value}</option> ) }\r\n    </select>\r\n)\r\n\r\nSelect.defaultProps = { value: '' }\r\nSelect.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    values: PropTypes.array.isRequired,\r\n    handleChange: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { cashFlowService } from '../../services'\r\nimport { alertActions } from '../../actions'\r\nimport { chunk, truncate, orderBy } from 'lodash'\r\nimport queryString from 'query-string'\r\nimport { Dropdown, ButtonGroup } from 'react-bootstrap'\r\nimport { Select } from '../fragment/form-elements'\r\nimport startCase from 'lodash/startCase'\r\nimport { _object, csv } from '../../helpers'\r\n\r\nconst Show = ({ match, location, history, dispatch }) => {\r\n    const search = location.search ? queryString.parse(location.search) : {\r\n        filter: JSON.stringify({}), sort: 'id', order: 'asc', page: 1, perPage: 10\r\n    }\r\n    \r\n    const [ data, setData ] = useState([])\r\n    const [ loaded, setLoaded ] = useState(false)\r\n    const [ filters, setFilters ] = useState({})\r\n    //const [ filterValue, setFilterValue ] = useState({})\r\n    const path = location.pathname\r\n\r\n    useEffect(() => {\r\n        cashFlowService.getAll()\r\n            .then(\r\n                response => {\r\n                    setData(response.data)\r\n                    setLoaded(true)\r\n                },\r\n                error => {\r\n                    let msg\r\n                    if ( error.response ) {\r\n                        msg = error.response.status !== 500 ? error.response.data : 'Oops, something went wrong'\r\n                    } else {\r\n                        msg = error.toString()\r\n                    }\r\n                    dispatch(alertActions.error(msg))\r\n                }\r\n            )        \r\n    }, [])\r\n\r\n    useEffect( () => updateFilters(JSON.parse(search.filter)), [loaded, search.filter] )\r\n\r\n    const updateFilters = (data = {}, filters = {}) => {\r\n        Object.keys(data).map( k => filters[k] = filterComponent(k, data[k]) )\r\n        setFilters(filters)\r\n    }\r\n    \r\n    const pageHandler = page => pushSearch({page})\r\n\r\n    const perPageHandler = e => pushSearch({perPage: e.currentTarget.value})\r\n\r\n    const searchHandler = e => {\r\n        let q = e.target.value\r\n        if (q) console.log(q)\r\n    }\r\n\r\n    const filterComponent = (filter, value = '') => <Select key={filter} name={filter} label={startCase(filter)} value={value} values={[...new Set(data.map(item => item[filter]))]} handleChange={filterHandler} />\r\n\r\n    const addFilter = filter => {\r\n        let queryFilters = JSON.parse(search.filter)\r\n        setFilters({ ...filters, ...{ [filter]: filterComponent(filter, queryFilters[filter]) } })\r\n    }\r\n\r\n    const removeFilter = filter => {\r\n        delete filters[filter]\r\n        setFilters({ ...filters })\r\n\r\n        let query_filter = JSON.parse(search.filter)\r\n        delete query_filter[filter]\r\n        \r\n        pushSearch({ page: 1, filter: JSON.stringify(query_filter) })\r\n    }\r\n\r\n    const filterHandler = (e, filter) => {\r\n        let parse_filter = JSON.parse(search.filter),\r\n            input = e.target.value,\r\n            nFilter = { ...parse_filter, ...{ [filter]: input } }\r\n\r\n        pushSearch({ page: 1, filter: JSON.stringify(nFilter) })\r\n    }\r\n\r\n    const sortHandler = text => {\r\n        const order = (search.sort === text) ? search.order === 'asc' ? 'desc' : 'asc' : 'asc'\r\n        pushSearch({ sort: text, page: 1, order })\r\n    }\r\n\r\n    const pushSearch = obj => history.push(`${path}?${queryString.stringify({ ...search, ...obj })}`)\r\n\r\n    const csvData = data => {\r\n        let csv = []\r\n        for (let res of data) {\r\n            csv.push({\r\n                Date: res.date,\r\n                \"Payment Method\": res.payment_method,\r\n                Account: `${res.account} (${res.currency})`,\r\n                Amount: res.symbol + res.amount.toFixed(2),\r\n                Comments: res.comments\r\n            })\r\n        }\r\n        return csv\r\n    }\r\n    \r\n    const navigationInfo = (current, perPage, batchLen, totalLen) => {\r\n        let i = current - 1,\r\n            to = current === batchLen ? totalLen : current * perPage\r\n\r\n        return `${i * perPage + 1} - ${to} of ${totalLen}`\r\n    }\r\n\r\n    if ( loaded ) {    \r\n        if ( data.length > 0 ) {\r\n            const { sort, order } = search\r\n            const perPage = parseInt(search.perPage)\r\n            const page = parseInt(search.page)\r\n            const filter = _object.clean(JSON.parse(search.filter))\r\n\r\n            // filter data\r\n            const filtered = data\r\n                .filter( row => filter.payment_method ? row.payment_method === filter.payment_method : true )\r\n                .filter( row => filter.currency ? row.currency === filter.currency : true )\r\n                .filter( row => filter.account ? row.account === filter.account : true )\r\n\r\n            const orderData = orderBy(filtered, [sort], [order])\r\n\r\n            let chunkData = chunk(orderData, perPage),\r\n                current = chunkData[page-1] ? chunkData[page-1] : []\r\n\r\n            const arrow = column => {\r\n                if (column === sort)\r\n                    return <FontAwesomeIcon className=\"small\" icon={order === 'asc' ? 'arrow-up' : 'arrow-down'} />\r\n\r\n                return null\r\n            }\r\n\r\n            const FilterList = ({list = []}) => {\r\n                const added = list.every(filter => filter in filters)\r\n\r\n                return added ? null : (\r\n                    <Dropdown as={ButtonGroup}>\r\n                        <Dropdown.Toggle as=\"a\" id=\"filter-dropdown\" bsPrefix=\"btn btn-sm mr-2\">\r\n                            <FontAwesomeIcon icon=\"filter\" /> ADD FILTER\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            { list.map( (filter, i) => filter in filters ? null : <Dropdown.Item as=\"button\" key={i} onClick={ () => addFilter(filter) }>{startCase(filter)}</Dropdown.Item> ) }\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                )\r\n            }\r\n            \r\n            return (\r\n                <>\r\n                    <div className=\"toolbar-root d-flex justify-content-between mb-4\">\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"_search d-none\">\r\n                                <input type=\"search\" className=\"form-control form-control-sm\" placeholder=\"Search\" onKeyUp={searchHandler} />\r\n                            </div>\r\n\r\n                            {  Object.keys(filters).map( filter => (\r\n                                <div key={filter} className=\"d-flex align-items-center ml-3\">\r\n                                    <span className=\"mr-2\" onClick={() => removeFilter(filter)}><FontAwesomeIcon icon=\"times\" /></span>\r\n                                    {filters[filter]}\r\n                                </div>\r\n                            ) ) }                         \r\n                        </div>\r\n\r\n                        <div className=\"_action\">\r\n                            <Link to={`${match.path}/add`} className=\"btn btn-sm mr-2\"><FontAwesomeIcon icon=\"plus\" /> Add Cash Flow</Link>\r\n                            <FilterList list={[ 'payment_method', 'account', 'currency']} /> \r\n                            <button className=\"btn btn-sm\" onClick={ () => csv(csvData(filtered), 'Cash Flow') }><FontAwesomeIcon icon=\"file-export\" /> EXPORT</button>                               \r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"content-body\">\r\n                        <table className=\"table table-sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('id')}>Id {arrow('id')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('date')}>Date {arrow('date')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('payment_method')}>Payment Method {arrow('payment_method')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('account')}>Account {arrow('account')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('amount')}>Amount {arrow('amount')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('comments')}>Comments {arrow('comments')}</span></th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                { current.map( ({ id, amount, comments, date, symbol, account, payment_method }) => (\r\n                                    <tr key={id} className={ amount < 0 ? 'debit' : 'credit' }>\r\n                                        <td>{id}</td>\r\n                                        <td>{date}</td>\r\n                                        <td>{payment_method}</td>\r\n                                        <td>{account}</td>\r\n                                        <td>{symbol}{amount.toFixed(2)}</td>\r\n                                        <td>{truncate(comments, {length: 50, separator: /,? +/})}</td>\r\n                                        <td>\r\n                                            <Link to={`${match.url}/${id}`} className=\"btn btn-sm\">\r\n                                                <FontAwesomeIcon icon=\"link\" />\r\n                                            </Link>\r\n                                        </td>\r\n                                    </tr>                                        \r\n                                ) ) }\r\n                            </tbody>\r\n                        </table>\r\n                    </div> \r\n\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div className=\"account-link\">      \r\n                            <Link to={`${match.path}/accounts`} className=\"btn btn-sm mr-2\"><FontAwesomeIcon icon=\"coins\" /> Account</Link>\r\n                        </div>\r\n\r\n                        <div className=\"_action\">\r\n                            <label>Rows per page:</label>\r\n\r\n                            <select className=\"border-0 mr-4 pl-1 font-weight-bold\" value={perPage} onChange={perPageHandler}>\r\n                                <option value=\"5\">5</option>\r\n                                <option value=\"10\">10</option>\r\n                                <option value=\"25\">25</option>\r\n                                <option value=\"50\">50</option>\r\n                            </select>\r\n                            \r\n                            { chunkData.length > 1 ? <span className=\"mr-4\">{navigationInfo(page, perPage, chunkData.length, filtered.length)}</span> : null }\r\n\r\n                            <span className=\"navigation\">\r\n                                <button className=\"btn\" disabled={page === 1} onClick={() => pageHandler(page - 1)}><FontAwesomeIcon icon=\"chevron-left\" /></button>\r\n                                <label>{page} of {chunkData.length}</label>\r\n                                <button className=\"btn\" disabled={page === chunkData.length} onClick={() => pageHandler(page + 1)}><FontAwesomeIcon icon=\"chevron-right\" /></button>\r\n                            </span>\r\n                        </div>\r\n                    </div>                                      \r\n                </>                \r\n            )\r\n        } else {\r\n            return <Link to={`${match.path}/add`} className=\"btn btn-sm mr-2\"><FontAwesomeIcon icon=\"plus\" /> Add Cash Flow</Link>\r\n        }\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nexport default connect()(Show)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport DatePicker from 'react-datepicker'\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\nexport const DateTime = ({ name, label, value, required, handleChange }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <DatePicker name={name} className=\"form-control\" autoComplete=\"off\" id={name} selected={value} onChange={handleChange} maxDate={new Date()} showTimeSelect />\r\n        </div>        \r\n    )\r\n} \r\n\r\nDateTime.defaultProps = { value: null, required: false }\r\nDateTime.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.object,\r\n    required: PropTypes.bool,\r\n    handleChange: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\nconst ProcessError = ({ errors }) => {\r\n    let err = []\r\n    try {\r\n        Object.entries(errors).forEach( ([key, value]) => value.map( value => err.push(value) ) )\r\n    } catch (error) {\r\n        err.push('Oops, something went wrong')\r\n    }\r\n\r\n    return (\r\n        <ul>\r\n            { err.map( (error, i) => <li key={i}>{error}</li> ) }\r\n        </ul>\r\n    )\r\n} \r\n\r\nProcessError.propTypes = { errors: PropTypes.any.isRequired }\r\n\r\nexport default ProcessError\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const Rating = ({rate}) => {\r\n    const ratings = []\r\n    for ( let i = 1; i < 6; i++ ) {\r\n        ratings.push(<FontAwesomeIcon key={i} icon=\"star\" className={classNames('rating', { checked: i <= rate })} />)\r\n    }\r\n\r\n    return ratings\r\n}\r\n\r\nRating.propTypes = { rate: PropTypes.number.isRequired }\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Field, DateTime, ProcessError } from '../fragment'\r\nimport { cashFlowService, AccountService, PaymentService } from '../../services'\r\nimport { alertActions } from '../../actions'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst AddCashFlow = ({ dispatch, type, match, history }) => {\r\n    const [ inputs, setInputs ] = useState({})\r\n    const [ currency, setCurrency ] = useState([])\r\n    const [ method, setMethod ] = useState([])\r\n    const [ account, setAccount ] = useState([])\r\n    const [ error, setError ] = useState(null)\r\n\r\n    useEffect( () => {\r\n        PaymentService.getAll().then( response => setMethod(response.data) )\r\n        AccountService.getAll().then( response => {\r\n            response.data.map( data => data.name = `${data.name} (${data.number})` )\r\n            setAccount(response.data)\r\n        } )\r\n\r\n        if ( type ) {\r\n            cashFlowService.getOne(match.params.id).then( ({ data }) => {\r\n                data.type = ( data.amount > 0 ) ? 1 : 0\r\n                data.amount = Math.abs(data.amount)\r\n                data.date = new Date(data.date)\r\n                setInputs(data)\r\n            }, e => setError(e.response ? e.response.statusText : 'Oops, something went wrong') )\r\n        }\r\n    }, [] )\r\n\r\n    useEffect( () => {\r\n        if ( currency.length === 0 ) {\r\n            if ( type && 'account_id' in inputs ) {\r\n                const acc = account.find( ({id}) => id === inputs.account_id )\r\n                setCurrency(acc ? acc.currency : [])\r\n            }\r\n        }\r\n    }, [inputs.account_id] )\r\n\r\n    const _handleChange = (e) => {\r\n        setInputs({ ...inputs, ...{ [e.target.name]: e.target.value } })\r\n        //e.persist()\r\n    }\r\n\r\n    const handleAccount = (e) => {\r\n        const acc = account.find( ({id}) => id === parseInt(e.target.value) )\r\n        _handleChange(e)\r\n        setCurrency(acc ? acc.currency : [])\r\n    }\r\n\r\n    const handleDate = date => setInputs({ ...inputs, ...{ date } })\r\n\r\n    const submitHandler = (e) => {\r\n        cashFlowService.create(inputs).then(\r\n            (response) => {\r\n                if ( type === 0 ) {\r\n                    setInputs({})\r\n                }\r\n\r\n                dispatch(alertActions.success(response.data))\r\n            },\r\n            error => {\r\n                let msg = error.response ? <ProcessError errors={error.response.data} /> : error\r\n                dispatch(alertActions.error(msg))\r\n            }\r\n        )\r\n\r\n        e.preventDefault()\r\n    }\r\n\r\n    const handleUndo = () => {\r\n        console.log(inputs.id)\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        cashFlowService.delete(inputs.id).then(\r\n            (response) => {\r\n                dispatch(alertActions.success(<div>{response.data} <button className=\"btn btn-sm text-info\" onClick={handleUndo}>UNDO</button></div>))\r\n                history.push('/cashflow')\r\n            },\r\n            error => dispatch(alertActions.error( error.response && error.response.status !== 500 ? error.response.data : error.toString() ))\r\n        )\r\n    }\r\n\r\n    const fields = [\r\n        { name: 'account_id', type: 'select', label: 'Account', options: account, required: true },\r\n        { name: 'currency_id', type: 'radio', label: 'Currency', values: currency, required: true },\r\n        { name: 'payment_method_id', type: 'select', label: 'Payment Method', options: method, required: true },\r\n        { name: 'amount', type: 'text', label: 'Amount', required: true },\r\n        { name: 'date', type: 'text', label: 'Date', required: true },\r\n        { name: 'comments', type: 'textarea', label: 'Comments' },\r\n    ]\r\n\r\n    if ( type && error ) {\r\n        return <p className=\"text-danger\">{error}</p>\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-wrapper mx-auto py-4 px-3\">\r\n            <h4 className=\"heading mb-3\">{ type === 0 ? 'Add' : 'Update' } Cash flow</h4>\r\n\r\n            <form name=\"cashflow\" className=\"pre-disabled\" onSubmit={submitHandler}>\r\n                <select name=\"type\" className=\"custom-select custom-select-sm d-inline\" value={inputs['type']} onChange={_handleChange} required>\r\n                    { ! type ? <option value=\"\">Type</option> : null }\r\n                    <option value=\"1\">CREDIT</option>\r\n                    <option value=\"0\">DEBIT</option>\r\n                </select>\r\n\r\n                <hr />\r\n\r\n                { fields.map (\r\n                    (field) => field.name === 'date'\r\n                    ? <DateTime key={field.name} name={field.name} label={field.label} value={inputs[field.name]} handleChange={handleDate} />\r\n                    : <Field key={field.name} field={field} value={inputs[field.name]} handleChange={field.name === 'account_id' ? handleAccount : _handleChange} />\r\n                ) }\r\n\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <button type=\"submit\" className=\"btn\" id=\"submit\"><FontAwesomeIcon icon=\"save\" /> Save</button>\r\n                    { type ? <button type=\"button\" className=\"btn\" onClick={handleDelete}><FontAwesomeIcon icon=\"trash\" /> Delete</button> : null }                    \r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default connect()(AddCashFlow)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { cashFlowService } from '../../services'\r\nimport { _sum } from '../../helpers/variable'\r\n\r\nconst Account = ({ match, location, history }) => {\r\n    const [ data, setData ] = useState([])\r\n    const [ loaded, setLoaded ] = useState(false)\r\n\r\n    useEffect(() => {\r\n        cashFlowService.getAll()\r\n            .then(\r\n                response => {\r\n                    response.data.map( data => ['comments', 'id'].forEach( k => delete data[k] ) )\r\n                    setData(response.data)\r\n                    setLoaded(true)\r\n                }\r\n            )        \r\n    }, [])\r\n\r\n    if ( loaded ) {\r\n        const acc = [...new Set(data.map( item => `${item.currency}|${item.symbol}|${item.account}|${item.number}` ))]\r\n    \r\n        return (\r\n            <div className=\"content-body container\">\r\n                <div className=\"row bottom-margin\">\r\n                    { acc.map( (v, i) => {\r\n                        const _account = v.split('|')\r\n                        const singleAcc = data.filter( ({ currency, account }, i, arr) => {\r\n                            ['date', 'symbol', 'payment_method', 'number'].forEach( k => delete arr[i][k] )\r\n                            return currency === _account[0] && account === _account[2]\r\n                        } )\r\n                        const total = _sum(singleAcc, 'amount').toFixed(2)\r\n                        \r\n                        return (\r\n                            <div key={i} className=\"col-sm-12 col-md-4 col-lg-3\">\r\n                                <div className=\"card p-3 flex-row align-items-center\">\r\n                                    <i className=\"icon h3 mr-2\"><FontAwesomeIcon icon=\"coins\" /></i>\r\n                                    <div>\r\n                                        <label className=\"small\">{_account[2]}</label>\r\n                                        <p className=\"h5\">{_account[1]}{total}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    } ) }                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nexport default Account\r\n","export const _check = data => {\r\n\ttry {\r\n\t\treturn data\r\n\t} catch (error) {\r\n\t\treturn null\r\n\t}\r\n}\r\n\r\nexport const undefinedToEmpty = $var => $var ? $var : ''\r\n\r\nexport const _sum = (items, prop) => items.reduce( (a, b) => a + b[prop], 0 )\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Route, Link, Switch } from 'react-router-dom'\r\nimport Show from './Show'\r\nimport AddCashFlow from './AddCashFlow'\r\nimport Account from './Account'\r\nimport './cashflow.scss'\r\n\r\nconst CashFlow = ({ match }) => (\r\n    <>\r\n        <Route exact path={match.path} render={ props => <Show {...props} /> } />\r\n        <Switch>\r\n            <Route path={`${match.path}/add`} render={ () => <AddCashFlow type={0} /> } />\r\n            <Route path={`${match.path}/accounts`} render={ props => <Account {...props} />  } />\r\n            <Route path={`${match.path}/:id`} render={ props => <AddCashFlow type={1} {...props} /> } />              \r\n        </Switch>\r\n    </>  \r\n)\r\n\r\nexport default CashFlow\r\n","import axios from 'axios'\r\n\r\nconst api = 'http://localhost/bil/app'\r\nconst options = { 'Content-Type': 'application/json' }\r\n\r\nconst create = ( input, id ) => id ? _update(id, input) : _add(input)\r\n\r\nconst getAll = () => axios.get(api+'/customers').then( response => response , error => Promise.reject(error) )\r\n\r\nconst getOne = id => axios.get(`${api}/customer/${id}`).then( response => response , error => Promise.reject(error) )\r\n\r\nconst _add = ( input ) => axios.post( api+'/customers', input, options ).then( response => response , error => Promise.reject(error) )\r\n\r\nconst _update = (id, input) => axios.put( `${api}/customers/${id}`, input ).then( response => response , error => Promise.reject(error) )\r\n\r\nconst _delete = id => axios.delete(api+'/customers', {data: id}).then( response => response , error => Promise.reject(error) )\r\n\r\nexport const Service = {\r\n    create,\r\n    getAll,\r\n    getOne,\r\n    delete: _delete\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport classNames from 'classnames'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { chunk, truncate, orderBy } from 'lodash'\r\nimport queryString from 'query-string'\r\nimport { Dropdown, ButtonGroup } from 'react-bootstrap'\r\nimport { Select } from '../../fragment/form-elements'\r\nimport startCase from 'lodash/startCase'\r\nimport { _object, csv } from '../../../helpers'\r\n\r\nconst Customers = ({ match, location, history, response, update }) => {\r\n    const { loaded, data } = response\r\n    const search = location.search ? queryString.parse(location.search) : {\r\n        filter: JSON.stringify({}), sort: 'customer', order: 'asc', page: 1, perPage: 10\r\n    }\r\n\r\n    const [ selected, setSelected ] = useState([])\r\n    const [ filters, setFilters ] = useState({})\r\n    const path = location.pathname\r\n\r\n    useEffect( () => updateFilters(JSON.parse(search.filter)), [loaded, search.filter] )\r\n\r\n    const updateFilters = (data = {}, filters = {}) => {\r\n        Object.keys(data).map( k => filters[k] = filterComponent(k, data[k]) )\r\n        setFilters(filters)\r\n    }\r\n\r\n    const pageHandler = page => pushSearch({page})\r\n\r\n    const perPageHandler = e => pushSearch({perPage: e.currentTarget.value})\r\n\r\n    const searchHandler = e => {\r\n        let q = e.target.value\r\n        if (q) console.log(q)\r\n    }\r\n\r\n    const checkHandler = e => setSelected([1])\r\n\r\n    const filterComponent = (filter, value = '') => <Select key={filter} name={filter} label={startCase(filter)} value={value} values={[...new Set(data.map(item => item[filter]))]} handleChange={filterHandler} />\r\n\r\n    const addFilter = filter => {\r\n        let queryFilters = JSON.parse(search.filter)\r\n        setFilters({ ...filters, ...{ [filter]: filterComponent(filter, queryFilters[filter]) } })\r\n    }\r\n\r\n    const removeFilter = filter => {\r\n        delete filters[filter]\r\n        setFilters({ ...filters })\r\n\r\n        let query_filter = JSON.parse(search.filter)\r\n        delete query_filter[filter]\r\n\r\n        pushSearch({ page: 1, filter: JSON.stringify(query_filter) })\r\n    }\r\n\r\n    const filterHandler = (e, filter) => {\r\n        let parse_filter = JSON.parse(search.filter),\r\n            input = e.target.value,\r\n            nFilter = { ...parse_filter, ...{ [filter]: input } }\r\n\r\n        pushSearch({ page: 1, filter: JSON.stringify(nFilter) })\r\n    }\r\n\r\n    const sortHandler = text => {\r\n        const order = (search.sort === text) ? search.order === 'asc' ? 'desc' : 'asc' : 'asc'\r\n        pushSearch({ sort: text, page: 1, order })\r\n    }\r\n\r\n    const pushSearch = obj => history.push(`${path}?${queryString.stringify({ ...search, ...obj })}`)\r\n\r\n    const csvData = data => {\r\n        let csv = []\r\n        for (let res of data) {\r\n            csv.push({\r\n                Customer: res.name,\r\n                Location: res.city,\r\n                Orders: res.order,\r\n                \"Total Spent\": res.totalspent.toFixed(2),\r\n                \"Last Seen\": res.lastseen\r\n            })\r\n        }\r\n        return csv\r\n    }\r\n\r\n    const navigationInfo = (current, perPage, batchLen, totalLen) => {\r\n        let i = current - 1,\r\n            to = current === batchLen ? totalLen : current * perPage\r\n\r\n        return `${i * perPage + 1} - ${to} of ${totalLen}`\r\n    }\r\n\r\n    if ( loaded ) {\r\n        if ( data.length > 0 ) {\r\n            const { sort, order } = search\r\n            const perPage = parseInt(search.perPage)\r\n            const page = parseInt(search.page)\r\n            const filter = _object.clean(JSON.parse(search.filter))\r\n\r\n            // filter data\r\n            const filtered = data\r\n                .filter( row => filter.city ? row.city === filter.city : true )\r\n                .filter( row => filter.order ? row.order === filter.order : true )\r\n                .filter( row => filter.lastseen ? row.lastseen === filter.lastseen : true )\r\n\r\n            const orderData = orderBy(filtered, [sort], [order])\r\n\r\n            let chunkData = chunk(orderData, perPage),\r\n                current = chunkData[page-1] ? chunkData[page-1] : []\r\n\r\n            const arrow = column => {\r\n                if (column === sort)\r\n                    return <FontAwesomeIcon className=\"small\" icon={order === 'asc' ? 'arrow-up' : 'arrow-down'} />\r\n\r\n                return null\r\n            }\r\n\r\n            const FilterList = ({list = []}) => {\r\n                const added = list.every(filter => filter in filters)\r\n\r\n                return added ? null : (\r\n                    <Dropdown as={ButtonGroup}>\r\n                        <Dropdown.Toggle as=\"a\" id=\"filter-dropdown\" bsPrefix=\"btn btn-sm anchor mr-2\">\r\n                            <FontAwesomeIcon icon=\"filter\" /> ADD FILTER\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            { list.map( (filter, i) => filter in filters ? null : <Dropdown.Item as=\"button\" key={i} onClick={ () => addFilter(filter) }>{startCase(filter)}</Dropdown.Item> ) }\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                )\r\n            }\r\n\r\n            return (\r\n                <div className=\"shadow-box\">\r\n                    <div className=\"toolbar-root position-relative\">\r\n                        <div className={classNames('bulk-actions-toolbar toobar d-flex align-items-center justify-content-between position-absolute px-4 w-100', {show: selected.length})}>\r\n                            <label className=\"font-weight-bold\">{selected.length} item{selected.length > 1 ? 's' : null} selected</label>\r\n\r\n                            <button className=\"btn btn-sm text-danger\" onClick={ () => console.log('non') }><FontAwesomeIcon icon=\"trash\" /> DELETE</button>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex align-items-center justify-content-between px-3 filter-toobar\">\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"_search\">\r\n                                    <input type=\"search\" className=\"form-control form-control-sm\" placeholder=\"Search\" onKeyUp={searchHandler} />\r\n                                </div>\r\n\r\n                                {  Object.keys(filters).map( filter => (\r\n                                    <div key={filter} className=\"d-flex align-items-center ml-3\">\r\n                                        <span className=\"mr-2\" onClick={() => removeFilter(filter)}><FontAwesomeIcon icon=\"times\" /></span>\r\n                                        {filters[filter]}\r\n                                    </div>\r\n                                ) ) }\r\n                            </div>\r\n\r\n                            <div className=\"_action\">\r\n                                <Link to={`${match.path}/create`} className=\"btn btn-sm anchor mr-2\"><FontAwesomeIcon icon=\"plus\" /> Create</Link>\r\n                                <FilterList list={[ 'payment_method', 'account', 'currency']} />\r\n                                <button className=\"btn btn-sm\" onClick={ () => csv(csvData(filtered), 'Cash Flow') }><FontAwesomeIcon icon=\"file-export\" /> EXPORT</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"content-body\">\r\n                        <table className=\"table table-md vertical-top edge-pad\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        <input type=\"checkbox\" className=\"fancy-input round\" value=\"all\" onChange={checkHandler} />\r\n                                    </th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('name')}>Customer {arrow('name')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('city')}>Location {arrow('city')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('order')}>Orders {arrow('order')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('totalspent')}>Total Spent {arrow('totalspent')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('lastseen')}>Last Seen {arrow('lastseen')}</span></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                { current.map( ({ id, name, city, order, totalspent, lastseen }) => (\r\n                                    <tr key={id}>\r\n                                        <td>\r\n                                            <input type=\"checkbox\" className=\"fancy-input round\" value={id} onChange={checkHandler} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <Link to={`${match.url}/${id}`}>{name}</Link>\r\n                                        </td>\r\n                                        <td>{city}</td>\r\n                                        <td>{order}</td>\r\n                                        <td>{totalspent.toFixed(2)}</td>\r\n                                        <td>{lastseen}</td>\r\n                                    </tr>\r\n                                ) ) }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-end pb-2 px-3\">\r\n                        <div className=\"_action\">\r\n                            <label>Rows per page:</label>\r\n\r\n                            <select className=\"border-0 mr-4 pl-1 font-weight-bold\" value={perPage} onChange={perPageHandler}>\r\n                                <option value=\"5\">5</option>\r\n                                <option value=\"10\">10</option>\r\n                                <option value=\"25\">25</option>\r\n                                <option value=\"50\">50</option>\r\n                            </select>\r\n\r\n                            { chunkData.length > 1 ? <span className=\"mr-4\">{navigationInfo(page, perPage, chunkData.length, filtered.length)}</span> : null }\r\n\r\n                            <span className=\"navigation\">\r\n                                <button className=\"btn\" disabled={page === 1} onClick={() => pageHandler(page - 1)}><FontAwesomeIcon icon=\"chevron-left\" /></button>\r\n                                <label>{page} of {chunkData.length}</label>\r\n                                <button className=\"btn\" disabled={page === chunkData.length} onClick={() => pageHandler(page + 1)}><FontAwesomeIcon icon=\"chevron-right\" /></button>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <Link to={`${match.path}/create`} className=\"btn btn-sm anchor m-5\"><FontAwesomeIcon icon=\"plus\" /> Create Customer</Link>\r\n        }\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nexport default Customers\r\n","import React, { useState, useLayoutEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Field, DateTime, ProcessError } from '../../fragment'\r\nimport { Service } from './service'\r\nimport { alertActions } from '../../../actions'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst Create = ({ dispatch, match, history, response, update }) => {\r\n    const { loaded, data, error } = response\r\n\r\n    const [ inputs, setInputs ] = useState({})\r\n    const [ currency, setCurrency ] = useState([])\r\n    const [ method, setMethod ] = useState([])\r\n    const [ account, setAccount ] = useState([])\r\n\r\n    const id = match.params.id\r\n\r\n    useLayoutEffect( () => {\r\n        if ( id !== 'create' && loaded ) {\r\n            const user = data.find(item => item.id === id)\r\n            setInputs(user)\r\n        }\r\n    }, [loaded] )\r\n\r\n    const submitHandler = (e) => {\r\n        Service.create(inputs, inputs.id).then(\r\n            success => {\r\n                if ( id === 'create' ) {\r\n                    //resp.address = JSON.parse(resp.address)\r\n                    data.push(success.data)\r\n                    dispatch(alertActions.success('Customer added'))\r\n                    history.push('/customers/'+success.data.id)\r\n                } else {\r\n                    let itemIndex = data.findIndex(item => item.id === id)\r\n                    data[itemIndex] = inputs\r\n\r\n                    dispatch(alertActions.success(success.data))\r\n                    history.push('/customers')\r\n                }\r\n            },\r\n            error => {\r\n                let msg = error.response ? <ProcessError errors={error.response.data} /> : error.toString()\r\n                dispatch(alertActions.error(msg))\r\n            }\r\n        )\r\n\r\n        e.preventDefault()\r\n    }\r\n\r\n    const _handleChange = (e) => setInputs({ ...inputs, ...{ [e.target.name]: e.target.value } })\r\n\r\n    const handleDelete = () => {\r\n        Service.delete([inputs.id]).then(\r\n            success => {\r\n                dispatch(alertActions.success(<div>{success.data} <button className=\"btn btn-sm text-info\" onClick={handleUndo}>UNDO</button></div>))\r\n                const nData = data.filter( item => item.id !== inputs.id )\r\n                update({ ...response, ...{data: nData} })\r\n                history.push('/customers')\r\n            },\r\n            error => dispatch(alertActions.error( error.response && error.response.status !== 500 ? error.response.data : error.toString() ))\r\n        )\r\n    }\r\n\r\n    const handleUndo = () => {\r\n        console.log(inputs.id)\r\n    }\r\n\r\n    /*\r\n    if ( type && error ) {\r\n        return <p className=\"text-danger\">{error}</p>\r\n    }*/\r\n\r\n    if (loaded && !error) {\r\n        if (id !== 'create' && !inputs) {\r\n            dispatch(alertActions.error('Customer does not exist'))\r\n            history.push('/customers')\r\n            return null\r\n        }\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-8 form2\">\r\n                    <form name=\"customer\" className=\"shadow-box pre-disabled\" onSubmit={submitHandler}>\r\n                        <div className=\"content-body p-3\" style={{maxWidth: '600px'}}>\r\n                            <h4 className=\"mb-3 sub-heading\">Identity</h4>\r\n\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <Field field={{ name: 'name', type: 'text', label: 'Name', required: true }} value={inputs.name} handleChange={_handleChange} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <Field field={{ name: 'phone', type: 'text', label: 'Phone Number' }} value={inputs.phone} handleChange={_handleChange} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <Field field={{ name: 'email', type: 'email', label: 'Email' }} value={inputs.email} handleChange={_handleChange} />\r\n                            </div>\r\n\r\n                            <h4 className=\"mb-3 mt-5 sub-heading\">Address</h4>\r\n\r\n                            <div className=\"form-group\">\r\n                                <Field field={{ name: 'address', type: 'textarea', label: 'Address', required: true }} value={inputs.address} handleChange={_handleChange} />\r\n                            </div>\r\n\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <Field field={{ name: 'zip', type: 'text', label: 'Zipcode' }} value={inputs.zip} handleChange={_handleChange} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <Field field={{ name: 'city', type: 'text', label: 'City', required: true }} value={inputs.city} handleChange={_handleChange} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex d-flex align-items-center justify-content-between p-3 toobar\">\r\n                            <button type=\"submit\" className=\"btn\" id=\"submit\"><FontAwesomeIcon icon=\"save\" /> Save</button>\r\n\r\n                            { id !== 'create' ? <button type=\"button\" className=\"btn btn-sm text-danger\" onClick={handleDelete}><FontAwesomeIcon icon=\"trash\" /> DELETE</button> : null }\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                { id !== 'create' ?\r\n                    <div className=\"col-lg-4 d-md-none d-lg-block\">\r\n                        <div className=\"shadow-box p-3\">\r\n                            <h4 className=\"mb-3 sub-heading\">History</h4>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-6\">\r\n                                    <i className=\"float-left mr-3\"><FontAwesomeIcon icon={['far', 'clock']} /></i>\r\n                                    <div className=\"float-left font-weight-bold\">\r\n                                        <label>First Seen</label> <br />\r\n                                        <span>8/28/2019</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-6\">\r\n                                    <i className=\"float-left mr-3\"><FontAwesomeIcon icon={['far', 'clock']} /></i>\r\n                                    <div className=\"float-left font-weight-bold\">\r\n                                        <label>Last Seen</label> <br />\r\n                                        <span>2/22/2020</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-6\">\r\n                                    <i className=\"mr-3\"><FontAwesomeIcon icon=\"coins\" /></i>\r\n                                    <label className=\"font-weight-bold\">10 Orders</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"shadow-box p-3 clearfix\">\r\n                            <i className=\"float-left mr-3\"><FontAwesomeIcon icon=\"coins\" /></i>\r\n                            <div className=\"float-left\">\r\n                                <label className=\"font-weight-bold\">Order #F6DQM0</label> <br />\r\n                                <span>2016-10-04T09:24:22.941Z</span> <br />\r\n                                <span>1 item - $63.13</span>\r\n                            </div>\r\n                            <Link to={`${match.path}/order`} className=\"float-right\"><FontAwesomeIcon icon={['far', 'edit']} /></Link>\r\n                        </div>\r\n                    </div>\r\n                : null }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return null\r\n\r\n}\r\n\r\nexport default connect()(Create)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Route, Link, Switch } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Service } from './service'\r\nimport Customers from './Customers'\r\nimport Create from './Create'\r\nimport { alertActions } from '../../../actions'\r\nimport './customer.scss'\r\n\r\nconst Customer = ({ match, dispatch }) => {\r\n    const [ data, setData ] = useState({ loaded: false, data: [], error: false })\r\n\r\n    useEffect(() => {\r\n        Service.getAll()\r\n            .then(\r\n                response => {\r\n                    setData({ ...data, ...{loaded: true, data: response.data} })\r\n                    /*if (typeof(response.data) === 'object') {\r\n                        const items = response.data.map( item => {\r\n                            const address = JSON.parse(item.address)\r\n                            Object.assign(item, address)\r\n                            return item\r\n                        } )\r\n                        setData({ ...data, ...{loaded: true, data: items} })\r\n                    } else {\r\n                        setData({ ...data, ...{loaded: true} })\r\n                    }*/\r\n                },\r\n                error => {\r\n                    let msg\r\n                    if ( error.response ) {\r\n                        msg = error.response.status !== 500 ? error.response.data : 'Oops, something went wrong'\r\n                    } else {\r\n                        msg = error.toString()\r\n                    }\r\n                    setData({ ...data, ...{loaded: true, error: true} })\r\n                    dispatch(alertActions.error('Unable to retrieve data'))\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Route exact path={match.path} render={ props => <Customers response={data} update={setData} {...props} /> } />\r\n            <Route path={`${match.path}/:id`} render={ props => <Create response={data} update={setData} {...props} /> } />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect()(Customer)\r\n","import axios from 'axios'\r\n\r\nconst api = 'http://localhost/bil/app'\r\nconst options = { 'Content-Type': 'application/json' }\r\n\r\nconst create = ( input, id ) => id ? _update(id, input) : _add(input)\r\n\r\nconst getAll = () => axios.get(api+'/customers').then( response => response , error => Promise.reject(error) )\r\n\r\nconst getOne = id => axios.get(`${api}/customer/${id}`).then( response => response , error => Promise.reject(error) )\r\n\r\nconst _add = ( input ) => axios.post( api+'/sales', input, options ).then( response => response , error => Promise.reject(error) )\r\n\r\nconst _update = (id, input) => axios.put( `${api}/sales/${id}`, input ).then( response => response , error => Promise.reject(error) )\r\n\r\nconst _delete = id => axios.delete(api+'/sales', {data: id}).then( response => response , error => Promise.reject(error) )\r\n\r\nexport const Service = {\r\n    create,\r\n    getAll,\r\n    getOne,\r\n    delete: _delete\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport classNames from 'classnames'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { chunk, truncate, orderBy } from 'lodash'\r\nimport queryString from 'query-string'\r\nimport { Dropdown, ButtonGroup } from 'react-bootstrap'\r\nimport { Select } from '../../fragment/form-elements'\r\nimport startCase from 'lodash/startCase'\r\nimport { _object, csv } from '../../../helpers'\r\n\r\nconst Show = ({ match, location, history, response, update }) => {\r\n    const { loaded, data } = response\r\n    const search = location.search ? queryString.parse(location.search) : {\r\n        filter: JSON.stringify({}), sort: 'date', order: 'asc', page: 1, perPage: 10\r\n    }\r\n\r\n    const [ selected, setSelected ] = useState([])\r\n    const [ filters, setFilters ] = useState({})\r\n    const path = location.pathname\r\n\r\n    useEffect( () => updateFilters(JSON.parse(search.filter)), [loaded, search.filter] )\r\n\r\n    const updateFilters = (data = {}, filters = {}) => {\r\n        Object.keys(data).map( k => filters[k] = filterComponent(k, data[k]) )\r\n        setFilters(filters)\r\n    }\r\n\r\n    const pageHandler = page => pushSearch({page})\r\n\r\n    const perPageHandler = e => pushSearch({perPage: e.currentTarget.value})\r\n\r\n    const searchHandler = e => {\r\n        let q = e.target.value\r\n        if (q) console.log(q)\r\n    }\r\n\r\n    const checkHandler = e => setSelected([1])\r\n\r\n    const filterComponent = (filter, value = '') => <Select key={filter} name={filter} label={startCase(filter)} value={value} values={[...new Set(data.map(item => item[filter]))]} handleChange={filterHandler} />\r\n\r\n    const addFilter = filter => {\r\n        let queryFilters = JSON.parse(search.filter)\r\n        setFilters({ ...filters, ...{ [filter]: filterComponent(filter, queryFilters[filter]) } })\r\n    }\r\n\r\n    const removeFilter = filter => {\r\n        delete filters[filter]\r\n        setFilters({ ...filters })\r\n\r\n        let query_filter = JSON.parse(search.filter)\r\n        delete query_filter[filter]\r\n\r\n        pushSearch({ page: 1, filter: JSON.stringify(query_filter) })\r\n    }\r\n\r\n    const filterHandler = (e, filter) => {\r\n        let parse_filter = JSON.parse(search.filter),\r\n            input = e.target.value,\r\n            nFilter = { ...parse_filter, ...{ [filter]: input } }\r\n\r\n        pushSearch({ page: 1, filter: JSON.stringify(nFilter) })\r\n    }\r\n\r\n    const sortHandler = text => {\r\n        const order = (search.sort === text) ? search.order === 'asc' ? 'desc' : 'asc' : 'asc'\r\n        pushSearch({ sort: text, page: 1, order })\r\n    }\r\n\r\n    const pushSearch = obj => history.push(`${path}?${queryString.stringify({ ...search, ...obj })}`)\r\n\r\n    const openOrder = id => history.push(`${path}/${id}`)\r\n\r\n    const csvData = data => {\r\n        let csv = []\r\n        for (let res of data) {\r\n            csv.push({\r\n                Date: res.date,\r\n                Reference: res.reference,\r\n                Customer: res.customer,\r\n                \"No. Items\": res.orderCount,\r\n                Total: res.amount\r\n            })\r\n        }\r\n        return csv\r\n    }\r\n\r\n    const navigationInfo = (current, perPage, batchLen, totalLen) => {\r\n        let i = current - 1,\r\n            to = current === batchLen ? totalLen : current * perPage\r\n\r\n        return `${i * perPage + 1} - ${to} of ${totalLen}`\r\n    }\r\n\r\n    if ( loaded ) {\r\n        if ( data.length > 0 ) {\r\n            const { sort, order } = search\r\n            const perPage = parseInt(search.perPage)\r\n            const page = parseInt(search.page)\r\n            const filter = _object.clean(JSON.parse(search.filter))\r\n\r\n            // filter data\r\n            const filtered = data\r\n                .filter( row => filter.amount ? row.amount === filter.amount : true )\r\n                .filter( row => filter.orderCount ? row.orderCount === filter.orderCount : true )\r\n                .filter( row => filter.customer ? row.customer === filter.customer : true )\r\n\r\n            const orderData = orderBy(filtered, [sort], [order])\r\n\r\n            let chunkData = chunk(orderData, perPage),\r\n                current = chunkData[page-1] ? chunkData[page-1] : []\r\n\r\n            const arrow = column => {\r\n                if (column === sort)\r\n                    return <FontAwesomeIcon className=\"small\" icon={order === 'asc' ? 'arrow-up' : 'arrow-down'} />\r\n\r\n                return null\r\n            }\r\n\r\n            const FilterList = ({list = []}) => {\r\n                const added = list.every(filter => filter in filters)\r\n\r\n                return added ? null : (\r\n                    <Dropdown as={ButtonGroup}>\r\n                        <Dropdown.Toggle as=\"a\" id=\"filter-dropdown\" bsPrefix=\"btn btn-sm anchor mr-2\">\r\n                            <FontAwesomeIcon icon=\"filter\" /> ADD FILTER\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            { list.map( (filter, i) => filter in filters ? null : <Dropdown.Item as=\"button\" key={i} onClick={ () => addFilter(filter) }>{startCase(filter)}</Dropdown.Item> ) }\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                )\r\n            }\r\n\r\n            return (\r\n                <div className=\"shadow-box\">\r\n                    <div className=\"toolbar-root d-flex justify-content-between p-3 position-relative\">\r\n                        <div className={classNames('bulk-actions-toolbar toobar d-flex align-items-center justify-content-between position-absolute px-4 w-100 h-100', {show: selected.length})}>\r\n                            <label className=\"font-weight-bold\">{selected.length} item{selected.length > 1 ? 's' : null} selected</label>\r\n\r\n                            <button className=\"btn btn-sm text-danger\" onClick={ () => console.log('non') }><FontAwesomeIcon icon=\"trash\" /> DELETE</button>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"_search\">\r\n                                <input type=\"search\" className=\"form-control form-control-sm\" placeholder=\"Search\" onKeyUp={searchHandler} />\r\n                            </div>\r\n\r\n                            {  Object.keys(filters).map( filter => (\r\n                                <div key={filter} className=\"d-flex align-items-center ml-3\">\r\n                                    <span className=\"mr-2\" onClick={() => removeFilter(filter)}><FontAwesomeIcon icon=\"times\" /></span>\r\n                                    {filters[filter]}\r\n                                </div>\r\n                            ) ) }\r\n                        </div>\r\n\r\n                        <div className=\"_action\">\r\n                            <Link to={`${match.path}/new`} className=\"btn btn-sm anchor mr-2\"><FontAwesomeIcon icon=\"plus\" /> New</Link>\r\n                            <FilterList list={[ 'payment_method', 'account', 'currency']} />\r\n                            <button className=\"btn btn-sm\" onClick={ () => csv(csvData(filtered), 'Cash Flow') }><FontAwesomeIcon icon=\"file-export\" /> EXPORT</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"content-body\">\r\n                        <table className=\"table table-md vertical-top edge-pad\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        <input type=\"checkbox\" className=\"fancy-input\" value=\"all\" onChange={checkHandler} />\r\n                                    </th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('date')}>Date {arrow('date')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('reference')}>Reference {arrow('reference')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('customer')}>Customer {arrow('customer')}</span></th>\r\n                                    <th className=\"text-right\"><span className=\"pointer\" onClick={() => sortHandler('orderCount')}>No. Items {arrow('orderCount')}</span></th>\r\n                                    <th className=\"text-right\"><span className=\"pointer\" onClick={() => sortHandler('amount')}>Total {arrow('amount')}</span></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                { current.map( ({ id, date, reference, customer, orderCount, amount }) => (\r\n                                    <tr key={id} className=\"pointer bg-hover\" onClick={() => openOrder(id)}>\r\n                                        <td>\r\n                                            <input type=\"checkbox\" className=\"fancy-input\" value={id} onChange={checkHandler} />\r\n                                        </td>\r\n                                        <td>{date}</td>\r\n                                        <td>{reference}</td>\r\n                                        <td>{customer}</td>\r\n                                        <td className=\"text-right\">{orderCount}</td>\r\n                                        <td className=\"text-right\">{amount.toFixed(2)}</td>\r\n                                    </tr>\r\n                                ) ) }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-end pb-2 px-3\">\r\n                        <div className=\"_action\">\r\n                            <label>Rows per page:</label>\r\n\r\n                            <select className=\"border-0 mr-4 pl-1 font-weight-bold\" value={perPage} onChange={perPageHandler}>\r\n                                <option value=\"5\">5</option>\r\n                                <option value=\"10\">10</option>\r\n                                <option value=\"25\">25</option>\r\n                                <option value=\"50\">50</option>\r\n                            </select>\r\n\r\n                            { chunkData.length > 1 ? <span className=\"mr-4\">{navigationInfo(page, perPage, chunkData.length, filtered.length)}</span> : null }\r\n\r\n                            <span className=\"navigation\">\r\n                                <button className=\"btn\" disabled={page === 1} onClick={() => pageHandler(page - 1)}><FontAwesomeIcon icon=\"chevron-left\" /></button>\r\n                                <label>{page} of {chunkData.length}</label>\r\n                                <button className=\"btn\" disabled={page === chunkData.length} onClick={() => pageHandler(page + 1)}><FontAwesomeIcon icon=\"chevron-right\" /></button>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <Link to={`${match.path}/new`} className=\"btn btn-sm anchor m-5\"><FontAwesomeIcon icon=\"plus\" /> New Order</Link>\r\n        }\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nexport default Show\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst Truck = ({ data }) => {\r\n    console.log(data)\r\n    return (\r\n        <div className=\"shadow-box truck\">\r\n            <table className=\"table table-md edge-pad\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Product</th>\r\n                        <th className=\"text-center\">Unit Price</th>\r\n                        <th className=\"text-right\">Quantity</th>\r\n                        <th className=\"text-right\">Amount</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    { data.map( ({ product, price, quantity }, i) => (\r\n                        <tr key={i}>\r\n                            <td>{product}</td>\r\n                            <td className=\"text-center\">&#x20A6;{price}</td>\r\n                            <td className=\"text-right\">{quantity}</td>\r\n                            <td className=\"text-right\">&#8358;{price * quantity}</td>\r\n                        </tr>\r\n                    ) ) }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Truck\r\n","import React, { useState, useLayoutEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Field, DateTime, ProcessError } from '../../fragment'\r\nimport { Service } from './service'\r\nimport { alertActions } from '../../../actions'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport Truck from './Truck'\r\n\r\nconst AddOrder = ({ dispatch, match, history, response, update }) => {\r\n    const { loaded, data, error } = response\r\n\r\n    const [ inputs, setInputs ] = useState({})\r\n    const [ loading, setLoading ] = useState([])\r\n    const [ currency, setCurrency ] = useState([])\r\n    const [ method, setMethod ] = useState([])\r\n    const [ account, setAccount ] = useState([])\r\n\r\n    const id = match.params.id\r\n\r\n    useLayoutEffect( () => {\r\n        if ( id !== 'new' && loaded ) {\r\n            const order = data.find(item => parseInt(item.id) === parseInt(id))\r\n            setInputs(order)\r\n        }\r\n    }, [loaded] )\r\n\r\n    const submitHandler = (e) => {\r\n        Service.create(inputs, inputs.id).then(\r\n            success => {\r\n                if ( id === 'new' ) {\r\n                    //resp.address = JSON.parse(resp.address)\r\n                    data.push(success.data)\r\n                    dispatch(alertActions.success('Customer added'))\r\n                    history.push('/customers/'+success.data.id)\r\n                } else {\r\n                    let itemIndex = data.findIndex(item => item.id === id)\r\n                    data[itemIndex] = inputs\r\n\r\n                    dispatch(alertActions.success(success.data))\r\n                    history.push('/customers')\r\n                }\r\n            },\r\n            error => {\r\n                let msg = error.response ? <ProcessError errors={error.response.data} /> : error.toString()\r\n                dispatch(alertActions.error(msg))\r\n            }\r\n        )\r\n\r\n        e.preventDefault()\r\n    }\r\n\r\n    const _handleChange = (e) => setInputs({ ...inputs, ...{ [e.target.name]: e.target.value } })\r\n\r\n    const handleDelete = () => {\r\n        Service.delete([inputs.id]).then(\r\n            success => {\r\n                dispatch(alertActions.success(<div>{success.data} <button className=\"btn btn-sm text-info\" onClick={handleUndo}>UNDO</button></div>))\r\n                const nData = data.filter( item => item.id !== inputs.id )\r\n                update({ ...response, ...{data: nData} })\r\n                history.push('/customers')\r\n            },\r\n            error => dispatch(alertActions.error( error.response && error.response.status !== 500 ? error.response.data : error.toString() ))\r\n        )\r\n    }\r\n\r\n    const handleUndo = () => {\r\n        console.log(inputs.id)\r\n    }\r\n\r\n    const showLoading = () => {\r\n        if (inputs.loading) {\r\n            console.log(\"Show loading...\", inputs.loading)\r\n        } else {\r\n            dispatch(alertActions.info('Unable to retrieve loading'))\r\n        }\r\n    }\r\n\r\n    /*\r\n    if ( type && error ) {\r\n        return <p className=\"text-danger\">{error}</p>\r\n    }*/\r\n\r\n    if (loaded && !error) {\r\n        if (id !== 'new' && !inputs) {\r\n            dispatch(alertActions.error('Order does not exist'))\r\n            history.push('/sales')\r\n            return null\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6 form2\">\r\n                        <form name=\"customer\" className=\"shadow-box pre-disabled\" onSubmit={submitHandler}>\r\n                            <div className=\"content-body p-3\" style={{maxWidth: '400px'}}>\r\n                                <div className=\"form-group\">\r\n                                    <Field field={{ name: 'date', type: 'text', label: 'Date', required: true }} value={inputs.date} handleChange={_handleChange} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <Field field={{ name: 'customer', type: 'text', label: 'Customer', required: true }} value={inputs.customer} handleChange={_handleChange} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <i className=\"position-bottom-right pointer\" onClick={showLoading}><FontAwesomeIcon icon=\"truck-moving\" /></i>\r\n                                    <Field field={{ name: 'loading', type: 'text', label: 'Loading Reference', required: true }} value={inputs.loading} handleChange={_handleChange} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"d-flex d-flex align-items-center justify-content-between p-3 toobar\">\r\n                                <button type=\"submit\" className=\"btn\" id=\"submit\"><FontAwesomeIcon icon=\"save\" /> Save</button>\r\n\r\n                                { id !== 'new' ? <button type=\"button\" className=\"btn btn-sm text-danger\" onClick={handleDelete}><FontAwesomeIcon icon=\"trash\" /> DELETE</button> : null }\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                    { id !== 'new' ?\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"shadow-box\">\r\n                                <table className=\"table table-md edge-pad\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Product</th>\r\n                                            <th className=\"text-center\">Unit Price</th>\r\n                                            <th className=\"text-right\">Quantity</th>\r\n                                            <th className=\"text-right\">Total</th>\r\n                                        </tr>\r\n                                    </thead>\r\n\r\n                                    <tbody>\r\n                                        { inputs.invoice ? inputs.invoice.map( ({ product, price, quantity }, i) => (\r\n                                            <tr key={i}>\r\n                                                <td>{product}</td>\r\n                                                <td className=\"text-center\">&#x20A6;{price}</td>\r\n                                                <td className=\"text-right\">{quantity}</td>\r\n                                                <td className=\"text-right\">&#8358;{price * quantity}</td>\r\n                                            </tr>\r\n                                        ) ) : null }\r\n                                        <tr>\r\n                                            <td colSpan=\"2\" />\r\n                                            <td>Total</td>\r\n                                            <td className=\"text-right\">&#x20A6;{inputs.amount}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    : null }\r\n                </div>\r\n\r\n                <Truck data={loading} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    return null\r\n\r\n}\r\n\r\nexport default connect()(AddOrder)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Route, Link, Switch } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Service } from './service'\r\nimport Show from './Show'\r\nimport AddOrder from './AddOrder'\r\nimport { alertActions } from '../../../actions'\r\nimport './sales.scss'\r\nimport sample from './fake'\r\n\r\nconst Sales = ({ match, dispatch }) => {\r\n    const [ data, setData ] = useState({ loaded: false, data: [], error: false })\r\n\r\n    useEffect(() => {\r\n        Service.getAll()\r\n            .then(\r\n                response => {\r\n                    if (typeof(response.data) === 'object') {\r\n                        const items = sample.map( item => {\r\n                            const total = item.invoice.map( item => item.price * item.quantity )\r\n                            item.orderCount = item.invoice.length\r\n                            item.amount = total.reduce((a, b) => a + b, 0)\r\n\r\n                            return item\r\n                        } )\r\n                        setData({ ...data, ...{loaded: true, data: items} })\r\n                    } else {\r\n                        setData({ ...data, ...{loaded: true} })\r\n                    }\r\n                },\r\n                error => {\r\n                    let msg\r\n                    if ( error.response ) {\r\n                        msg = error.response.status !== 500 ? error.response.data : 'Oops, something went wrong'\r\n                    } else {\r\n                        msg = error.toString()\r\n                    }\r\n                    setData({ ...data, ...{loaded: true, error: true} })\r\n                    dispatch(alertActions.error('Unable to retrieve data'))\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Route exact path={match.path} render={ props => <Show response={data} update={setData} {...props} /> } />\r\n            <Route path={`${match.path}/:id`} render={ props => <AddOrder response={data} update={setData} {...props} /> } />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect()(Sales)\r\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport Customer from './customer'\nimport Sales from './sales'\n\nconst SFA = ({ match }) => (\n    <>\n        <Route exact path={match.url} render={ () => (\n            <>\n                <h3>Sales Force Automation</h3>\n                <p className=\"h5 mt-4\">This will be your dashboard that will contain all your activity on the application.</p>\n            </>\n        ) } />\n        <Route path={`${match.url}/customers`} render={ props => <Customer {...props} /> } />\n        <Route path={`${match.url}/sales`} render={ props => <Sales {...props} /> } />\n    </>\n)\n\nexport default SFA\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst inlineCSS = {\r\n    position: 'fixed',\r\n    bottom: '50px',\r\n    zIndex: 500,\r\n}\r\n\r\nexport const MobileAddBtn = ({to}) => (\r\n    <a class=\"MobileButton btn btn-primary rounded-circle\" role=\"button\" aria-label=\"Create\" href={to} style={inlineCSS}>\r\n        <span class=\"MobileButton-label\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n        </span>\r\n    </a>\r\n)\r\n\r\nMobileAddBtn.defaultProps = { to: '#' }\r\nMobileAddBtn.propTypes = { to: PropTypes.string }\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { cashFlowService } from '../../services'\r\nimport { alertActions } from '../../actions'\r\nimport { chunk, truncate, orderBy } from 'lodash'\r\nimport queryString from 'query-string'\r\nimport { Dropdown, ButtonGroup } from 'react-bootstrap'\r\nimport { Select } from '../fragment/form-elements'\r\nimport startCase from 'lodash/startCase'\r\nimport { _object, csv } from '../../helpers'\r\nimport { MobileAddBtn } from '../fragment/mobile-add-button'\r\n\r\nconst Show = ({ match, location, history, dispatch }) => {\r\n    const search = location.search ? queryString.parse(location.search) : {\r\n        filter: JSON.stringify({}), sort: 'id', order: 'asc', page: 1, perPage: 10\r\n    }\r\n    \r\n    const [ data, setData ] = useState([])\r\n    const [ loaded, setLoaded ] = useState(false)\r\n    const [ filters, setFilters ] = useState({})\r\n    //const [ filterValue, setFilterValue ] = useState({})\r\n    const path = location.pathname\r\n\r\n    useEffect(() => {\r\n        cashFlowService.getAll()\r\n            .then(\r\n                response => {\r\n                    setData(response.data)\r\n                    setLoaded(true)\r\n                },\r\n                error => {\r\n                    let msg\r\n                    if ( error.response ) {\r\n                        msg = error.response.status !== 500 ? error.response.data : 'Oops, something went wrong'\r\n                    } else {\r\n                        msg = error.toString()\r\n                    }\r\n                    dispatch(alertActions.error(msg))\r\n                }\r\n            )        \r\n    }, [])\r\n\r\n    useEffect( () => updateFilters(JSON.parse(search.filter)), [loaded, search.filter] )\r\n\r\n    const updateFilters = (data = {}, filters = {}) => {\r\n        Object.keys(data).map( k => filters[k] = filterComponent(k, data[k]) )\r\n        setFilters(filters)\r\n    }\r\n    \r\n    const pageHandler = page => pushSearch({page})\r\n\r\n    const perPageHandler = e => pushSearch({perPage: e.currentTarget.value})\r\n\r\n    const searchHandler = e => {\r\n        let q = e.target.value\r\n        if (q) console.log(q)\r\n    }\r\n\r\n    const filterComponent = (filter, value = '') => <Select key={filter} name={filter} label={startCase(filter)} value={value} values={[...new Set(data.map(item => item[filter]))]} handleChange={filterHandler} />\r\n\r\n    const addFilter = filter => {\r\n        let queryFilters = JSON.parse(search.filter)\r\n        setFilters({ ...filters, ...{ [filter]: filterComponent(filter, queryFilters[filter]) } })\r\n    }\r\n\r\n    const removeFilter = filter => {\r\n        delete filters[filter]\r\n        setFilters({ ...filters })\r\n\r\n        let query_filter = JSON.parse(search.filter)\r\n        delete query_filter[filter]\r\n        \r\n        pushSearch({ page: 1, filter: JSON.stringify(query_filter) })\r\n    }\r\n\r\n    const filterHandler = (e, filter) => {\r\n        let parse_filter = JSON.parse(search.filter),\r\n            input = e.target.value,\r\n            nFilter = { ...parse_filter, ...{ [filter]: input } }\r\n\r\n        pushSearch({ page: 1, filter: JSON.stringify(nFilter) })\r\n    }\r\n\r\n    const sortHandler = text => {\r\n        const order = (search.sort === text) ? search.order === 'asc' ? 'desc' : 'asc' : 'asc'\r\n        pushSearch({ sort: text, page: 1, order })\r\n    }\r\n\r\n    const pushSearch = obj => history.push(`${path}?${queryString.stringify({ ...search, ...obj })}`)\r\n\r\n    const csvData = data => {\r\n        let csv = []\r\n        for (let res of data) {\r\n            csv.push({\r\n                Date: res.date,\r\n                \"Payment Method\": res.payment_method,\r\n                Account: `${res.account} (${res.currency})`,\r\n                Amount: res.symbol + res.amount.toFixed(2),\r\n                Comments: res.comments\r\n            })\r\n        }\r\n        return csv\r\n    }\r\n    \r\n    const navigationInfo = (current, perPage, batchLen, totalLen) => {\r\n        let i = current - 1,\r\n            to = current === batchLen ? totalLen : current * perPage\r\n\r\n        return `${i * perPage + 1} - ${to} of ${totalLen}`\r\n    }\r\n\r\n    if ( loaded ) {    \r\n        if ( data.length > 0 ) {\r\n            const { sort, order } = search\r\n            const perPage = parseInt(search.perPage)\r\n            const page = parseInt(search.page)\r\n            const filter = _object.clean(JSON.parse(search.filter))\r\n\r\n            // filter data\r\n            const filtered = data\r\n                .filter( row => filter.payment_method ? row.payment_method === filter.payment_method : true )\r\n                .filter( row => filter.currency ? row.currency === filter.currency : true )\r\n                .filter( row => filter.account ? row.account === filter.account : true )\r\n\r\n            const orderData = orderBy(filtered, [sort], [order])\r\n\r\n            let chunkData = chunk(orderData, perPage),\r\n                current = chunkData[page-1] ? chunkData[page-1] : []\r\n\r\n            const arrow = column => {\r\n                if (column === sort)\r\n                    return <FontAwesomeIcon className=\"small\" icon={order === 'asc' ? 'arrow-up' : 'arrow-down'} />\r\n\r\n                return null\r\n            }\r\n\r\n            const FilterList = ({list = []}) => {\r\n                const added = list.every(filter => filter in filters)\r\n\r\n                return added ? null : (\r\n                    <Dropdown as={ButtonGroup}>\r\n                        <Dropdown.Toggle as=\"a\" id=\"filter-dropdown\" bsPrefix=\"btn btn-sm anchor mr-2\">\r\n                            <FontAwesomeIcon icon=\"filter\" /> Add Filter\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            { list.map( (filter, i) => filter in filters ? null : <Dropdown.Item as=\"button\" key={i} onClick={ () => addFilter(filter) }>{startCase(filter)}</Dropdown.Item> ) }\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                )\r\n            }\r\n            \r\n            return (\r\n                <>\r\n                    <div className=\"toolbar-root d-flex justify-content-between mb-4\">\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"_search d-none\">\r\n                                <input type=\"search\" className=\"form-control form-control-sm\" placeholder=\"Search\" onKeyUp={searchHandler} />\r\n                            </div>\r\n\r\n                            {  Object.keys(filters).map( filter => (\r\n                                <div key={filter} className=\"d-flex align-items-center ml-3\">\r\n                                    <span className=\"mr-2\" onClick={() => removeFilter(filter)}><FontAwesomeIcon icon=\"times\" /></span>\r\n                                    {filters[filter]}\r\n                                </div>\r\n                            ) ) }                         \r\n                        </div>\r\n\r\n                        <div className=\"_action\">\r\n                            <Link to={`${match.path}/add`} className=\"btn btn-sm anchor mr-2\"><FontAwesomeIcon icon=\"plus\" /> Create</Link>\r\n                            <FilterList list={[ 'payment_method', 'account', 'currency']} /> \r\n                            <button className=\"btn btn-sm\" onClick={ () => csv(csvData(filtered), 'Cash Flow') }><FontAwesomeIcon icon=\"file-export\" /> Export</button>                      \r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"content-body\">\r\n                        <table className=\"table table-sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('id')}>Id {arrow('id')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('date')}>Date {arrow('date')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('payment_method')}>Payment Method {arrow('payment_method')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('account')}>Account {arrow('account')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('amount')}>Amount {arrow('amount')}</span></th>\r\n                                    <th><span className=\"pointer\" onClick={() => sortHandler('comments')}>Comments {arrow('comments')}</span></th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                { current.map( ({ id, amount, comments, date, symbol, account, payment_method }) => (\r\n                                    <tr key={id} className={ amount < 0 ? 'debit' : 'credit' }>\r\n                                        <td>{id}</td>\r\n                                        <td>{date}</td>\r\n                                        <td>{payment_method}</td>\r\n                                        <td>{account}</td>\r\n                                        <td>{symbol}{amount.toFixed(2)}</td>\r\n                                        <td>{truncate(comments, {length: 50, separator: /,? +/})}</td>\r\n                                        <td>\r\n                                            <Link to={`${match.url}/${id}`} className=\"btn btn-sm\">\r\n                                                <FontAwesomeIcon icon=\"link\" />\r\n                                            </Link>\r\n                                        </td>\r\n                                    </tr>                                        \r\n                                ) ) }\r\n                            </tbody>\r\n                        </table>\r\n                    </div> \r\n\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <MobileAddBtn to={`${match.path}/add`} />\r\n                        <div className=\"_action\">\r\n                            <label>Rows per page:</label>\r\n\r\n                            <select className=\"border-0 mr-4 pl-1 font-weight-bold\" value={perPage} onChange={perPageHandler}>\r\n                                <option value=\"5\">5</option>\r\n                                <option value=\"10\">10</option>\r\n                                <option value=\"25\">25</option>\r\n                                <option value=\"50\">50</option>\r\n                            </select>\r\n                            \r\n                            { chunkData.length > 1 ? <span className=\"mr-4\">{navigationInfo(page, perPage, chunkData.length, filtered.length)}</span> : null }\r\n\r\n                            <span className=\"navigation\">\r\n                                <button className=\"btn\" disabled={page === 1} onClick={() => pageHandler(page - 1)}><FontAwesomeIcon icon=\"chevron-left\" /></button>\r\n                                <label>{page} of {chunkData.length}</label>\r\n                                <button className=\"btn\" disabled={page === chunkData.length} onClick={() => pageHandler(page + 1)}><FontAwesomeIcon icon=\"chevron-right\" /></button>\r\n                            </span>\r\n                        </div>\r\n                    </div>                                      \r\n                </>                \r\n            )\r\n        } else {\r\n            return <Link to={`${match.path}/add`} className=\"btn btn-sm mr-2\"><FontAwesomeIcon icon=\"plus\" /> Add Cash Flow</Link>\r\n        }\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nexport default connect()(Show)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Field, DateTime, ProcessError } from '../fragment'\r\nimport { cashFlowService, AccountService, PaymentService } from '../../services'\r\nimport { alertActions } from '../../actions'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst AddCashFlow = ({ dispatch, type, match, history }) => {\r\n    const [ inputs, setInputs ] = useState({})\r\n    const [ currency, setCurrency ] = useState([])\r\n    const [ method, setMethod ] = useState([])\r\n    const [ account, setAccount ] = useState([])\r\n    const [ error, setError ] = useState(null)\r\n\r\n    useEffect( () => {\r\n        PaymentService.getAll().then( response => setMethod(response.data) )\r\n        AccountService.getAll().then( response => {\r\n            response.data.map( data => data.name = `${data.name} (${data.number})` )\r\n            setAccount(response.data)\r\n        } )\r\n\r\n        if ( type ) {\r\n            cashFlowService.getOne(match.params.id).then( ({ data }) => {\r\n                data.type = ( data.amount > 0 ) ? 1 : 0\r\n                data.amount = Math.abs(data.amount)\r\n                data.date = new Date(data.date)\r\n                setInputs(data)\r\n            }, e => setError(e.response ? e.response.statusText : 'Oops, something went wrong') )\r\n        }\r\n    }, [] )\r\n\r\n    useEffect( () => {\r\n        if ( currency.length === 0 ) {\r\n            if ( type && 'account_id' in inputs ) {\r\n                const acc = account.find( ({id}) => id === inputs.account_id )\r\n                setCurrency(acc ? acc.currency : [])\r\n            }\r\n        }\r\n    }, [inputs.account_id] )\r\n\r\n    const _handleChange = (e) => {\r\n        setInputs({ ...inputs, ...{ [e.target.name]: e.target.value } })\r\n        //e.persist()\r\n    }\r\n\r\n    const handleAccount = (e) => {\r\n        const acc = account.find( ({id}) => id === parseInt(e.target.value) )\r\n        _handleChange(e)\r\n        setCurrency(acc ? acc.currency : [])\r\n    }\r\n\r\n    const handleDate = date => setInputs({ ...inputs, ...{ date } })\r\n\r\n    const submitHandler = (e) => {\r\n        cashFlowService.create(inputs).then(\r\n            (response) => {\r\n                if ( type === 0 ) {\r\n                    setInputs({})\r\n                }\r\n\r\n                dispatch(alertActions.success(response.data))\r\n            },\r\n            error => {\r\n                let msg = error.response ? <ProcessError errors={error.response.data} /> : error\r\n                dispatch(alertActions.error(msg))\r\n            }\r\n        )\r\n\r\n        e.preventDefault()\r\n    }\r\n\r\n    const handleUndo = () => {\r\n        console.log(inputs.id)\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        cashFlowService.delete(inputs.id).then(\r\n            (response) => {\r\n                dispatch(alertActions.success(<div>{response.data} <button className=\"btn btn-sm text-info\" onClick={handleUndo}>UNDO</button></div>))\r\n                history.push('/cashflow')\r\n            },\r\n            error => dispatch(alertActions.error( error.response && error.response.status !== 500 ? error.response.data : error.toString() ))\r\n        )\r\n    }\r\n\r\n    const fields = [\r\n        { name: 'account_id', type: 'select', label: 'Account', options: account, required: true },\r\n        { name: 'currency_id', type: 'radio', label: 'Currency', values: currency, required: true },\r\n        { name: 'payment_method_id', type: 'select', label: 'Payment Method', options: method, required: true },\r\n        { name: 'amount', type: 'text', label: 'Amount', required: true },\r\n        { name: 'date', type: 'text', label: 'Date', required: true },\r\n        { name: 'comments', type: 'textarea', label: 'Comments' },\r\n    ]\r\n\r\n    if ( type && error ) {\r\n        return <p className=\"text-danger\">{error}</p>\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-wrapper mx-auto py-4 px-3\">\r\n            <h4 className=\"heading mb-3\">{ type === 0 ? 'Add' : 'Update' } Cash flow</h4>\r\n\r\n            <form name=\"cashflow\" className=\"pre-disabled\" onSubmit={submitHandler}>\r\n                <select name=\"type\" className=\"custom-select custom-select-sm d-inline\" value={inputs['type']} onChange={_handleChange} required>\r\n                    { ! type ? <option value=\"\">Type</option> : null }\r\n                    <option value=\"1\">CREDIT</option>\r\n                    <option value=\"0\">DEBIT</option>\r\n                </select>\r\n\r\n                <hr />\r\n\r\n                { fields.map (\r\n                    (field) => field.name === 'date'\r\n                    ? <DateTime key={field.name} name={field.name} label={field.label} value={inputs[field.name]} handleChange={handleDate} />\r\n                    : <Field key={field.name} field={field} value={inputs[field.name]} handleChange={field.name === 'account_id' ? handleAccount : _handleChange} />\r\n                ) }\r\n\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <button type=\"submit\" className=\"btn\" id=\"submit\"><FontAwesomeIcon icon=\"save\" /> Save</button>\r\n                    { type ? <button type=\"button\" className=\"btn\" onClick={handleDelete}><FontAwesomeIcon icon=\"trash\" /> Delete</button> : null }                    \r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default connect()(AddCashFlow)\r\n","import axios from 'axios'\r\n\r\nconst fakeReviews = () => axios.get('/cashflows').then( response => response , error => Promise.reject(error) )\r\n\r\nexport default fakeReviews\r\n","export const options = {\r\n    create: false,\r\n    columnOrder: [],\r\n    download: true,\r\n    filter: true,\r\n    page: 1,\r\n    pagination: true,\r\n    rowsPerPage: 10,\r\n    rowsPerPageOptions: [5, 10, 15, 25, 50],\r\n    search: true,\r\n    select: false,\r\n    sort: true,    \r\n    sortOrder: {},\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Search = ({filters, _push}) => {\r\n    const searchHandler = e => {\r\n        let q = e.target.value\r\n\r\n        if (q) {\r\n            _push({ filter: JSON.stringify({ ...filters, ...{q} }) })\r\n        } else {\r\n            delete filters.q\r\n            _push({ filter: JSON.stringify(filters) })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"_search\">\r\n            <input type=\"search\" className=\"form-control form-control-sm\" placeholder=\"Search\" defaultValue={filters.q} onInput={searchHandler} />\r\n        </div>        \r\n    )\r\n}\r\n\r\nSearch.propTypes = { \r\n    filters: PropTypes.object.isRequired,\r\n    _push: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { csv } from '../../../helpers'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const Download = ({title, data}) => <button className=\"btn btn-sm\" onClick={ () => csv(data, title) }><FontAwesomeIcon icon=\"download\" /> Export</button>\r\n\r\nDownload.propTypes = { title: PropTypes.string.isRequired, data: PropTypes.array.isRequired }\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Create = ({to = '/'}) => (\r\n    <Link to={to} className=\"btn btn-sm anchor mr-2\">\r\n        <FontAwesomeIcon icon=\"plus\" /> Create\r\n    </Link>    \r\n)\r\n\r\nCreate.propTypes = { to: PropTypes.string }\r\n","import React from 'react'\r\nimport startCase from 'lodash/startCase'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Dropdown, ButtonGroup } from 'react-bootstrap'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddFilter = ({ columns, displayedFilters, setDisplayedFilters, filterHandler }) => {\r\n    const handler = filter => {\r\n        setDisplayedFilters(displayedFilters.concat(filter))\r\n        filterHandler(filter)\r\n    }\r\n    \r\n    const filterableColumns = columns.filter( item => item.options.filterable ).map( item => item.name )\r\n\r\n    if ( filterableColumns.every( field => displayedFilters.includes(field) ) ) return null\r\n\r\n    return (\r\n        <Dropdown as={ButtonGroup}>\r\n            <Dropdown.Toggle as=\"a\" id=\"filter-dropdown\" bsPrefix=\"btn btn-sm anchor mr-2\">\r\n                <FontAwesomeIcon icon=\"filter\" /> Add Filter\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n                {\r\n                    filterableColumns.map( (field, i) => displayedFilters.includes(field) ? null : (\r\n                        <Dropdown.Item as=\"button\" key={i}onClick={ () => handler(field) }>\r\n                            {startCase(field)}\r\n                        </Dropdown.Item>                          \r\n                    ) )\r\n                }\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    )\r\n}\r\n\r\nAddFilter.propTypes = { \r\n    columns: PropTypes.array,\r\n    displayedFilters: PropTypes.array.isRequired,\r\n    setDisplayedFilters: PropTypes.func.isRequired,\r\n    filterHandler: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport startCase from 'lodash/startCase'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport PropTypes from 'prop-types'\r\nimport { Select } from '../../fragment/form-elements'\r\n\r\nexport const DisplayFilter = ({ data, displayedFilters, qFilters, filterHandler, removeFilter }) => {\r\n    return displayedFilters.map( f => (\r\n        <div key={f} className=\"d-flex align-items-center ml-3\">\r\n            <span className=\"mr-2\" onClick={() => removeFilter(f)}><FontAwesomeIcon icon=\"times\" /></span>\r\n            <Select\r\n                key={f}\r\n                name={f}\r\n                label={startCase(f)}\r\n                value={qFilters[f]}\r\n                values={[...new Set(data.map(item => item[f.toLowerCase()]))]}\r\n                handleChange={(e, filter) => filterHandler(filter, e.target.value)}\r\n            />\r\n        </div>\r\n    ) )  \r\n}\r\n\r\nDisplayFilter.propTypes = { \r\n    data: PropTypes.array.isRequired,\r\n    displayedFilters: PropTypes.array.isRequired,\r\n    qFilters: PropTypes.object.isRequired,\r\n    filterHandler: PropTypes.func.isRequired,\r\n    removeFilter: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Search } from './Search'\r\nimport { Download } from './Download'\r\nimport { Create } from './Create'\r\nimport { AddFilter } from './AddFilter'\r\nimport { DisplayFilter } from './DisplayFilter'\r\n\r\nexport const Filter = ({ title, columns, data, filteredData, displayedFilters, setDisplayedFilters, qFilters, options, path, _push }) => {\r\n    const filterHandler = (filter, input = '') => {\r\n        _push({ page: 1, filter: JSON.stringify({ ...qFilters, ...{ [filter]: input } }) })\r\n    }\r\n\r\n    const removeFilter = filter => {\r\n        delete qFilters[filter]\r\n        \r\n        setDisplayedFilters(displayedFilters.filter(item => item !== filter))\r\n        _push({ page: 1, filter: JSON.stringify(qFilters) })\r\n    }\r\n\r\n    return (\r\n        <div className=\"toolbar-root d-flex justify-content-between mb-4\">\r\n            <div className=\"d-flex\">\r\n                { options.search ? <Search filters={qFilters} _push={_push} /> : null }\r\n                \r\n                <DisplayFilter\r\n                    data={data}\r\n                    displayedFilters={displayedFilters}\r\n                    qFilters={qFilters}\r\n                    filterHandler={filterHandler}\r\n                    removeFilter={removeFilter}\r\n                />                     \r\n            </div>\r\n\r\n            <div>\r\n                { options.create ? <Create to={`${path}/create`} /> : null }\r\n\r\n                { options.filter ? <AddFilter\r\n                    columns={columns}\r\n                    displayedFilters={displayedFilters}\r\n                    setDisplayedFilters={setDisplayedFilters}\r\n                    filterHandler={filterHandler}\r\n                /> : null }\r\n                \r\n                { options.download ? <Download title={title} data={filteredData} /> : null }                  \r\n            </div>\r\n        </div>    \r\n    )\r\n}\r\n\r\nFilter.propTypes = { \r\n    columns: PropTypes.array,\r\n    data: PropTypes.array.isRequired,\r\n    filteredData: PropTypes.array.isRequired,\r\n    displayedFilters: PropTypes.array.isRequired,\r\n    setDisplayedFilters: PropTypes.func.isRequired,\r\n    qFilters: PropTypes.object.isRequired,\r\n    options: PropTypes.object.isRequired,\r\n    _push: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\nconst Checker = ({ circle = false, value = '', handleChange }) => (\r\n    <span className=\"d-flex\">\r\n        <input type=\"checkbox\" className={classNames('fancy-input ', { round: circle })} value={value} onChange={handleChange} />\r\n    </span>\r\n)\r\n\r\nChecker.propTypes = { handleChange: PropTypes.func.isRequired }\r\n\r\nexport default Checker\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport classNames from 'classnames'\r\nimport Checker from '../checker'\r\n\r\nexport const TableHead = ({columns, checkHandler, query, _push, options}) => {\r\n    const sortHandler = text => {\r\n        const txt = text.toLowerCase()\r\n        const order = (query.sort === txt) ? query.order === 'asc' ? 'desc' : 'asc' : 'asc'\r\n        _push({ sort: txt, page: 1, order })\r\n    }\r\n\r\n    const arrow = field => (field.toLowerCase() === query.sort) ?\r\n    <FontAwesomeIcon\r\n        className=\"small\"\r\n        icon={query.order === 'asc' ? 'arrow-up' : 'arrow-down'}\r\n    /> : null\r\n\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                { options.select ? (\r\n                    <th>\r\n                        <Checker circle={true} value=\"all\" handleChange={checkHandler} />\r\n                    </th>                    \r\n                ) : null }\r\n\r\n                {\r\n                    columns.map( (item, index) => {\r\n                        const s = item.options.sortable === undefined ? true : item.options.sortable\r\n\r\n                        return (\r\n                            <th key={index}>\r\n                                <span\r\n                                    className={classNames({ pointer: options.sort && s })}\r\n                                    onClick={ () => options.sort && s ? sortHandler(item.name) : null }\r\n                                >{item.label} {arrow(item.name)}</span>\r\n                            </th>                                \r\n                        )\r\n                    } )\r\n                }\r\n            </tr>\r\n        </thead>        \r\n    )\r\n}\r\n\r\nTableHead.propTypes = {\r\n    columns: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\r\n    checkHandler: PropTypes.func.isRequired,\r\n    query: PropTypes.object.isRequired,\r\n    options: PropTypes.object.isRequired,\r\n    _push: PropTypes.func.isRequired    \r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Checker from '../checker'\r\n\r\nexport const TableBody = ({columns, data, checkHandler, options}) => (\r\n    <tbody>\r\n        {\r\n            data.map( (item, rowIndex) => (\r\n                <tr key={rowIndex}>\r\n                    { options.select ? (\r\n                        <td>\r\n                            <Checker circle={true} value={`id here`} handleChange={checkHandler} />\r\n                        </td>                \r\n                    ) : null }\r\n\r\n                    { columns.map( (col, index) => <td key={index}>{'render' in col.options ? col.options.render(item[col.name], rowIndex) : item[col.name]}</td> ) }\r\n                </tr>                    \r\n            ) )\r\n        }\r\n    </tbody>    \r\n)\r\n\r\nTableBody.propTypes = {\r\n    columns: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\r\n    data: PropTypes.array.isRequired,\r\n    checkHandler: PropTypes.func.isRequired,\r\n    options: PropTypes.object.isRequired,  \r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { TableHead } from './TableHead'\r\nimport { TableBody } from './TableBody'\r\n\r\nexport const Table = ({columns, data, options, query, setSelected, _push}) => {\r\n    const checkHandler = e => setSelected([1])\r\n\r\n    return (\r\n        <table className=\"table table-sm border-normal\">\r\n            <TableHead\r\n                columns={columns}\r\n                checkHandler={checkHandler}\r\n                query={query}\r\n                options={options}\r\n                _push={_push}\r\n            />\r\n            \r\n            <TableBody\r\n                columns={columns}\r\n                data={data}\r\n                checkHandler={checkHandler}\r\n                options={options}                    \r\n            />\r\n        </table>    \r\n    )\r\n}\r\n\r\nTable.propTypes = {\r\n    columns: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\r\n    data: PropTypes.array.isRequired,\r\n    options: PropTypes.object.isRequired,  \r\n    query: PropTypes.object.isRequired,\r\n    setSelected: PropTypes.func.isRequired,\r\n    _push: PropTypes.func.isRequired    \r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const PageMenu = ({ perPage, rowsPerPageOptions, _push }) => (\r\n    <>\r\n        <label>Rows per page:</label>\r\n\r\n        <select\r\n            className=\"border-0 mr-4 pl-1 font-weight-bold\"\r\n            value={perPage}\r\n            onChange={e => _push({\r\n                page: 1,\r\n                perPage: e.currentTarget.value\r\n            })}\r\n        >\r\n            {rowsPerPageOptions.map( (len, i) => <option key={i} value={len}>{len}</option> )}\r\n        </select>\r\n    </>\r\n)\r\n\r\nPageMenu.propTypes = {\r\n    perPage: PropTypes.number.isRequired,\r\n    rowsPerPageOptions: PropTypes.array.isRequired,\r\n    _push: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Navigation = ({ total, part, page, perPage, _push }) => {\r\n    const pageHandler = page => _push({page})\r\n    \r\n    const info = (current, perPage, part, total) => {\r\n        let i = current - 1,\r\n            to = current === part ? total : current * perPage\r\n\r\n        return `${i * perPage + 1} - ${to} of ${total}`\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { part > 1 ? <span className=\"info mr-4\">{info(page, perPage, part, total)}</span> : null }\r\n\r\n            <span className=\"control\">\r\n                <button className=\"btn\" disabled={page === 1} onClick={() => pageHandler(page - 1)}><FontAwesomeIcon icon=\"chevron-left\" /></button>\r\n                <label>{page} of {part}</label>\r\n                <button className=\"btn\" disabled={page === part} onClick={() => pageHandler(page + 1)}><FontAwesomeIcon icon=\"chevron-right\" /></button>\r\n            </span>\r\n        </>\r\n    )\r\n}\r\n\r\nNavigation.propTypes = { \r\n    total: PropTypes.number.isRequired,\r\n    part: PropTypes.number.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    perPage: PropTypes.number.isRequired,\r\n    _push: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { PageMenu } from './PageMenu'\r\nimport { Navigation } from './Navigation'\r\n\r\nexport const Pagination = ({ rowsPerPageOptions, page, perPage, total, part, _push }) => (\r\n    <div className=\"d-flex align-items-center justify-content-end\">\r\n        <PageMenu\r\n            perPage={perPage}\r\n            rowsPerPageOptions={rowsPerPageOptions}\r\n            _push={_push}\r\n        />\r\n\r\n        <Navigation\r\n            total={total}\r\n            part={part}\r\n            page={page}\r\n            perPage={perPage}\r\n            _push={_push}                    \r\n        />\r\n    </div>    \r\n)\r\n\r\nPagination.propTypes = {\r\n    rowsPerPageOptions: PropTypes.array.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    perPage: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    part: PropTypes.number.isRequired,\r\n    _push: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withRouter } from 'react-router-dom'\r\nimport queryString from 'query-string'\r\nimport { options as defs } from './defaults'\r\nimport { structuredData, structuredColumns } from './manipulator'\r\nimport { Filter, Table, Pagination } from './components'\r\n\r\nconst DersureTable = ({ location, ...props }) => {\r\n    const options = {...defs, ...props.options}\r\n    const query = location.search\r\n    ? queryString.parse(location.search)\r\n    : { filter: JSON.stringify({}), sort: options.sortOrder.name, order: options.sortOrder.direction, page: options.page, perPage: options.rowsPerPage }\r\n\r\n    const columns = structuredColumns(props.columns, props.columnDefs)\r\n    const { filterable, filtered, chunked, batch } = structuredData(columns, props.data, options, query)\r\n    const path = location.pathname\r\n    const query_filters = JSON.parse(query.filter)\r\n\r\n    const [ displayedFilters, setDisplayedFilters ] = useState(Object.keys(query_filters).filter(item => item !== 'q'))\r\n    const [ selected, setSelected ] = useState([])\r\n\r\n    const _push = options => props.history.push(`${path}?${queryString.stringify({ ...query, ...options })}`)\r\n\r\n    return (\r\n        <>\r\n            <Filter\r\n                title={props.title}\r\n                columns={columns}\r\n                data={filterable}\r\n                filteredData={filtered}\r\n                displayedFilters={displayedFilters}\r\n                setDisplayedFilters={setDisplayedFilters}\r\n                qFilters={query_filters}\r\n                options={options}\r\n                path={props.match.path}\r\n                _push={_push}            \r\n            />\r\n            \r\n            { (batch.length > 0) ? (\r\n                <>\r\n                    <Table\r\n                        columns={columns}\r\n                        data={batch}\r\n                        options={options}    \r\n                        query={query}\r\n                        setSelected={setSelected}\r\n                        _push={_push}                                        \r\n                    />\r\n                    \r\n                    <Pagination\r\n                        rowsPerPageOptions={options.rowsPerPageOptions}\r\n                        page={parseInt(query.page)}\r\n                        perPage={parseInt(query.perPage)}\r\n                        total={filtered.length}\r\n                        part={chunked.length}                            \r\n                        _push={_push}                    \r\n                    />\r\n                </>\r\n            ) : (\r\n                <div className=\"alert alert-primary\" role=\"alert\">\r\n                    No results found!\r\n                </div>\r\n            ) }                                \r\n        </>                \r\n    )\r\n}\r\n\r\nDersureTable.defaultProps = {\r\n    title: '',\r\n    options: {},\r\n    columnDefs: []\r\n}\r\n\r\nDersureTable.propTypes = {\r\n    title: PropTypes.string,  \r\n    columns: PropTypes.array.isRequired,\r\n    data: PropTypes.array.isRequired,\r\n    options: PropTypes.object.isRequired,\r\n    columnDefs: PropTypes.array\r\n}\r\n\r\nexport default withRouter(DersureTable)\r\n","import { _object } from '../../../helpers'\r\nimport { chunk, orderBy } from 'lodash'\r\n\r\nexport const structuredColumns = (columns, columnDefs) => {\r\n    /**\r\n     * Transform data from array of Strings to array of Objects\r\n     * \r\n     * Add property defined in columnDefs to columns options \r\n     * \r\n     * A property defines in columns options will take priority over\r\n     * any value for that property defined in columnDefs\r\n     * \r\n     * Properties which are higher in the columnDefs option array\r\n     * will take priority over those below\r\n     */\r\n    try {\r\n        columns = columns.map( field => typeof(field) === 'object' ? field : {\r\n            name: field.toLowerCase(),\r\n            label: field,\r\n            options: {}\r\n        } )\r\n        \r\n        for ( let defs of columnDefs ) {\r\n            const targets = Array.isArray(defs.targets) ? defs.targets : [defs.targets]\r\n            delete defs.targets\r\n    \r\n            for ( let target of targets ) {\r\n                if ( columns[target] ) {\r\n                    columns[target].options = {...defs, ...columns[target].options}\r\n                }\r\n            }\r\n        }\r\n    } catch (error) {\r\n        throw new Error('Bad columns data: Must be either an array of simple strings or objects describing a column.')\r\n    }\r\n\r\n    return columns\r\n}\r\n\r\nexport const structuredData = (columns, data, options, query) => {\r\n    /**\r\n     * Transform data of array Arrays to array Objects\r\n     * \r\n     * structuredData data with different options available\r\n     */\r\n    const filter = _object.clean(JSON.parse(query.filter))\r\n\r\n    const filterable = data.map( item => {\r\n        if ( columns.length > item.length ) {\r\n            throw new Error('Unmatch columns/data definitions: Columns definition must not be more that corresponding data definition.')\r\n        }\r\n\r\n        if ( ! Array.isArray(item) ) return item\r\n\r\n        let obj = {}\r\n        for ( const [i, v] of columns.entries() ) {\r\n            obj[v.name] = item[i]\r\n        }\r\n\r\n        return obj\r\n    } )\r\n\r\n    let filtered = filterable\r\n\r\n    for ( let key in filter ) {\r\n        filtered = filtered.filter( item => (key === 'q') ? Object.values(item).join(' ').toUpperCase().indexOf(filter[key].toUpperCase()) > -1 : item[key] === filter[key] )\r\n    }\r\n\r\n    const orderData = options.sort ? orderBy(filtered, [query.sort], [query.order]) : filtered\r\n    const chunkData = chunk(orderData, parseInt(query.perPage))\r\n    const batchKey = parseInt(query.page) - 1\r\n\r\n    return {\r\n        filterable,\r\n        filtered,\r\n        chunked: chunkData,\r\n        batch: chunkData[batchKey] ? chunkData[batchKey] : []\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport truncate from 'lodash/truncate'\r\nimport fakeReviews from './reviews.service'\r\nimport { alertActions } from '../../actions'\r\nimport { _object, csv, dateFormatter } from '../../helpers'\r\nimport DersureTable from '../fragment/Table'\r\nimport { Rating } from '../fragment'\r\n\r\nconst Reviews = ({ dispatch }) => {\r\n    const [ data, setData ] = useState([])\r\n    const [ loaded, setLoaded ] = useState(false)\r\n    const translateStatus = ['pending', 'accepted', 'rejected']\r\n\r\n    useEffect(() => {\r\n        let faker = require('faker'), fake = [], _date = new dateFormatter()\r\n\r\n        for ( let counter = 1; counter <= 60; counter++ ) {\r\n            let obj = {\r\n                id: counter,\r\n                date: _date.getTime(faker.date.recent()),\r\n                customer: faker.name.findName(),\r\n                product: faker.commerce.productName(),\r\n                rating: faker.random.number({ min: 1, max: 5 }),\r\n                comment: faker.lorem.words(20),\r\n                status: translateStatus[faker.random.number(2)],\r\n            }\r\n\r\n            let arr = [\r\n                _date.getTime(faker.date.recent()),\r\n                faker.name.findName(),\r\n                faker.commerce.productName(),\r\n                faker.random.number({ min: 1, max: 5 }),\r\n                faker.lorem.words(20),\r\n                translateStatus[faker.random.number(2)],\r\n            ]\r\n\r\n            fake.push(arr)\r\n        }\r\n        \r\n        setData(fake)\r\n        setLoaded(true)\r\n\r\n        fakeReviews()\r\n            .then(\r\n                response => {\r\n                    //setData(response.data)\r\n                    //setLoaded(true)\r\n                },\r\n                error => {\r\n                    let msg\r\n                    if ( error.response ) {\r\n                        msg = error.response.status !== 500 ? error.response.data : 'Oops, something went wrong'\r\n                    } else {\r\n                        msg = error.toString()\r\n                    }\r\n                    dispatch(alertActions.error(msg))\r\n                }\r\n            )  \r\n    }, [])\r\n\r\n    if ( loaded ) {    \r\n        if ( data.length > 0 ) {\r\n            const columns = ['Date', 'Customer', 'Product', 'Rating', 'Comment', 'Status']\r\n            const options = {\r\n                sortOrder: {\r\n                    name: 'date',\r\n                    direction: 'desc',\r\n                }\r\n            }\r\n            const columns2 = [\r\n                { name: 'date', label: 'Date', options: { filterable: false, sortable: true, } },\r\n                { name: 'customer', label: 'Customer', options: { filterable: true, sortable: true, } },\r\n                { name: 'product', label: 'Product', options: { filterable: true, sortable: true, } },\r\n                { name: 'rating', label: 'Rating', options: { filterable: false, sortable: true, } },\r\n                { name: 'comment', label: 'Comment', options: { filterable: false, sortable: false, } },\r\n                { name: 'status', label: 'Status', options: { filterable: true, sortable: true, } },\r\n            ]\r\n\r\n            const columnDefs = [\r\n                {\r\n                    render: ( data, rowIndex ) => <Rating rate={data} />,\r\n                    targets: [3]\r\n                },                \r\n                {\r\n                    render: text => truncate( text, { length: 50, separator: /,? +/ } ),\r\n                    targets: [4]\r\n                },\r\n                {\r\n                    sortable: false,\r\n                    targets: [0, 4]\r\n                },\r\n                {\r\n                    visible: false,\r\n                    targets: 5\r\n                },          \r\n            ]\r\n\r\n            return (\r\n                <div> \r\n                    <DersureTable\r\n                        title=\"Product Reviews\"\r\n                        columns={columns}\r\n                        data={data}\r\n                        options={options}\r\n                        columnDefs={columnDefs}\r\n                    />                        \r\n                </div>                \r\n            )\r\n        } else {\r\n            return <p className=\"h5\">No results found</p>\r\n        }\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nexport default connect()(Reviews)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Route, Link, Switch } from 'react-router-dom'\r\nimport Show from './Show'\r\nimport Add from './Add'\r\nimport './products.scss'\r\nimport Reviews from './Reviews'\r\n\r\nconst Categories = () => <h2>This is the Categories of our products</h2>\r\n\r\nconst Products = ({ match }) => (\r\n    <>\r\n        <Route exact path={match.path} render={ props => <Show {...props} /> } />\r\n        <Switch>\r\n            <Route path={`${match.path}/add`} render={ () => <Add type={0} /> } />\r\n            <Route path={`${match.path}/categories`} render={ props => <Categories {...props} />  } />\r\n            <Route path={`${match.path}/reviews`} render={ props => <Reviews {...props} />  } />\r\n            <Route path={`${match.path}/:id`} render={ props => <Add type={1} {...props} /> } />\r\n        </Switch>\r\n    </>  \r\n)\r\n\r\nexport default Products\r\n","import DashBoard from './Home'\r\nimport * as Purchase from './purchases'\r\nimport * as Sales from './sales'\r\nimport Stock from './stock'\r\nimport Settings from '../containers/AppSettings'\r\nimport CashFlow from './cashflow'\r\nimport SFA from './sfa'\r\nimport Products from './products'\r\n\r\nexport default {\r\n    DashBoard,\r\n    Purchase,\r\n    Sales,\r\n    Stock,\r\n    Settings,\r\n    CashFlow,\r\n    SFA,\r\n    Products\r\n}\r\n","import Components from '../components/routeComponents'\r\n\r\nconst routes = [\r\n    {\r\n        id: 1,\r\n        path: \"/\",\r\n        exact: true,\r\n        component: Components.DashBoard\r\n    },\r\n\r\n    {\r\n        id: 2,\r\n        path: \"/sales_orders\",\r\n        component: Components.Sales.Orders\r\n    },\r\n\r\n    {\r\n        id: 3,\r\n        path: \"/sales_invoices\",\r\n        component: Components.Sales.Invoices\r\n    },\r\n\r\n    {\r\n        id: 4,\r\n        path: \"/sales_returns\",\r\n        component: Components.Sales.Returns\r\n    },\r\n\r\n    {\r\n        id: 5,\r\n        path: \"/purchase_orders\",\r\n        component: Components.Purchase.Orders\r\n    },\r\n\r\n    {\r\n        id: 6,\r\n        path: \"/purchase_invoices\",\r\n        component: Components.Purchase.Invoices\r\n    },\r\n\r\n    {\r\n        id: 7,\r\n        path: \"/purchase_returns\",\r\n        component: Components.Purchase.Returns\r\n    },\r\n\r\n    {\r\n        id: 8,\r\n        path: \"/stock\",\r\n        component: 10000\r\n    },\r\n\r\n    {\r\n        id: 9,\r\n        path: \"/settings\",\r\n        component: Components.Settings\r\n    },\r\n\r\n    {\r\n        id: 10,\r\n        path: \"/cashflow\",\r\n        component: Components.CashFlow\r\n    },\r\n\r\n    {\r\n        id: 11,\r\n        path: \"/sfa\",\r\n        component: Components.SFA\r\n    },\r\n\r\n    {\r\n        id: 12,\r\n        path: \"/products\",\r\n        component: Components.Products\r\n    }    \r\n]\r\n\r\nexport default routes","import { jwtToken } from '../helpers/jwt-token'\r\n\r\nconst app = {\r\n    apiUrl: 'https://ladyofrosary.ng/backend/api',\r\n    jwt: jwtToken(),\r\n    name: 'Guard Technologies',\r\n}\r\n\r\nexport default app\r\n","\r\nexport const menu_items = [\r\n    {\r\n        id: 1,\r\n        path: '/',\r\n        icon: 'money-bill',\r\n        label: 'Dashboard'\r\n    },\r\n\r\n    {\r\n        id: 2,\r\n        path: '#',\r\n        icon: 'shopping-cart',\r\n        label: 'Sales',\r\n        children: [\r\n            {\r\n                id: 1,\r\n                path: '/sales_orders',\r\n                icon: 'shopping-cart',\r\n                label: 'Orders'\r\n            },\r\n        \r\n            {\r\n                id: 2,\r\n                path: '/sales_invoices',\r\n                icon: 'calendar',\r\n                label: 'Invoices'\r\n            },\r\n        \r\n            {\r\n                id: 3,\r\n                path: '/sales_returns',\r\n                icon: 'calendar',\r\n                label: 'Returns'\r\n            }\r\n        ]\r\n    },\r\n    \r\n    {\r\n        id: 3,\r\n        path: '#',\r\n        icon: 'shopping-bag',\r\n        label: 'Purchase',\r\n        children: [\r\n            {\r\n                id: 1,\r\n                path: '/purchase_orders',\r\n                icon: 'shopping-bag',\r\n                label: 'Orders'\r\n            },\r\n        \r\n            {\r\n                id: 2,\r\n                path: '/purchase_invoices',\r\n                icon: 'calendar',\r\n                label: 'Invoices'\r\n            },\r\n        \r\n            {\r\n                id: 3,\r\n                path: '/purchase_returns',\r\n                icon: 'calendar',\r\n                label: 'Returns'\r\n            }\r\n        ]\r\n    },\r\n    \r\n    {\r\n        id: 4,\r\n        path: '#',\r\n        icon: [ 'fab', 'salesforce' ],\r\n        label: 'SFA',\r\n        children: [\r\n            {\r\n                id: 1,\r\n                path: '/sfa/sales',\r\n                icon: 'shopping-cart',\r\n                label: 'Sales'\r\n            },\r\n        \r\n            {\r\n                id: 2,\r\n                path: '#',\r\n                icon: 'users',\r\n                label: 'Customers',\r\n                children: [\r\n                    {\r\n                        id: 1,\r\n                        path: '/sfa/customers',\r\n                        icon: 'users',\r\n                        label: 'Customers'\r\n                    },\r\n\r\n                    {\r\n                        id: 2,\r\n                        path: '/sfa/customers/segments',\r\n                        icon: 'users',\r\n                        label: 'Segments'\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \r\n    {\r\n        id: 5,\r\n        path: '/cashflow',\r\n        icon: 'money-bill',\r\n        label: 'Cash Flows'\r\n    },\r\n    \r\n    {\r\n        id: 6,\r\n        path: '#',\r\n        icon: [ 'fab', 'salesforce' ],\r\n        label: 'Product',\r\n        children: [\r\n            {\r\n                id: 1,\r\n                path: '/products',\r\n                icon: 'shopping-cart',\r\n                label: 'Products'\r\n            },\r\n\r\n            {\r\n                id: 2,\r\n                path: '/products/categories',\r\n                icon: 'users',\r\n                label: 'Categories'\r\n            },\r\n\r\n            {\r\n                id: 3,\r\n                path: '/products/reviews',\r\n                icon: 'users',\r\n                label: 'Reviews'\r\n            }\r\n        ]\r\n    },\r\n]\r\n"],"sourceRoot":""}